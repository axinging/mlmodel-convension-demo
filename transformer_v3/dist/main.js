(()=>{var e,t,n,r,a,i,s={44:(e,t,n)=>{"use strict";n.a(e,(async(e,t)=>{try{var r=n(228);const e=await(0,r.TkF)("automatic-speech-recognition","Xenova/wav2vec2-bert-CV16-en",{device:"wasm",dtype:"fp32"}),a="https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav",i=await e(a);console.log(i),t()}catch(e){t(e)}}),1)},52:()=>{},143:()=>{},603:()=>{},806:()=>{},9:()=>{},837:()=>{},499:()=>{},228:(e,t,n)=>{"use strict";n.d(t,{TkF:()=>Lw});var r={};n.r(r),n.d(r,{InferenceSession:()=>Se,TRACE:()=>be,TRACE_FUNC_BEGIN:()=>$e,TRACE_FUNC_END:()=>xe,Tensor:()=>we,TrainingSession:()=>Ce,default:()=>Ld,env:()=>ae,registerBackend:()=>J});var a=n(9),i=n(837),s=n(499);const o="undefined"!=typeof self,l=o&&"DedicatedWorkerGlobalScope"===self.constructor.name,u=o&&"caches"in self,d="undefined"!=typeof navigator&&"gpu"in navigator,c="undefined"!=typeof process,p=c&&"node"===process?.release?.name,h=!v(a),f=!v(i),m=Object.freeze({IS_BROWSER_ENV:o,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:u,IS_WEBGPU_AVAILABLE:d,IS_PROCESS_AVAILABLE:c,IS_NODE_ENV:p,IS_FS_AVAILABLE:h,IS_PATH_AVAILABLE:f}),g=h&&f,_=g?i.dirname(i.dirname(s.fileURLToPath("file:///C:/code/mlmodel-demo/transformer_v3/node_modules/@xenova/transformers/src/env.js"))):"./",y=g?i.join(_,"/.cache/"):null,w="/models/",b={version:"3.0.0-alpha.0",backends:{onnx:{},tfjs:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!o,localModelPath:g?i.join(_,w):w,useFS:h,useBrowserCache:u,useFSCache:h,cacheDir:y,useCustomCache:!1,customCache:null};function v(e){return 0===Object.keys(e).length}const $=class{constructor(){let e=function(...t){return e._call(...t)};return Object.setPrototypeOf(e,new.target.prototype)}_call(...e){throw Error("Must implement _call method in subclass")}};function x(e,t){e&&e(t)}function k(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function S(e){const t=[];let n=e;for(;Array.isArray(n);)t.push(n.length),n=n[0];return t}function E(...e){return Array.prototype.concat.apply([],e)}function C(...e){return e.reduce(((e,t)=>e.flatMap((e=>t.map((t=>[e,t]))))))}function A(e,t){return Math.abs((e+t)%(2*t)-t)}function I(e,t){return Object.assign({},...t.map((t=>{if(void 0!==e[t])return{[t]:e[t]}})))}var T=n(143),z=n(603);class O{_CONTENT_TYPE_MAP={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};constructor(e){if(this.filePath=e,this.headers=new Headers,this.exists=T.existsSync(e),this.exists){this.status=200,this.statusText="OK";let t=T.statSync(e);this.headers.set("content-length",t.size.toString()),this.updateContentType();let n=this;this.body=new ReadableStream({start(e){n.arrayBuffer().then((t=>{e.enqueue(new Uint8Array(t)),e.close()}))}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const e=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",this._CONTENT_TYPE_MAP[e]??"application/octet-stream")}clone(){let e=new O(this.filePath);return e.exists=this.exists,e.status=this.status,e.statusText=this.statusText,e.headers=new Headers(this.headers),e}async arrayBuffer(){return(await T.promises.readFile(this.filePath)).buffer}async blob(){const e=await T.promises.readFile(this.filePath);return new Blob([e],{type:this.headers.get("content-type")})}async text(){return await T.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function M(e,t=null,n=null){let r;try{r=new URL(e)}catch(e){return!1}return!(t&&!t.includes(r.protocol)||n&&!n.includes(r.hostname))}async function R(e){if(b.useFS&&!M(e,["http:","https:","blob:"]))return new O(e);if("undefined"!=typeof process&&"node"===process?.release?.name){const t=!!process.env?.TESTING_REMOTELY,n=b.version,r=new Headers;if(r.set("User-Agent",`transformers.js/${n}; is_ci/${t};`),M(e,["http:","https:"],["huggingface.co","hf.co"])){const e=process.env?.HF_TOKEN??process.env?.HF_ACCESS_TOKEN;e&&r.set("Authorization",`Bearer ${e}`)}return fetch(e,{headers:r})}return fetch(e)}const P={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};class B{constructor(e){this.path=e}async match(e){let t=z.join(this.path,e),n=new O(t);return n.exists?n:void 0}async put(e,t){const n=Buffer.from(await t.arrayBuffer());let r=z.join(this.path,e);try{await T.promises.mkdir(z.dirname(r),{recursive:!0}),await T.promises.writeFile(r,n)}catch(e){console.warn("An error occurred while writing the file to cache:",e)}}}async function D(e,t,n=!0,r={}){if(!b.allowLocalModels){if(r.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!b.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}let a;if(x(r.progress_callback,{status:"initiate",name:e,file:t}),!a&&b.useBrowserCache){if("undefined"==typeof caches)throw Error("Browser cache is not available in this environment.");try{a=await caches.open("transformers-cache")}catch(e){console.warn("An error occurred while opening the browser cache:",e)}}if(!a&&b.useFSCache&&(a=new B(r.cache_dir??b.cacheDir)),!a&&b.useCustomCache){if(!b.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!b.customCache.match||!b.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");a=b.customCache}const i=r.revision??"main";let s,o,l=U(e,t),u=U(b.localModelPath,l),d=U(b.remoteHost,b.remotePathTemplate.replaceAll("{model}",e).replaceAll("{revision}",encodeURIComponent(i)),t),c="main"===i?l:U(e,i,t),p=a instanceof B?c:d,h=!1;a&&(o=await async function(e,...t){for(let n of t)try{let t=await e.match(n);if(t)return t}catch(e){continue}}(a,u,p));const f=void 0!==o;if(void 0===o){if(b.allowLocalModels)if(M(l,["http:","https:"])){if(r.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${l}.`);if(!b.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${l}.`)}else try{o=await R(u),s=u}catch(e){console.warn(`Unable to load from local path "${u}": "${e}"`)}if(void 0===o||404===o.status){if(r.local_files_only||!b.allowRemoteModels){if(n)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${u}".`);return null}if(o=await R(d),200!==o.status)return function(e,t,n){if(!n)return null;const r=P[e]??`Error (${e}) occurred while trying to load file`;throw Error(`${r}: "${t}".`)}(o.status,d,n);s=p}h=a&&"undefined"!=typeof Response&&o instanceof Response&&200===o.status}x(r.progress_callback,{status:"download",name:e,file:t});const m={status:"progress",name:e,file:t};let g;return r.progress_callback?f&&"undefined"!=typeof navigator&&/firefox/i.test(navigator.userAgent)?(g=new Uint8Array(await o.arrayBuffer()),x(r.progress_callback,{...m,progress:100,loaded:g.length,total:g.length})):g=await async function(e){const t=e.headers.get("Content-Length");null===t&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let n=parseInt(t??"0"),a=new Uint8Array(n),i=0;const s=e.body.getReader();return await async function e(){const{done:t,value:o}=await s.read();if(t)return;let l=i+o.length;if(l>n){n=l;let e=new Uint8Array(n);e.set(a),a=e}return a.set(o,i),i=l,(e=>{x(r.progress_callback,{...m,...e})})({progress:i/n*100,loaded:i,total:n}),e()}(),a}(o):g=new Uint8Array(await o.arrayBuffer()),h&&s&&void 0===await a.match(s)&&await a.put(s,new Response(g,{headers:o.headers})).catch((e=>{console.warn(`Unable to add response to browser cache: ${e}.`)})),x(r.progress_callback,{status:"done",name:e,file:t}),g}async function N(e,t,n=!0,r={}){let a=await D(e,t,n,r);if(null===a)return{};let i=new TextDecoder("utf-8").decode(a);return JSON.parse(i)}function U(...e){return(e=e.map(((t,n)=>(n&&(t=t.replace(new RegExp("^/"),"")),n!==e.length-1&&(t=t.replace(new RegExp("/$"),"")),t)))).join("/")}function W(e){const t=L(e)[0],n=e.map((e=>Math.exp(e-t))),r=n.reduce(((e,t)=>e+t),0);return n.map((e=>e/r))}function F(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]<t&&(t=e[r],n=r);return[t,n]}function L(e){if(0===e.length)throw Error("Array must not be empty");let t=e[0],n=0;for(let r=1;r<e.length;++r)e[r]>t&&(t=e[r],n=r);return[Number(t),n]}function V(e){return e>0&&!(e&e-1)}class G{constructor(e){if(this.size=0|e,this.size<=1||!V(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=e<<1,this.table=new Float64Array(2*this.size);for(let e=0;e<this.table.length;e+=2){const t=Math.PI*e/this.size;this.table[e]=Math.cos(t),this.table[e+1]=-Math.sin(t)}let t=0;for(let e=1;this.size>e;e<<=1)++t;this._width=t%2==0?t-1:t,this._bitrev=new Int32Array(1<<this._width);for(let e=0;e<this._bitrev.length;++e){this._bitrev[e]=0;for(let t=0;t<this._width;t+=2){const n=this._width-t-2;this._bitrev[e]|=(e>>>t&3)<<n}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(e,t){const n=t||new Array(e.length>>>1);for(let t=0;t<e.length;t+=2)n[t>>>1]=e[t];return n}toComplexArray(e,t){const n=t||this.createComplexArray();for(let t=0;t<n.length;t+=2)n[t]=e[t>>>1],n[t+1]=0;return n}transform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,1)}realTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._realTransform4(e,t,1)}inverseTransform(e,t){if(e===t)throw new Error("Input and output buffers must be different");this._transform4(e,t,-1);for(let t=0;t<e.length;++t)e[t]/=this.size}_transform4(e,t,n){const r=this._csize;let a,i,s=1<<this._width,o=r/s<<1;const l=this._bitrev;if(4===o)for(a=0,i=0;a<r;a+=o,++i){const n=l[i];this._singleTransform2(t,e,a,n,s)}else for(a=0,i=0;a<r;a+=o,++i){const r=l[i];this._singleTransform4(t,e,a,r,s,n)}const u=this.table;for(s>>=2;s>=2;s>>=2){o=r/s<<1;const t=o>>>2;for(a=0;a<r;a+=o){const r=a+t-1;for(let i=a,o=0;i<r;i+=2,o+=s){const r=i,a=r+t,s=a+t,l=s+t,d=e[r],c=e[r+1],p=e[a],h=e[a+1],f=e[s],m=e[s+1],g=e[l],_=e[l+1],y=u[o],w=n*u[o+1],b=p*y-h*w,v=p*w+h*y,$=u[2*o],x=n*u[2*o+1],k=f*$-m*x,S=f*x+m*$,E=u[3*o],C=n*u[3*o+1],A=g*E-_*C,I=g*C+_*E,T=d+k,z=c+S,O=d-k,M=c-S,R=b+A,P=v+I,B=n*(b-A),D=n*(v-I);e[r]=T+R,e[r+1]=z+P,e[a]=O+D,e[a+1]=M-B,e[s]=T-R,e[s+1]=z-P,e[l]=O-D,e[l+1]=M+B}}}}_singleTransform2(e,t,n,r,a){const i=e[r],s=e[r+1],o=e[r+a],l=e[r+a+1];t[n]=i+o,t[n+1]=s+l,t[n+2]=i-o,t[n+3]=s-l}_singleTransform4(e,t,n,r,a,i){const s=2*a,o=3*a,l=e[r],u=e[r+1],d=e[r+a],c=e[r+a+1],p=e[r+s],h=e[r+s+1],f=e[r+o],m=e[r+o+1],g=l+p,_=u+h,y=l-p,w=u-h,b=d+f,v=c+m,$=i*(d-f),x=i*(c-m);t[n]=g+b,t[n+1]=_+v,t[n+2]=y+x,t[n+3]=w-$,t[n+4]=g-b,t[n+5]=_-v,t[n+6]=y-x,t[n+7]=w+$}_realTransform4(e,t,n){const r=this._csize;let a,i,s=1<<this._width,o=r/s<<1;const l=this._bitrev;if(4===o)for(a=0,i=0;a<r;a+=o,++i){const n=l[i];this._singleRealTransform2(t,e,a,n>>>1,s>>>1)}else for(a=0,i=0;a<r;a+=o,++i){const r=l[i];this._singleRealTransform4(t,e,a,r>>>1,s>>>1,n)}const u=this.table;for(s>>=2;s>=2;s>>=2){o=r/s<<1;const t=o>>>1,i=t>>>1,l=i>>>1;for(a=0;a<r;a+=o)for(let r=0,o=0;r<=l;r+=2,o+=s){const s=a+r,d=s+i,c=d+i,p=c+i,h=e[s],f=e[s+1],m=e[d],g=e[d+1],_=e[c],y=e[c+1],w=e[p],b=e[p+1],v=h,$=f,x=u[o],k=n*u[o+1],S=m*x-g*k,E=m*k+g*x,C=u[2*o],A=n*u[2*o+1],I=_*C-y*A,T=_*A+y*C,z=u[3*o],O=n*u[3*o+1],M=w*z-b*O,R=w*O+b*z,P=v+I,B=$+T,D=v-I,N=$-T,U=S+M,W=E+R,F=n*(S-M),L=n*(E-R);if(e[s]=P+U,e[s+1]=B+W,e[d]=D+L,e[d+1]=N-F,0===r){e[c]=P-U,e[c+1]=B-W;continue}if(r===l)continue;const V=a+i-r,G=a+t-r;e[V]=D-n*L,e[V+1]=-N-n*F,e[G]=P-n*U,e[G+1]=n*W-B}}const d=r>>>1;for(let t=2;t<d;t+=2)e[r-t]=e[t],e[r-t+1]=-e[t+1]}_singleRealTransform2(e,t,n,r,a){const i=e[r],s=e[r+a];t[n]=i+s,t[n+1]=0,t[n+2]=i-s,t[n+3]=0}_singleRealTransform4(e,t,n,r,a,i){const s=2*a,o=3*a,l=e[r],u=e[r+a],d=e[r+s],c=e[r+o],p=l+d,h=l-d,f=u+c,m=i*(u-c);t[n]=p+f,t[n+1]=0,t[n+2]=h,t[n+3]=-m,t[n+4]=p-f,t[n+5]=0,t[n+6]=h,t[n+7]=m}}class H{constructor(e){const t=2*(e-1),n=2*(2*e-1),r=2**Math.ceil(Math.log2(n));this.bufferSize=r,this._a=t;const a=new Float64Array(n),i=new Float64Array(r);this._chirpBuffer=new Float64Array(r),this._buffer1=new Float64Array(r),this._buffer2=new Float64Array(r),this._outBuffer1=new Float64Array(r),this._outBuffer2=new Float64Array(r);const s=-2*Math.PI/e,o=Math.cos(s),l=Math.sin(s);for(let t=0;t<n>>1;++t){const n=(t+1-e)**2/2,r=Math.sqrt(o**2+l**2)**n,s=n*Math.atan2(l,o),u=2*t;a[u]=r*Math.cos(s),a[u+1]=r*Math.sin(s),i[u]=a[u],i[u+1]=-a[u+1]}this._slicedChirpBuffer=a.subarray(t,n),this._f=new G(r>>1),this._f.transform(this._chirpBuffer,i)}_transform(e,t,n){const r=this._buffer1,a=this._buffer2,i=this._outBuffer1,s=this._outBuffer2,o=this._chirpBuffer,l=this._slicedChirpBuffer,u=this._a;if(n)for(let e=0;e<l.length;e+=2){const n=e+1,a=t[e>>1];r[e]=a*l[e],r[n]=a*l[n]}else for(let e=0;e<l.length;e+=2){const n=e+1;r[e]=t[e]*l[e]-t[n]*l[n],r[n]=t[e]*l[n]+t[n]*l[e]}this._f.transform(i,r);for(let e=0;e<o.length;e+=2){const t=e+1;a[e]=i[e]*o[e]-i[t]*o[t],a[t]=i[e]*o[t]+i[t]*o[e]}this._f.inverseTransform(s,a);for(let t=0;t<s.length;t+=2){const n=s[t+u],r=s[t+u+1],a=l[t],i=l[t+1];e[t]=n*a-r*i,e[t+1]=n*i+r*a}}transform(e,t){this._transform(e,t,!1)}realTransform(e,t){this._transform(e,t,!0)}}class q{constructor(e){this.fft_length=e,this.isPowerOfTwo=V(e),this.isPowerOfTwo?(this.fft=new G(e),this.outputBufferSize=2*e):(this.fft=new H(e),this.outputBufferSize=this.fft.bufferSize)}realTransform(e,t){this.fft.realTransform(e,t)}transform(e,t){this.fft.transform(e,t)}}function j(e,t){if(t%2==0||t<=0)throw new Error("Window size must be a positive odd number");const n=new e.constructor(e.length),r=new e.constructor(t),a=Math.floor(t/2);for(let t=0;t<e.length;++t){let i=0;for(let n=-a;n<=a;++n){let a=t+n;a<0?a=Math.abs(a):a>=e.length&&(a=2*(e.length-1)-a),r[i++]=e[a]}r.sort(),n[t]=r[a]}return n}function K(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}function Y(e){const t=e.length,n=e[0].length,r=[t+1,n+1],a=Array.from({length:r[0]},(()=>Array(r[1]).fill(1/0)));a[0][0]=0;const i=Array.from({length:r[0]},(()=>Array(r[1]).fill(-1)));for(let t=1;t<r[1];++t)for(let n=1;n<r[0];++n){const r=a[n-1][t-1],s=a[n-1][t],o=a[n][t-1];let l,u;r<s&&r<o?(l=r,u=0):s<r&&s<o?(l=s,u=1):(l=o,u=2),a[n][t]=e[n-1][t-1]+l,i[n][t]=u}for(let e=0;e<r[1];++e)i[0][e]=2;for(let e=0;e<r[0];++e)i[e][0]=1;let s=t,o=n,l=[],u=[];for(;s>0||o>0;)switch(l.push(s-1),u.push(o-1),i[s][o]){case 0:--s,--o;break;case 1:--s;break;case 2:--o;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${s}, ${o}]. Please file a bug report.`)}return l.reverse(),u.reverse(),[l,u]}var X,Q,J,Z,ee,te,ne,re,ae,ie,se,oe,le,ue,de,ce,pe,he,fe,me,ge,_e,ye,we,be,ve,$e,xe,ke,Se,Ee,Ce,Ae=n(52),Ie=n.t(Ae,2),Te=Object.defineProperty,ze=Object.getOwnPropertyDescriptor,Oe=Object.getOwnPropertyNames,Me=Object.prototype.hasOwnProperty,Re=(e,t)=>()=>(e&&(t=e(e=0)),t),Pe=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Be=(e,t)=>{for(var n in t)Te(e,n,{get:t[n],enumerable:!0})},De=e=>((e,t,n,r)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of Oe(t))!Me.call(e,n)&&undefined!==n&&Te(e,n,{get:()=>t[n],enumerable:!(r=ze(t,n))||r.enumerable});return e})(Te({},"__esModule",{value:!0}),e),Ne=Re((()=>{X=new Map,Q=[],J=(e,t,n)=>{if(!t||"function"!=typeof t.init||"function"!=typeof t.createInferenceSessionHandler)throw new TypeError("not a valid backend");{let r=X.get(e);if(void 0===r)X.set(e,{backend:t,priority:n});else{if(r.priority>n)return;if(r.priority===n&&r.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${n}`)}if(n>=0){let t=Q.indexOf(e);-1!==t&&Q.splice(t,1);for(let t=0;t<Q.length;t++)if(X.get(Q[t]).priority<=n)return void Q.splice(t,0,e);Q.push(e)}}},Z=async e=>{let t=X.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let n=!!t.initPromise;try{return n||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(e){return n||(t.error=`${e}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},ee=async e=>{let t,n=e.executionProviders||[],r=n.map((e=>"string"==typeof e?e:e.name)),a=0===r.length?Q:r,i=[],s=new Set;for(let e of a){let n=await Z(e);"string"==typeof n?i.push({name:e,err:n}):(t||(t=n),t===n&&s.add(e))}if(!t)throw new Error(`no available backend found. ERR: ${i.map((e=>`[${e.name}] ${e.err}`)).join(", ")}`);for(let{name:e,err:t}of i)r.includes(e)&&console.warn(`removing requested execution provider "${e}" from session options because it is not available: ${t}`);let o=n.filter((e=>s.has("string"==typeof e?e:e.name)));return[t,new Proxy(e,{get:(e,t)=>"executionProviders"===t?o:Reflect.get(e,t)})]}})),Ue=Re((()=>{Ne()})),We=Re((()=>{te="1.18.0"})),Fe=Re((()=>{We(),ne="warning",re={wasm:{},webgl:{},webgpu:{},versions:{common:te},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);ne=e}},get logLevel(){return ne}},Object.defineProperty(re,"logLevel",{enumerable:!0})})),Le=Re((()=>{Fe(),ae=re})),Ve=Re((()=>{ie=(e,t)=>{let n=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];let r=n.getContext("2d");if(null!=r){let a,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],i=e.dims[3]):(a=e.dims[3],i=e.dims[2]);let s,o,l=void 0!==t?.format?t.format:"RGB",u=t?.norm;void 0===u||void 0===u.mean?s=[255,255,255,255]:"number"==typeof u.mean?s=[u.mean,u.mean,u.mean,u.mean]:(s=[u.mean[0],u.mean[1],u.mean[2],0],void 0!==u.mean[3]&&(s[3]=u.mean[3])),void 0===u||void 0===u.bias?o=[0,0,0,0]:"number"==typeof u.bias?o=[u.bias,u.bias,u.bias,u.bias]:(o=[u.bias[0],u.bias[1],u.bias[2],0],void 0!==u.bias[3]&&(o[3]=u.bias[3]));let d=i*a,c=0,p=d,h=2*d,f=-1;"RGBA"===l?(c=0,p=d,h=2*d,f=3*d):"RGB"===l?(c=0,p=d,h=2*d):"RBG"===l&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<a;n++){let a=(e.data[c++]-o[0])*s[0],i=(e.data[p++]-o[1])*s[1],l=(e.data[h++]-o[2])*s[2],u=-1===f?255:(e.data[f++]-o[3])*s[3];r.fillStyle="rgba("+a+","+i+","+l+","+u+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")},se=(e,t)=>{let n,r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");if(null==r)throw new Error("Can not access image data");{let a,i,s;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],i=e.dims[1],s=e.dims[3]):(a=e.dims[3],i=e.dims[2],s=e.dims[1]);let o,l,u=void 0!==t&&void 0!==t.format?t.format:"RGB",d=t?.norm;void 0===d||void 0===d.mean?o=[255,255,255,255]:"number"==typeof d.mean?o=[d.mean,d.mean,d.mean,d.mean]:(o=[d.mean[0],d.mean[1],d.mean[2],255],void 0!==d.mean[3]&&(o[3]=d.mean[3])),void 0===d||void 0===d.bias?l=[0,0,0,0]:"number"==typeof d.bias?l=[d.bias,d.bias,d.bias,d.bias]:(l=[d.bias[0],d.bias[1],d.bias[2],0],void 0!==d.bias[3]&&(l[3]=d.bias[3]));let c=i*a;if(void 0!==t&&(void 0!==t.format&&4===s&&"RGBA"!==t.format||3===s&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");let p=4,h=0,f=1,m=2,g=3,_=0,y=c,w=2*c,b=-1;"RGBA"===u?(_=0,y=c,w=2*c,b=3*c):"RGB"===u?(_=0,y=c,w=2*c):"RBG"===u&&(_=0,w=c,y=2*c),n=r.createImageData(a,i);for(let t=0;t<i*a;h+=p,f+=p,m+=p,g+=p,t++)n.data[h]=(e.data[_++]-l[0])*o[0],n.data[f]=(e.data[y++]-l[1])*o[1],n.data[m]=(e.data[w++]-l[2])*o[2],n.data[g]=-1===b?255:(e.data[b++]-l[3])*o[3]}return n}})),Ge=Re((()=>{je(),oe=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");let n,r,{height:a,width:i}=t,s=t.norm??{mean:255,bias:0};n="number"==typeof s.mean?[s.mean,s.mean,s.mean,s.mean]:[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],r="number"==typeof s.bias?[s.bias,s.bias,s.bias,s.bias]:[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=a*i,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u),c=4,p=0,h=1,f=2,m=3,g=0,_=u,y=2*u,w=-1;"RGB"===o&&(c=3,p=0,h=1,f=2,m=-1),"RGBA"===l?w=3*u:"RBG"===l?(g=0,y=u,_=2*u):"BGR"===l&&(y=0,_=u,g=2*u);for(let t=0;t<u;t++,p+=c,f+=c,h+=c,m+=c)d[g++]=(e[p]+r[0])/n[0],d[_++]=(e[h]+r[1])/n[1],d[y++]=(e[f]+r[2])/n[2],-1!==w&&-1!==m&&(d[w++]=(e[m]+r[3])/n[3]);return new ye("float32",d,"RGBA"===l?[1,4,a,i]:[1,3,a,i])},le=async(e,t)=>{let n,r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,a=typeof ImageData<"u"&&e instanceof ImageData,i=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,s="string"==typeof e,o=t??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(r){let r=l();r.width=e.width,r.height=e.height;let a=u(r);if(null==a)throw new Error("Can not access image data");{let r=e.height,i=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(r=t.resizedHeight,i=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=r,o.width=i}else o.tensorFormat="RGBA",o.height=r,o.width=i;a.drawImage(e,0,0),n=a.getImageData(0,0,i,r).data}}else{if(!a){if(i){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");let r=l();r.width=e.width,r.height=e.height;let a=u(r);if(null!=a){let t=e.height,r=e.width;return a.drawImage(e,0,0,r,t),n=a.getImageData(0,0,r,t).data,o.height=t,o.width=r,oe(n,o)}throw new Error("Can not access image data")}if(s)return new Promise(((t,n)=>{let r=l(),a=u(r);if(!e||!a)return n();let i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,a.drawImage(i,0,0,r.width,r.height);let e=a.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(oe(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let r,a;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(r=t.resizedHeight,a=t.resizedWidth):(r=e.height,a=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=r,o.width=a,void 0!==t){let t=l();t.width=a,t.height=r;let i=u(t);if(null==i)throw new Error("Can not access image data");i.putImageData(e,0,0),n=i.getImageData(0,0,a,r).data}else n=e.data}}if(void 0!==n)return oe(n,o);throw new Error("Input data provided is not supported - aborted tensor creation")},ue=(e,t)=>{let{width:n,height:r,download:a,dispose:i}=t;return new ye({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:a,dispose:i})},de=(e,t)=>{let{dataType:n,dims:r,download:a,dispose:i}=t;return new ye({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:a,dispose:i})},ce=(e,t,n)=>new ye({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]})})),He=Re((()=>{pe=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),he=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),fe=!1,me=()=>{if(!fe){fe=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,n=typeof Float16Array<"u"&&Float16Array.from;e&&(pe.set("int64",BigInt64Array),he.set(BigInt64Array,"int64")),t&&(pe.set("uint64",BigUint64Array),he.set(BigUint64Array,"uint64")),n?(pe.set("float16",Float16Array),he.set(Float16Array,"float16")):pe.set("float16",Uint16Array)}}})),qe=Re((()=>{je(),ge=e=>{let t=1;for(let n=0;n<e.length;n++){let r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t},_e=(e,t)=>{switch(e.location){case"cpu":return new ye(e.type,e.data,t);case"cpu-pinned":return new ye({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new ye({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new ye({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}})),je=Re((()=>{Ve(),Ge(),He(),qe(),ye=class{constructor(e,t,n){let r,a;if(me(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,a=e.dims,e.location){case"cpu-pinned":{let t=pe.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,s;if("string"==typeof e)if(r=e,s=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{let n=pe.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(s=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");let t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else{let t=he.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===s)s=[i.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");a=s,this.cpuData=i,this.dataLocation="cpu"}let i=ge(a);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=a,this.size=i}static async fromImage(e,t){return le(e,t)}static fromTexture(e,t){return ue(e,t)}static fromGpuBuffer(e,t){return de(e,t)}static fromPinnedBuffer(e,t,n){return ce(e,t,n)}toDataURL(e){return ie(this,e)}toImageData(e){return se(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return _e(this,e)}}})),Ke=Re((()=>{je(),we=ye})),Ye=Re((()=>{Fe(),be=(e,t)=>{(typeof re.trace>"u"?!re.wasm.trace:!re.trace)||console.timeStamp(`${e}::ORT::${t}`)},ve=(e,t)=>{let n=(new Error).stack?.split(/\r\n|\r|\n/g)||[],r=!1;for(let a=0;a<n.length;a++){if(r&&!n[a].includes("TRACE_FUNC")){let r=`FUNC_${e}::${n[a].trim().split(" ")[1]}`;return t&&(r+=`::${t}`),void be("CPU",r)}n[a].includes("TRACE_FUNC")&&(r=!0)}},$e=e=>{(typeof re.trace>"u"?!re.wasm.trace:!re.trace)||ve("BEGIN",e)},xe=e=>{(typeof re.trace>"u"?!re.wasm.trace:!re.trace)||ve("END",e)}})),Xe=Re((()=>{Ne(),Ke(),Ye(),ke=class e{constructor(e){this.handler=e}async run(e,t,n){$e();let r={},a={};if("object"!=typeof e||null===e||e instanceof we||Array.isArray(e))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let i=!0;if("object"==typeof t){if(null===t)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof we)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(0===t.length)throw new TypeError("'fetches' cannot be an empty array.");i=!1;for(let e of t){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===this.outputNames.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);r[e]=null}if("object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,s=Object.getOwnPropertyNames(t);for(let n of this.outputNames)if(-1!==s.indexOf(n)){let a=t[n];(null===a||a instanceof we)&&(e=!0,i=!1,r[n]=a)}if(e){if("object"==typeof n&&null!==n)a=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else a=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of this.inputNames)if(typeof e[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(i)for(let e of this.outputNames)r[e]=null;let s=await this.handler.run(e,r,a),o={};for(let e in s)if(Object.hasOwnProperty.call(s,e)){let t=s[e];o[e]=t instanceof we?t:new we(t.type,t.data,t.dims)}return xe(),o}async release(){return this.handler.dispose()}static async create(t,n,r,a){$e();let i,s={};if("string"==typeof t){if(i=t,"object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(i=t,"object"==typeof n&&null!==n)s=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else{if(!(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer))throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");{let e=t,o=0,l=t.byteLength;if("object"==typeof n&&null!==n)s=n;else if("number"==typeof n){if(o=n,!Number.isSafeInteger(o))throw new RangeError("'byteOffset' must be an integer.");if(o<0||o>=e.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${e.byteLength}).`);if(l=t.byteLength-o,"number"==typeof r){if(l=r,!Number.isSafeInteger(l))throw new RangeError("'byteLength' must be an integer.");if(l<=0||o+l>e.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${e.byteLength-o}].`);if("object"==typeof a&&null!==a)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else if(typeof r<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof n<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(e,o,l)}}let[o,l]=await ee(s),u=await o.createInferenceSessionHandler(i,l);return xe(),new e(u)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}})),Qe=Re((()=>{Xe(),Se=ke})),Je=Re((()=>{})),Ze=Re((()=>{})),et=Re((()=>{})),tt=Re((()=>{})),nt=Re((()=>{Ne(),Ke(),Ee=class e{constructor(e,t,n){this.handler=e,this.hasOptimizerModel=t,this.hasEvalModel=n}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,n){let r=t.evalModel||"",a=t.optimizerModel||"",i=n||{},[s,o]=await ee(i);if(s.createTrainingSessionHandler){let n=await s.createTrainingSessionHandler(t.checkpointState,t.trainModel,r,a,o);return new e(n,!!t.optimizerModel,!!t.evalModel)}throw new Error("Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.")}typeNarrowingForRunStep(e,t,n,r,a){let i={},s={};if("object"!=typeof n||null===n||n instanceof we||Array.isArray(n))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if("object"==typeof r){if(null===r)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof we)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(0===r.length)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let e of r){if("string"!=typeof e)throw new TypeError("'fetches' must be a string array or an object.");if(-1===t.indexOf(e))throw new RangeError(`'fetches' contains invalid output name: ${e}.`);i[e]=null}if("object"==typeof a&&null!==a)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else{let e=!1,n=Object.getOwnPropertyNames(r);for(let a of t)if(-1!==n.indexOf(a)){let t=r[a];(null===t||t instanceof we)&&(e=!0,o=!1,i[a]=t)}if(e){if("object"==typeof a&&null!==a)s=a;else if(typeof a<"u")throw new TypeError("'options' must be an object.")}else s=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let t of e)if(typeof n[t]>"u")throw new Error(`input '${t}' is missing in 'feeds'.`);if(o)for(let e of t)i[e]=null;return[i,s]}convertHandlerReturnTypeToMapOfTensors(e){let t={};for(let n in e)if(Object.hasOwnProperty.call(e,n)){let r=e[n];t[n]=r instanceof we?r:new we(r.type,r.data,r.dims)}return t}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(e,t,n){let[r,a]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,e,t,n),i=await this.handler.runTrainStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(i)}async runOptimizerStep(e){if(!this.hasOptimizerModel)throw new Error("This TrainingSession has no OptimizerModel loaded.");await this.handler.runOptimizerStep(e||{})}async runEvalStep(e,t,n){if(this.hasEvalModel){let[r,a]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,e,t,n),i=await this.handler.runEvalStep(e,r,a);return this.convertHandlerReturnTypeToMapOfTensors(i)}throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(e=!0){return this.handler.getParametersSize(e)}async loadParametersBuffer(e,t=!0){let n=await this.getParametersSize(t);if(e.length!==4*n)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(e,t)}async getContiguousParameters(e=!0){return this.handler.getContiguousParameters(e)}async release(){return this.handler.dispose()}}})),rt=Re((()=>{nt(),Ce=Ee})),at={};Be(at,{InferenceSession:()=>Se,TRACE:()=>be,TRACE_FUNC_BEGIN:()=>$e,TRACE_FUNC_END:()=>xe,Tensor:()=>we,TrainingSession:()=>Ce,env:()=>ae,registerBackend:()=>J});var it=Re((()=>{Ue(),Le(),Qe(),Ke(),Je(),Ze(),Ye(),et(),tt(),rt()})),st={};Be(st,{createReadStream:()=>ut,readFile:()=>ot,readFileSync:()=>lt});var ot,lt,ut,dt=Re((()=>{ot=void 0,lt=void 0,ut=void 0})),ct={};Be(ct,{join:()=>pt});var pt,ht=Re((()=>{pt=void 0})),ft=Pe(((e,t)=>{var n,r=(n=typeof document<"u"?document.currentScript?.src:void 0,typeof __filename<"u"&&(n||=__filename),function(e={}){var t,r,a=e,i=new Promise(((e,n)=>{t=e,r=n}));a.mountExternalData=(e,t)=>{(a.eb||(a.eb=new Map)).set(e,t)},a.unmountExternalData=()=>{delete a.eb};let s=()=>{let e=(e,t,n)=>(...r)=>{let a=Te,i=t?.();r=e(...r);let s=t?.();return i!==s&&(e=s,n(i),t=n=null),Te!=a?new Promise(((e,t)=>{Be={resolve:e,reject:t}})):r},t=e=>async(...t)=>{try{if(a.cb)throw Error("Session already started");let n=a.cb={xb:t[0],errors:[]},r=await e(...t);if(a.cb!==n)throw Error("Session mismatch");a.kb?.flush();let i=n.errors;if(0<i.length){let e=await Promise.all(i);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return r}finally{a.cb=null}};a._OrtCreateSession=e(a._OrtCreateSession,(()=>a._OrtCreateSession),(e=>a._OrtCreateSession=e)),a._OrtRun=t(e(a._OrtRun,(()=>a._OrtRun),(e=>a._OrtRun=e))),a._OrtRunWithBinding=t(e(a._OrtRunWithBinding,(()=>a._OrtRunWithBinding),(e=>a._OrtRunWithBinding=e))),a._OrtBindInput=e(a._OrtBindInput,(()=>a._OrtBindInput),(e=>a._OrtBindInput=e)),s=void 0};a.jsepInit=(e,t)=>{if(s?.(),"webgpu"===e){[a.kb,a.pb,a.tb,a.lb,a.sb,a.Ra,a.ub,a.wb,a.qb,a.rb,a.vb]=t;let e=a.kb;a.jsepRegisterBuffer=(t,n,r,a)=>e.registerBuffer(t,n,r,a),a.jsepGetBuffer=t=>e.getBuffer(t),a.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),a.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},a.jsepOnRunStart=t=>e.onRunStart(t)}};var o,l,u,d=Object.assign({},a),c="./this.program",p=(e,t)=>{throw t},h="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";if(m){var _=(dt(),De(st)),y=(ht(),De(ct));g=f?y.dirname(g)+"/":__dirname+"/",o=(e,t)=>(e=G(e)?new URL(e):y.normalize(e),_.readFileSync(e,t?void 0:"utf8")),u=e=>((e=o(e,!0)).buffer||(e=new Uint8Array(e)),e),l=(e,t,n,r=!0)=>{e=G(e)?new URL(e):y.normalize(e),_.readFile(e,r?void 0:"utf8",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!a.thisProgram&&1<process.argv.length&&(c=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),p=(e,t)=>{throw process.exitCode=e,t}}else(h||f)&&(f?g=self.location.href:typeof document<"u"&&document.currentScript&&(g=document.currentScript.src),n&&(g=n),g=g.startsWith("blob:")?"":g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1),o=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(u=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),l=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w=console.log.bind(console),b=console.error.bind(console);Object.assign(a,d),d=null;var v,$,x,k,S,E,C,A,I,T,z,O,M=!1;function R(){var e=v.buffer;a.HEAP8=x=new Int8Array(e),a.HEAP16=S=new Int16Array(e),a.HEAPU8=k=new Uint8Array(e),a.HEAPU16=E=new Uint16Array(e),a.HEAP32=C=new Int32Array(e),a.HEAPU32=A=new Uint32Array(e),a.HEAPF32=I=new Float32Array(e),a.HEAPF64=O=new Float64Array(e),a.HEAP64=T=new BigInt64Array(e),a.HEAPU64=z=new BigUint64Array(e)}var P=[],B=[],D=[],N=0,U=null,W=null;function F(e){throw b(e="Aborted("+e+")"),M=!0,$=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),r(e),e}var L,V=e=>e.startsWith("data:application/octet-stream;base64,"),G=e=>e.startsWith("file://");if(!V(L="ort-wasm-simd.wasm")){var H=L;L=a.locateFile?a.locateFile(H,g):g+H}function q(e){if(u)return u(e);throw"both async and sync fetching of the wasm failed"}function j(e,t,n){return function(e){if(h||f){if("function"==typeof fetch&&!G(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>q(e)));if(l)return new Promise(((t,n)=>{l(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>q(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then(n,(e=>{b(`failed to asynchronously prepare wasm: ${e}`),F(e)}))}var K={824920:(e,t,n,r)=>{if(typeof a>"u"||!a.eb)return 1;if((e=te(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=a.eb.get(e)))return 2;if((t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return k.set(e.subarray(t,t+n),r>>>0>>>0),0}catch{return 4}},825421:()=>{a.qb()},825452:()=>{a.rb()},825481:()=>{a.vb()},825506:e=>a.pb(e),825539:e=>a.tb(e),825571:(e,t,n)=>{a.lb(e,t,n,!0)},825610:(e,t,n)=>{a.lb(e,t,n)},825643:e=>{a.Ra("Abs",e,void 0)},825694:e=>{a.Ra("Neg",e,void 0)},825745:e=>{a.Ra("Floor",e,void 0)},825798:e=>{a.Ra("Ceil",e,void 0)},825850:e=>{a.Ra("Reciprocal",e,void 0)},825908:e=>{a.Ra("Sqrt",e,void 0)},825960:e=>{a.Ra("Exp",e,void 0)},826011:e=>{a.Ra("Erf",e,void 0)},826062:e=>{a.Ra("Sigmoid",e,void 0)},826117:(e,t,n)=>{a.Ra("HardSigmoid",e,{alpha:t,beta:n})},826196:e=>{a.Ra("Log",e,void 0)},826247:e=>{a.Ra("Sin",e,void 0)},826298:e=>{a.Ra("Cos",e,void 0)},826349:e=>{a.Ra("Tan",e,void 0)},826400:e=>{a.Ra("Asin",e,void 0)},826452:e=>{a.Ra("Acos",e,void 0)},826504:e=>{a.Ra("Atan",e,void 0)},826556:e=>{a.Ra("Sinh",e,void 0)},826608:e=>{a.Ra("Cosh",e,void 0)},826660:e=>{a.Ra("Asinh",e,void 0)},826713:e=>{a.Ra("Acosh",e,void 0)},826766:e=>{a.Ra("Atanh",e,void 0)},826819:e=>{a.Ra("Tanh",e,void 0)},826871:e=>{a.Ra("Not",e,void 0)},826922:(e,t,n)=>{a.Ra("Clip",e,{min:t,max:n})},826991:e=>{a.Ra("Clip",e,void 0)},827043:(e,t)=>{a.Ra("Elu",e,{alpha:t})},827101:e=>{a.Ra("Relu",e,void 0)},827153:(e,t)=>{a.Ra("LeakyRelu",e,{alpha:t})},827217:(e,t)=>{a.Ra("ThresholdedRelu",e,{alpha:t})},827287:(e,t)=>{a.Ra("Cast",e,{to:t})},827345:e=>{a.Ra("Add",e,void 0)},827396:e=>{a.Ra("Sub",e,void 0)},827447:e=>{a.Ra("Mul",e,void 0)},827498:e=>{a.Ra("Div",e,void 0)},827549:e=>{a.Ra("Pow",e,void 0)},827600:e=>{a.Ra("Equal",e,void 0)},827653:e=>{a.Ra("Greater",e,void 0)},827708:e=>{a.Ra("GreaterOrEqual",e,void 0)},827770:e=>{a.Ra("Less",e,void 0)},827822:e=>{a.Ra("LessOrEqual",e,void 0)},827881:(e,t,n,r,i)=>{a.Ra("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828040:(e,t,n,r,i)=>{a.Ra("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828198:(e,t,n,r,i)=>{a.Ra("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828356:(e,t,n,r,i)=>{a.Ra("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828515:(e,t,n,r,i)=>{a.Ra("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828673:(e,t,n,r,i)=>{a.Ra("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828830:(e,t,n,r,i)=>{a.Ra("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},828987:(e,t,n,r,i)=>{a.Ra("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},829148:(e,t,n,r,i)=>{a.Ra("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},829312:(e,t,n,r,i)=>{a.Ra("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},829476:e=>{a.Ra("Where",e,void 0)},829529:(e,t,n)=>{a.Ra("Transpose",e,{perm:t?Array.from(C.subarray(t>>>0,n>>>0)):[]})},829637:(e,t,n,r)=>{a.Ra("DepthToSpace",e,{blocksize:t,mode:te(n),format:r?"NHWC":"NCHW"})},829770:(e,t,n,r)=>{a.Ra("DepthToSpace",e,{blocksize:t,mode:te(n),format:r?"NHWC":"NCHW"})},829903:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m)=>{a.Ra("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[i],pads:[s,o],strides:[l],wIsConst:()=>!!x[d>>>0],outputPadding:c?Array.from(C.subarray(c>>>0,p>>>0)):[],outputShape:h?Array.from(C.subarray(h>>>0,f>>>0)):[],activation:te(m)})},830304:(e,t,n,r,i,s,o,l,u,d,c,p,h,f)=>{a.Ra("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(C.subarray(n>>>0,2+(n>>>0)>>>0)),group:r,kernelShape:Array.from(C.subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(C.subarray(s>>>0,4+(s>>>0)>>>0)),strides:Array.from(C.subarray(o>>>0,2+(o>>>0)>>>0)),wIsConst:()=>!!x[u>>>0],outputPadding:d?Array.from(C.subarray(d>>>0,c>>>0)):[],outputShape:p?Array.from(C.subarray(p>>>0,h>>>0)):[],activation:te(f)})},830869:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m)=>{a.Ra("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:t,dilations:[n],group:r,kernelShape:[i],pads:[s,o],strides:[l],wIsConst:()=>!!x[d>>>0],outputPadding:c?Array.from(C.subarray(c>>>0,p>>>0)):[],outputShape:h?Array.from(C.subarray(h>>>0,f>>>0)):[],activation:te(m)})},831270:(e,t,n,r,i,s,o,l,u,d,c,p,h,f)=>{a.Ra("ConvTranspose",e,{format:l?"NHWC":"NCHW",autoPad:t,dilations:Array.from(C.subarray(n>>>0,2+(n>>>0)>>>0)),group:r,kernelShape:Array.from(C.subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(C.subarray(s>>>0,4+(s>>>0)>>>0)),strides:Array.from(C.subarray(o>>>0,2+(o>>>0)>>>0)),wIsConst:()=>!!x[u>>>0],outputPadding:d?Array.from(C.subarray(d>>>0,c>>>0)):[],outputShape:p?Array.from(C.subarray(p>>>0,h>>>0)):[],activation:te(f)})},831835:(e,t)=>{a.Ra("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},831926:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m,g)=>{a.Ra("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,p,h],strides:[f,m]})},832210:(e,t)=>{a.Ra("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},832301:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m,g)=>{a.Ra("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,p,h],strides:[f,m]})},832585:(e,t)=>{a.Ra("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},832672:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m,g)=>{a.Ra("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,p,h],strides:[f,m]})},832952:(e,t)=>{a.Ra("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},833039:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m,g)=>{a.Ra("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:i,dilations:[s,o],kernel_shape:[l,u],pads:[d,c,p,h],strides:[f,m]})},833319:(e,t,n,r,i)=>{a.Ra("Gemm",e,{alpha:t,beta:n,transA:r,transB:i})},833423:e=>{a.Ra("MatMul",e,void 0)},833477:(e,t,n,r)=>{a.Ra("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},833585:(e,t,n,r)=>{a.Ra("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},833693:(e,t)=>{a.Ra("Softmax",e,{axis:t})},833756:(e,t)=>{a.Ra("Concat",e,{axis:t})},833816:(e,t,n,r,i)=>{a.Ra("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},833956:e=>{a.Ra("Expand",e,void 0)},834010:(e,t)=>{a.Ra("Gather",e,{axis:Number(t)})},834081:(e,t)=>{a.Ra("GatherElements",e,{axis:Number(t)})},834160:(e,t,n,r,i,s,o,l,u,d,c)=>{a.Ra("Resize",e,{antialias:t,axes:n?Array.from(C.subarray(n>>>0,r>>>0)):[],coordinateTransformMode:te(i),cubicCoeffA:s,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:te(u),mode:te(d),nearestMode:te(c)})},834506:(e,t,n,r,i,s,o)=>{a.Ra("Slice",e,{starts:t?Array.from(C.subarray(t>>>0,n>>>0)):[],ends:r?Array.from(C.subarray(r>>>0,i>>>0)):[],axes:s?Array.from(C.subarray(s>>>0,o>>>0)):[]})},834722:e=>{a.Ra("Tile",e,void 0)},834774:(e,t,n,r)=>{a.Ra("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},834885:(e,t,n)=>{a.Ra("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},834999:(e,t,n)=>{a.Ra("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},835113:e=>{a.Ra("Range",e,void 0)},835166:(e,t)=>{a.Ra("Einsum",e,{equation:te(t)})},835247:(e,t,n,r,i)=>{a.Ra("Pad",e,{mode:t,value:n,pads:r?Array.from(C.subarray(r>>>0,i>>>0)):[]})},835374:(e,t,n,r,i,s)=>{a.Ra("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!i,trainingMode:!!r,format:s?"NHWC":"NCHW"})},835543:(e,t,n,r,i,s)=>{a.Ra("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!i,trainingMode:!!r,format:s?"NHWC":"NCHW"})},835712:(e,t,n)=>{a.Ra("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},835809:(e,t,n,r,i,s,o,l,u)=>{a.Ra("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:i,doRotary:s,qkvHiddenSizes:o?Array.from(C.subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},836081:e=>{a.Ra("BiasAdd",e,void 0)},836136:e=>{a.Ra("BiasSplitGelu",e,void 0)},836197:e=>{a.Ra("FastGelu",e,void 0)},836253:(e,t,n,r,i,s,o,l,u,d,c,p,h)=>{a.Ra("Conv",e,{format:u?"NHWC":"NCHW",auto_pad:t,dilations:[n],group:r,kernel_shape:[i],pads:s?Array.from(C.subarray(s>>>0,o>>>0)):[],strides:[l],w_is_const:()=>!!x[d>>>0],activation:te(c),activation_params:p?Array.from(I.subarray(p>>>0,h>>>0)):[]})},836623:(e,t,n,r,i,s,o,l,u,d,c,p,h,f,m,g)=>{a.Ra("Conv",e,{format:p?"NHWC":"NCHW",auto_pad:t,dilations:[n,r],group:i,kernel_shape:[s,o],pads:l?Array.from(C.subarray(l>>>0,u>>>0)):[],strides:[d,c],w_is_const:()=>!!x[h>>>0],activation:te(f),activation_params:m?Array.from(I.subarray(m>>>0,g>>>0)):[]})},837014:e=>{a.Ra("Gelu",e,void 0)},837066:(e,t,n,r,i,s)=>{a.Ra("MatMulNBits",e,{k:t,n,accuracyLevel:r,bits:i,blockSize:s})},837193:(e,t,n,r,i,s)=>{a.Ra("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:i,doRotary:s})},837352:(e,t,n,r,i)=>{a.Ra("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:i})},837491:(e,t,n)=>{a.Ra("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},837593:(e,t,n)=>{a.Ra("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},837695:(e,t,n,r)=>{a.Ra("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},837806:e=>{a.ub(e)},837840:(e,t)=>a.wb(e,t,a.cb.xb,a.cb.errors)};function Y(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}class X{constructor(e){this.hb=e-24}}var Q,J,Z=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ee=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&Z)return Z.decode(e.subarray(t,n));for(r="";t<n;){var a=e[t++];if(128&a){var i=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var s=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|s:(7&a)<<18|i<<12|s<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r},te=(e,t)=>(e>>>=0)?ee(k,e,t):"",ne=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},re=(e,t,n,r)=>{if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<e.length;++i){var s=e.charCodeAt(i);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++i)),127>=s){if(n>=r)break;t[n++>>>0]=s}else{if(2047>=s){if(n+1>=r)break;t[n++>>>0]=192|s>>6}else{if(65535>=s){if(n+2>=r)break;t[n++>>>0]=224|s>>12}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63}t[n++>>>0]=128|s>>6&63}t[n++>>>0]=128|63&s}}return t[n>>>0]=0,n-a},ae=e=>{for(var t="";k[e>>>0];)t+=Q[k[e++>>>0]];return t},ie={},se={},oe={};function le(e,t,n={}){if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(e,t,n={}){var r=t.name;if(!e)throw new J(`type "${r}" must have a positive integer typeid pointer`);if(se.hasOwnProperty(e)){if(n.nb)return;throw new J(`Cannot register type '${r}' twice`)}se[e]=t,delete oe[e],ie.hasOwnProperty(e)&&(t=ie[e],delete ie[e],t.forEach((e=>e())))}(e,t,n)}var ue=(e,t,n)=>{switch(t){case 1:return n?e=>x[e>>>0]:e=>k[e>>>0];case 2:return n?e=>S[e>>>1>>>0]:e=>E[e>>>1>>>0];case 4:return n?e=>C[e>>>2>>>0]:e=>A[e>>>2>>>0];case 8:return n?e=>T[e>>>3]:e=>z[e>>>3];default:throw new TypeError(`invalid integer width (${t}): ${e}`)}},de=[],ce=[];function pe(e){9<(e>>>=0)&&0==--ce[e+1]&&(ce[e]=void 0,de.push(e))}var he=e=>{if(!e)throw new J("Cannot use deleted val. handle = "+e);return ce[e]},fe=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=de.pop()||ce.length;return ce[t]=e,ce[t+1]=1,t}};function me(e){return this.fromWireType(A[e>>>2>>>0])}var ge={name:"emscripten::val",fromWireType:e=>{var t=he(e);return pe(e),t},toWireType:(e,t)=>fe(t),argPackAdvance:8,readValueFromPointer:me,bb:null},_e=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(I[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(O[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}},ye=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,we=(e,t)=>{for(var n=e>>1,r=n+t/2;!(n>=r)&&E[n>>>0];)++n;if(32<(n<<=1)-e&&ye)return ye.decode(k.subarray(e>>>0,n>>>0));for(n="",r=0;!(r>=t/2);++r){var a=S[e+2*r>>>1>>>0];if(0==a)break;n+=String.fromCharCode(a)}return n},be=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var a=0;a<n;++a)S[t>>>1>>>0]=e.charCodeAt(a),t+=2;return S[t>>>1>>>0]=0,t-r},ve=e=>2*e.length,$e=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var a=C[e+4*n>>>2>>>0];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r},xe=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),C[t>>>2>>>0]=i,(t+=4)+4>n)break}return C[t>>>2>>>0]=0,t-r},ke=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t},Se=(e,t)=>{var n=se[e];if(void 0===n)throw e=lt(e),n=ae(e),ft(e),new J(`${t} has unknown type ${n}`);return n},Ee=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(A[t>>>2>>>0]=fe(r)),e},Ce=e=>{try{e()}catch(e){F(e)}},Ae=e=>{if(!M)try{e();try{$=$=e=$,a.onExit?.(e),M=!0,p(e,new Y(e))}catch(e){e instanceof Y||"unwind"==e||p(1,e)}}catch(e){e instanceof Y||"unwind"==e||p(1,e)}},Ie=0,Te=null,ze=0,Oe=[],Me={},Re={},Pe=0,Be=null,Ne=[];function Ue(e){return function(e){if(!M){if(0===Ie){var t=!1,n=!1;e(((e=0)=>{if(!M&&(ze=e,t=!0,n)){Ie=2,Ce((()=>bt(Te))),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),e=!1;try{var r=(0,ot[Re[C[Te+8>>>2>>>0]]])()}catch(t){r=t,e=!0}var a=!1;if(!Te){var i=Be;i&&(Be=null,(e?i.reject:i.resolve)(r),a=!0)}if(e&&!a)throw r}})),n=!0,t||(Ie=1,Te=function(){var e=pt(65548),t=e+12;A[e>>>2>>>0]=t,A[e+4>>>2>>>0]=t+65536,t=Oe[0];var n=Me[t];return void 0===n&&(n=Pe++,Me[t]=n,Re[n]=t),C[e+8>>>2>>>0]=n,e}(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),Ce((()=>yt(Te))))}else 2===Ie?(Ie=0,Ce(vt),ft(Te),Te=null,Ne.forEach(Ae)):F(`invalid state: ${Ie}`);return ze}}((t=>{e().then(t)}))}var We,Fe=[],Le={},Ve=e=>{var t=Le[e];return void 0===t?ae(e):t},Ge=()=>"object"==typeof globalThis?globalThis:Function("return this")(),He=(e,t)=>Object.defineProperty(t,"name",{value:e}),qe=e=>e%4==0&&(e%100!=0||e%400==0),je=[0,31,60,91,121,152,182,213,244,274,305,335],Ke=[0,31,59,90,120,151,181,212,243,273,304,334],Ye=[],Xe=(e,t)=>{Ye.length=0;for(var n;n=k[e++>>>0];){var r=105!=n;t+=(r&=112!=n)&&t%8?4:0,Ye.push(112==n?A[t>>>2>>>0]:106==n?T[t>>>3]:105==n?C[t>>>2>>>0]:O[t>>>3>>>0]),t+=r?8:4}return Ye},Qe={},Je=()=>{if(!We){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:c||"./this.program"};for(e in Qe)void 0===Qe[e]?delete t[e]:t[e]=Qe[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);We=n}return We},Ze=[null,[],[]],et=[31,29,31,30,31,30,31,31,30,31,30,31],tt=[31,28,31,30,31,30,31,31,30,31,30,31];function nt(e,t,n,r){function a(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function i(e,t){return a(e,t,"0")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function o(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){var t=e.$a;for(e=new Date(new Date(e.ab+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(qe(e.getFullYear())?et:tt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=o(new Date(e.getFullYear(),0,4)),n=o(n),0>=s(t,e)?0>=s(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,t>>>=0,n>>>=0;var u=A[40+(r>>>=0)>>>2>>>0];for(var d in r={Ab:C[r>>>2>>>0],zb:C[r+4>>>2>>>0],fb:C[r+8>>>2>>>0],jb:C[r+12>>>2>>>0],gb:C[r+16>>>2>>>0],ab:C[r+20>>>2>>>0],Va:C[r+24>>>2>>>0],$a:C[r+28>>>2>>>0],Cb:C[r+32>>>2>>>0],yb:C[r+36>>>2>>>0],Bb:u?te(u):""},n=te(n),u={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})n=n.replace(new RegExp(d,"g"),u[d]);var c="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),p="January February March April May June July August September October November December".split(" ");for(d in u={"%a":e=>c[e.Va].substring(0,3),"%A":e=>c[e.Va],"%b":e=>p[e.gb].substring(0,3),"%B":e=>p[e.gb],"%C":e=>i((e.ab+1900)/100|0,2),"%d":e=>i(e.jb,2),"%e":e=>a(e.jb,2," "),"%g":e=>l(e).toString().substring(2),"%G":l,"%H":e=>i(e.fb,2),"%I":e=>(0==(e=e.fb)?e=12:12<e&&(e-=12),i(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.gb-1;t+=(qe(e.ab+1900)?et:tt)[n++]);return i(e.jb+t,3)},"%m":e=>i(e.gb+1,2),"%M":e=>i(e.zb,2),"%n":()=>"\n","%p":e=>0<=e.fb&&12>e.fb?"AM":"PM","%S":e=>i(e.Ab,2),"%t":()=>"\t","%u":e=>e.Va||7,"%U":e=>i(Math.floor((e.$a+7-e.Va)/7),2),"%V":e=>{var t=Math.floor((e.$a+7-(e.Va+6)%7)/7);if(2>=(e.Va+371-e.$a-2)%7&&t++,t)53==t&&(4==(n=(e.Va+371-e.$a)%7)||3==n&&qe(e.ab)||(t=1));else{t=52;var n=(e.Va+7-e.$a-1)%7;(4==n||5==n&&qe(e.ab%400-1))&&t++}return i(t,2)},"%w":e=>e.Va,"%W":e=>i(Math.floor((e.$a+7-(e.Va+6)%7)/7),2),"%y":e=>(e.ab+1900).toString().substring(2),"%Y":e=>e.ab+1900,"%z":e=>(0<=(e=e.yb)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.Bb,"%%":()=>"%"},n=n.replace(/%%/g,"\0\0"),u)n.includes(d)&&(n=n.replace(new RegExp(d,"g"),u[d](r)));return d=function(e){var t=Array(ne(e)+1);return re(e,t,0,t.length),t}(n=n.replace(/\0\0/g,"%")),d.length>t?0:(x.set(d,e>>>0),d.length-1)}for(var rt=Array(256),at=0;256>at;++at)rt[at]=String.fromCharCode(at);Q=rt,J=a.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},a.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},ce.push(0,1,void 0,1,null,1,!0,1,!1,1),a.count_emval_handles=()=>ce.length/2-5-de.length;var it={ia:function(e,t,n){return Ue((async()=>{await a.sb(e,t,n)}))},a:function(e,t,n){var r=new X(e>>>=0);throw A[r.hb+16>>>2>>>0]=0,A[r.hb+4>>>2>>>0]=t>>>0,A[r.hb+8>>>2>>>0]=n>>>0,e},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(e,t,n){le(e>>>0,{name:t=ae(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},argPackAdvance:8,readValueFromPointer:ue(t,n>>>0,-1==t.indexOf("u")),bb:null})},K:function(e,t,n,r){le(e>>>0,{name:t=ae(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:r},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(k[e>>>0])},bb:null})},J:function(e){return le(e>>>0,ge)},B:function(e,t,n){le(e>>>0,{name:t=ae(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:8,readValueFromPointer:_e(t,n>>>0),bb:null})},s:function(e,t,n,r,a){if(e>>>=0,n>>>=0,t=ae(t>>>0),-1===a&&(a=4294967295),a=e=>e,0===r){var i=32-8*n;a=e=>e<<i>>>i}var s=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};le(e,{name:t,fromWireType:a,toWireType:s,argPackAdvance:8,readValueFromPointer:ue(t,n,0!==r),bb:null})},o:function(e,t,n){function r(e){return new a(x.buffer,A[e+4>>>2>>>0],A[e>>>2>>>0])}var a=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][t];le(e>>>0,{name:n=ae(n>>>0),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{nb:!0})},D:function(e,t){var n="std::string"===(t=ae(t>>>0));le(e>>>0,{name:t,fromWireType:function(e){var t=A[e>>>2>>>0],r=e+4;if(n)for(var a=r,i=0;i<=t;++i){var s=r+i;if(i==t||0==k[s>>>0]){if(a=te(a,s-a),void 0===o)var o=a;else o+=String.fromCharCode(0),o+=a;a=s+1}}else{for(o=Array(t),i=0;i<t;++i)o[i]=String.fromCharCode(k[r+i>>>0]);o=o.join("")}return ft(e),o},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r="string"==typeof t;if(!(r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new J("Cannot pass non-string to std::string");var a=n&&r?ne(t):t.length,i=pt(4+a+1),s=i+4;if(A[i>>>2>>>0]=a,n&&r)re(t,k,s,a+1);else if(r)for(r=0;r<a;++r){var o=t.charCodeAt(r);if(255<o)throw ft(s),new J("String has UTF-16 code units that do not fit in 8 bits");k[s+r>>>0]=o}else for(r=0;r<a;++r)k[s+r>>>0]=t[r];return null!==e&&e.push(ft,i),i},argPackAdvance:8,readValueFromPointer:me,bb(e){ft(e)}})},x:function(e,t,n){if(t>>>=0,n=ae(n>>>=0),2===t)var r=we,a=be,i=ve,s=e=>E[e>>>1>>>0];else 4===t&&(r=$e,a=xe,i=ke,s=e=>A[e>>>2>>>0]);le(e>>>0,{name:n,fromWireType:e=>{for(var n,a=A[e>>>2>>>0],i=e+4,o=0;o<=a;++o){var l=e+4+o*t;(o==a||0==s(l))&&(i=r(i,l-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=l+t)}return ft(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new J(`Cannot pass non-string to C++ string type ${n}`);var s=i(r),o=pt(4+s+t);return A[o>>>2>>>0]=s/t,a(r,o+4,s+t),null!==e&&e.push(ft,o),o},argPackAdvance:8,readValueFromPointer:me,bb(e){ft(e)}})},L:function(e,t){le(e>>>0,{ob:!0,name:t=ae(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(e,t,n){return t>>>=0,n>>>=0,e=he(e>>>0),t=Se(t,"emval::as"),Ee(t,n,e)},w:function(e){return e>>>=0,Ue((()=>(e=he(e)).then(fe)))},n:function(e,t,n,r){return n>>>=0,r>>>=0,(e=Fe[e>>>0])(null,t=he(t>>>0),n,r)},j:function(e,t,n,r,a){return n>>>=0,r>>>=0,a>>>=0,(e=Fe[e>>>0])(t=he(t>>>0),t[n=Ve(n)],r,a)},b:pe,A:function(e,t){return t>>>=0,(e=he(e>>>0))==he(t)},m:function(e){return 0==(e>>>=0)?fe(Ge()):(e=Ve(e),fe(Ge()[e]))},i:function(e,t,n){t=((e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=Se(A[t+4*r>>>2>>>0],"parameter "+r);return n})(e,t>>>0);var r=t.shift();e--;var a="return function (obj, func, destructorsRef, args) {\n",i=0,s=[];0===n&&s.push("obj");for(var o=["retType"],l=[r],u=0;u<e;++u)s.push("arg"+u),o.push("argType"+u),l.push(t[u]),a+=`  var arg${u} = argType${u}.readValueFromPointer(args${i?"+"+i:""});\n`,i+=t[u].argPackAdvance;return a+=`  var rv = ${1===n?"new func":"func.call"}(${s.join(", ")});\n`,r.ob||(o.push("emval_returnValue"),l.push(Ee),a+="  return emval_returnValue(retType, destructorsRef, rv);\n"),o.push(a+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=He(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(o)(...l),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,(e=>{var t=Fe.length;return Fe.push(e),t})(He(n,e))},r:function(e,t){return t>>>=0,e=he(e>>>0),t=he(t),fe(e[t])},e:function(e){9<(e>>>=0)&&(ce[e+1]+=1)},t:function(){return fe([])},l:function(e){e=he(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return fe(t)},f:function(e){return fe(Ve(e>>>0))},k:function(){return fe({})},h:function(e){for(var t=he(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}pe(e)},g:function(e,t,n){t>>>=0,n>>>=0,e=he(e>>>0),t=he(t),n=he(n),e[t]=n},c:function(e,t){return t>>>=0,e=(e=Se(e>>>0,"_emval_take_value")).readValueFromPointer(t),fe(e)},W:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),C[t>>>2>>>0]=e.getUTCSeconds(),C[t+4>>>2>>>0]=e.getUTCMinutes(),C[t+8>>>2>>>0]=e.getUTCHours(),C[t+12>>>2>>>0]=e.getUTCDate(),C[t+16>>>2>>>0]=e.getUTCMonth(),C[t+20>>>2>>>0]=e.getUTCFullYear()-1900,C[t+24>>>2>>>0]=e.getUTCDay(),C[t+28>>>2>>>0]=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),C[t>>>2>>>0]=e.getSeconds(),C[t+4>>>2>>>0]=e.getMinutes(),C[t+8>>>2>>>0]=e.getHours(),C[t+12>>>2>>>0]=e.getDate(),C[t+16>>>2>>>0]=e.getMonth(),C[t+20>>>2>>>0]=e.getFullYear()-1900,C[t+24>>>2>>>0]=e.getDay(),C[t+28>>>2>>>0]=(qe(e.getFullYear())?je:Ke)[e.getMonth()]+e.getDate()-1|0,C[t+36>>>2>>>0]=-60*e.getTimezoneOffset();var n=new Date(e.getFullYear(),6,1).getTimezoneOffset(),r=new Date(e.getFullYear(),0,1).getTimezoneOffset();C[t+32>>>2>>>0]=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n))},Y:function(e){e>>>=0;var t=new Date(C[e+20>>>2>>>0]+1900,C[e+16>>>2>>>0],C[e+12>>>2>>>0],C[e+8>>>2>>>0],C[e+4>>>2>>>0],C[e>>>2>>>0],0),n=C[e+32>>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),s=Math.min(i,a);return 0>n?C[e+32>>>2>>>0]=+(a!=i&&s==r):0<n!=(s==r)&&(a=Math.max(i,a),t.setTime(t.getTime()+6e4*((0<n?s:a)-r))),C[e+24>>>2>>>0]=t.getDay(),C[e+28>>>2>>>0]=(qe(t.getFullYear())?je:Ke)[t.getMonth()]+t.getDate()-1|0,C[e>>>2>>>0]=t.getSeconds(),C[e+4>>>2>>>0]=t.getMinutes(),C[e+8>>>2>>>0]=t.getHours(),C[e+12>>>2>>>0]=t.getDate(),C[e+16>>>2>>>0]=t.getMonth(),C[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)},U:function(){return-52},V:function(){},N:function(e,t,n,r){n>>>=0,r>>>=0;var a=(new Date).getFullYear(),i=new Date(a,0,1),s=new Date(a,6,1);a=i.getTimezoneOffset();var o=s.getTimezoneOffset();A[e>>>0>>>2>>>0]=60*Math.max(a,o),C[t>>>0>>>2>>>0]=+(a!=o),i=(e=e=>e.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(i),s=e(s),o<a?(re(i,k,n,17),re(s,k,r,17)):(re(i,k,r,17),re(s,k,n,17))},v:()=>{F("")},d:function(e,t,n){return e>>>=0,t=Xe(t>>>0,n>>>0),K[e](...t)},I:function(e,t,n){return e>>>=0,t=Xe(t>>>0,n>>>0),K[e](...t)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(e){e>>>=0;var t=k.length;if(4294901760<e)return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296);var a=Math;r=Math.max(e,r);e:{a=(a.min.call(a,4294901760,r+(65536-r%65536)%65536)-v.buffer.byteLength+65535)/65536;try{v.grow(a),R();var i=1;break e}catch{}i=void 0}if(i)return!0}return!1},$:function(e,t){e>>>=0,t>>>=0;var n=0;return Je().forEach(((r,a)=>{var i=t+n;for(a=A[e+4*a>>>2>>>0]=i,i=0;i<r.length;++i)x[a++>>>0]=r.charCodeAt(i);x[a>>>0]=0,n+=r.length+1})),0},aa:function(e,t){e>>>=0,t>>>=0;var n=Je();A[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),A[t>>>2>>>0]=r,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(e,t,n,r){t>>>=0,n>>>=0,r>>>=0;for(var a=0,i=0;i<n;i++){var s=A[t>>>2>>>0],o=A[t+4>>>2>>>0];t+=8;for(var l=0;l<o;l++){var u=k[s+l>>>0],d=Ze[e];0===u||10===u?((1===e?w:b)(ee(d,0)),d.length=0):d.push(u)}a+=o}return A[r>>>2>>>0]=a,0},fa:nt,p:function(e,t,n,r){return nt(e>>>0,t>>>0,n>>>0,r>>>0)}},ot=function(){function e(e){return ot=e.exports,ot=function(){var e=ot,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{Oe.push(n);try{return r(...e)}finally{M||(Oe.pop(),Te&&1===Ie&&0===Oe.length&&(Ie=0,Ce(wt),typeof Fibers<"u"&&Fibers.Db()))}}:r;return t}(),ot=function(){var e=ot,t=e=>t=>e(t)>>>0;return(e=Object.assign({},e)).la=t(e.la),e.Pa=t(e.Pa),e.Ta=t(e.Ta),e.Ua=(e=>()=>e()>>>0)(e.Ua),e}(),v=ot.ja,R(),B.unshift(ot.ka),0==--N&&(null!==U&&(clearInterval(U),U=null),W&&(e=W,W=null,e())),ot}var t={a:it};if(N++,a.instantiateWasm)try{return a.instantiateWasm(t,e)}catch(e){b(`Module.instantiateWasm callback failed with error: ${e}`),r(e)}return function(e,t){var n=L;return"function"!=typeof WebAssembly.instantiateStreaming||V(n)||G(n)||m||"function"!=typeof fetch?j(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return b(`wasm streaming compile failed: ${r}`),b("falling back to ArrayBuffer instantiation"),j(n,e,t)}))))}(t,(function(t){e(t.instance)})).catch(r),{}}(),lt=e=>(lt=ot.la)(e);a._OrtInit=(e,t)=>(a._OrtInit=ot.ma)(e,t),a._OrtGetLastError=(e,t)=>(a._OrtGetLastError=ot.na)(e,t),a._OrtCreateSessionOptions=(e,t,n,r,i,s,o,l,u,d)=>(a._OrtCreateSessionOptions=ot.oa)(e,t,n,r,i,s,o,l,u,d),a._OrtAppendExecutionProvider=(e,t)=>(a._OrtAppendExecutionProvider=ot.pa)(e,t),a._OrtAddFreeDimensionOverride=(e,t,n)=>(a._OrtAddFreeDimensionOverride=ot.qa)(e,t,n),a._OrtAddSessionConfigEntry=(e,t,n)=>(a._OrtAddSessionConfigEntry=ot.ra)(e,t,n),a._OrtReleaseSessionOptions=e=>(a._OrtReleaseSessionOptions=ot.sa)(e),a._OrtCreateSession=(e,t,n)=>(a._OrtCreateSession=ot.ta)(e,t,n),a._OrtReleaseSession=e=>(a._OrtReleaseSession=ot.ua)(e),a._OrtGetInputOutputCount=(e,t,n)=>(a._OrtGetInputOutputCount=ot.va)(e,t,n),a._OrtGetInputName=(e,t)=>(a._OrtGetInputName=ot.wa)(e,t),a._OrtGetOutputName=(e,t)=>(a._OrtGetOutputName=ot.xa)(e,t),a._OrtFree=e=>(a._OrtFree=ot.ya)(e),a._OrtCreateTensor=(e,t,n,r,i,s)=>(a._OrtCreateTensor=ot.za)(e,t,n,r,i,s),a._OrtGetTensorData=(e,t,n,r,i)=>(a._OrtGetTensorData=ot.Aa)(e,t,n,r,i),a._OrtReleaseTensor=e=>(a._OrtReleaseTensor=ot.Ba)(e),a._OrtCreateRunOptions=(e,t,n,r)=>(a._OrtCreateRunOptions=ot.Ca)(e,t,n,r),a._OrtAddRunConfigEntry=(e,t,n)=>(a._OrtAddRunConfigEntry=ot.Da)(e,t,n),a._OrtReleaseRunOptions=e=>(a._OrtReleaseRunOptions=ot.Ea)(e),a._OrtCreateBinding=e=>(a._OrtCreateBinding=ot.Fa)(e),a._OrtBindInput=(e,t,n)=>(a._OrtBindInput=ot.Ga)(e,t,n),a._OrtBindOutput=(e,t,n,r)=>(a._OrtBindOutput=ot.Ha)(e,t,n,r),a._OrtClearBoundOutputs=e=>(a._OrtClearBoundOutputs=ot.Ia)(e),a._OrtReleaseBinding=e=>(a._OrtReleaseBinding=ot.Ja)(e),a._OrtRunWithBinding=(e,t,n,r,i)=>(a._OrtRunWithBinding=ot.Ka)(e,t,n,r,i),a._OrtRun=(e,t,n,r,i,s,o,l)=>(a._OrtRun=ot.La)(e,t,n,r,i,s,o,l),a._OrtEndProfiling=e=>(a._OrtEndProfiling=ot.Ma)(e),a._JsepOutput=(e,t,n)=>(a._JsepOutput=ot.Na)(e,t,n),a._JsepGetNodeName=e=>(a._JsepGetNodeName=ot.Oa)(e);var ut,pt=a._malloc=e=>(pt=a._malloc=ot.Pa)(e),ft=a._free=e=>(ft=a._free=ot.Qa)(e),mt=e=>(mt=ot.Sa)(e),gt=e=>(gt=ot.Ta)(e),_t=()=>(_t=ot.Ua)(),yt=e=>(yt=ot.Wa)(e),wt=()=>(wt=ot.Xa)(),bt=e=>(bt=ot.Ya)(e),vt=()=>(vt=ot.Za)();function $t(){if(!(0<N)){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;){var e=a.preRun.shift();P.unshift(e)}for(;0<P.length;)P.shift()(a);if(!(0<N||ut||(ut=!0,a.calledRun=!0,M))){for(;0<B.length;)B.shift()(a);for(t(a);0<D.length;)D.shift()(a)}}}return a.___start_em_js=837952,a.___stop_em_js=838113,a.stackSave=()=>_t(),a.stackRestore=e=>mt(e),a.stackAlloc=e=>gt(e),a.UTF8ToString=te,a.stringToUTF8=(e,t,n)=>re(e,k,t,n),a.lengthBytesUTF8=ne,W=function e(){ut||$t(),ut||(W=e)},$t(),i});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd&&define([],(()=>r))})),mt=Pe((()=>{})),gt=Pe((()=>{})),_t={};Be(_t,{cpus:()=>yt});var yt,wt,bt,vt,$t,xt,kt,St,Et,Ct,At,It,Tt,zt,Ot,Mt,Rt,Pt,Bt,Dt,Nt,Ut,Wt,Ft,Lt,Vt,Gt,Ht,qt,jt,Kt,Yt,Xt,Qt,Jt,Zt,en,tn,nn,rn,an,sn,on,ln,un,dn,cn,pn,hn,fn,mn,gn,_n,yn,wn,bn,vn,$n,xn,kn,Sn,En,Cn,An,In,Tn,zn,On,Mn,Rn,Pn,Bn,Dn,Nn,Un,Wn,Fn,Ln,Vn,Gn,Hn,qn,jn,Kn,Yn,Xn,Qn,Jn,Zn,er,tr,nr,rr,ar,ir,sr,or,lr,ur,dr,cr,pr,hr,fr,mr,gr,_r,yr,wr,br,vr,$r,xr,kr,Sr,Er,Cr,Ar,Ir,Tr,zr,Or,Mr,Rr,Pr,Br,Dr,Nr,Ur,Wr,Fr,Lr,Vr,Gr,Hr,qr,jr,Kr,Yr,Xr,Qr,Jr,Zr,ea,ta,na,ra,aa,ia,sa,oa,la,ua,da,ca,pa,ha,fa,ma,ga,_a,ya,wa,ba,va,$a,xa,ka,Sa,Ea,Ca,Aa,Ia,Ta,za,Oa,Ma,Ra,Pa,Ba,Da,Na,Ua,Wa,Fa,La,Va,Ga,Ha,qa,ja,Ka,Ya,Xa,Qa,Ja,Za,ei,ti,ni,ri,ai,ii,si,oi,li,ui,di,ci,pi,hi,fi,mi,gi,_i,yi,wi,bi,vi,$i,xi,ki,Si,Ei,Ci,Ai,Ii,Ti,zi,Oi,Mi,Ri,Pi,Bi,Di,Ni,Ui,Wi,Fi,Li,Vi,Gi,Hi,qi,ji,Ki,Yi,Xi,Qi,Ji,Zi,es,ts,ns,rs,as,is,ss,os,ls,us,ds,cs,ps,hs,fs,ms,gs,_s,ys,ws,bs,vs,$s,xs,ks,Ss,Es,Cs,As,Is,Ts,zs,Os,Ms,Rs,Ps,Bs,Ds,Ns,Us,Ws,Fs,Ls,Vs,Gs,Hs,qs,js,Ks,Ys,Xs,Qs,Js,Zs,eo,to,no,ro,ao,io,so,oo,lo,uo,co,po,ho,fo,mo,go,_o,yo,wo,bo,vo,$o,xo,ko,So,Eo,Co,Ao,Io,To,zo,Oo,Mo,Ro,Po,Bo,Do,No,Uo,Wo,Fo,Lo,Vo,Go,Ho,qo,jo,Ko,Yo,Xo,Qo,Jo,Zo,el,tl,nl,rl,al,il,sl,ol,ll,ul,dl,cl,pl,hl,fl,ml,gl,_l,yl,wl,bl,vl,$l,xl,kl,Sl,El,Cl,Al,Il,Tl,zl,Ol,Ml,Rl,Pl,Bl,Dl,Nl=Re((()=>{yt=void 0})),Ul=Pe(((e,t)=>{var n,r=(n=typeof document<"u"?document.currentScript?.src:void 0,typeof __filename<"u"&&(n||=__filename),function(e={}){function t(){return M.buffer!=B.buffer&&j(),B}function r(){return M.buffer!=B.buffer&&j(),D}function a(){return M.buffer!=B.buffer&&j(),N}function i(){return M.buffer!=B.buffer&&j(),U}function s(){return M.buffer!=B.buffer&&j(),W}function o(){return M.buffer!=B.buffer&&j(),F}function l(){return M.buffer!=B.buffer&&j(),L}function u(){return M.buffer!=B.buffer&&j(),H}var d,c,p=e,h=new Promise(((e,t)=>{d=e,c=t}));p.mountExternalData=(e,t)=>{(p.Db||(p.Db=new Map)).set(e,t)},p.unmountExternalData=()=>{delete p.Db};let f=()=>{let e=(e,t,n)=>(...r)=>{let a=Ct,i=t?.();r=e(...r);let s=t?.();return i!==s&&(e=s,n(i),t=n=null),Ct!=a?new Promise(((e,t)=>{Mt={resolve:e,reject:t}})):r},t=e=>async(...t)=>{try{if(p.Cb)throw Error("Session already started");let n=p.Cb={ec:t[0],errors:[]},r=await e(...t);if(p.Cb!==n)throw Error("Session mismatch");p.Kb?.flush();let a=n.errors;if(0<a.length){let e=await Promise.all(a);if(e=e.filter((e=>e)),0<e.length)throw Error(e.join("\n"))}return r}finally{p.Cb=null}};p._OrtCreateSession=e(p._OrtCreateSession,(()=>p._OrtCreateSession),(e=>p._OrtCreateSession=e)),p._OrtRun=t(e(p._OrtRun,(()=>p._OrtRun),(e=>p._OrtRun=e))),p._OrtRunWithBinding=t(e(p._OrtRunWithBinding,(()=>p._OrtRunWithBinding),(e=>p._OrtRunWithBinding=e))),p._OrtBindInput=e(p._OrtBindInput,(()=>p._OrtBindInput),(e=>p._OrtBindInput=e)),f=void 0};p.jsepInit=(e,t)=>{if(f?.(),"webgpu"===e){[p.Kb,p.Wb,p.$b,p.Lb,p.Zb,p.ob,p.ac,p.cc,p.Xb,p.Yb,p.bc]=t;let e=p.Kb;p.jsepRegisterBuffer=(t,n,r,a)=>e.registerBuffer(t,n,r,a),p.jsepGetBuffer=t=>e.getBuffer(t),p.jsepCreateDownloader=(t,n,r)=>e.createDownloader(t,n,r),p.jsepOnReleaseSession=t=>{e.onReleaseSession(t)},p.jsepOnRunStart=t=>e.onRunStart(t)}};var m,g,_,y=Object.assign({},p),w="./this.program",b=(e,t)=>{throw t},v="object"==typeof window,$="function"==typeof importScripts,x="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,k=p.ENVIRONMENT_IS_PTHREAD||!1,S="";function E(e){return p.locateFile?p.locateFile(e,S):S+e}if(x){var C=(dt(),De(st)),A=(ht(),De(ct));S=$?A.dirname(S)+"/":__dirname+"/",m=(e,t)=>(e=ie(e)?new URL(e):A.normalize(e),C.readFileSync(e,t?void 0:"utf8")),_=e=>((e=m(e,!0)).buffer||(e=new Uint8Array(e)),e),g=(e,t,n,r=!0)=>{e=ie(e)?new URL(e):A.normalize(e),C.readFile(e,r?void 0:"utf8",((e,a)=>{e?n(e):t(r?a.buffer:a)}))},!p.thisProgram&&1<process.argv.length&&(w=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),b=(e,t)=>{throw process.exitCode=e,t},global.Worker=mt().Worker}else(v||$)&&($?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),typeof n<"u"&&n&&(S=n),S=S.startsWith("blob:")?"":S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1),x||(m=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},$&&(_=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),g=(e,t,n)=>{var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=()=>{200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));x&&typeof performance>"u"&&(global.performance=gt().performance);var I=console.log.bind(console),T=console.error.bind(console);x&&(I=(...e)=>C.writeSync(1,e.join(" ")+"\n"),T=(...e)=>C.writeSync(2,e.join(" ")+"\n"));var z=I,O=T;Object.assign(p,y),y=null;var M,R,P,B,D,N,U,W,F,L,V,G,H,q=!1;function j(){var e=M.buffer;p.HEAP8=B=new Int8Array(e),p.HEAP16=N=new Int16Array(e),p.HEAPU8=D=new Uint8Array(e),p.HEAPU16=U=new Uint16Array(e),p.HEAP32=W=new Int32Array(e),p.HEAPU32=F=new Uint32Array(e),p.HEAPF32=L=new Float32Array(e),p.HEAPF64=H=new Float64Array(e),p.HEAP64=V=new BigInt64Array(e),p.HEAPU64=G=new BigUint64Array(e)}var K=16777216;if(k)M=p.wasmMemory;else if(p.wasmMemory)M=p.wasmMemory;else if(!((M=new WebAssembly.Memory({initial:K/65536,maximum:65536,shared:!0})).buffer instanceof SharedArrayBuffer))throw O("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&O("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");j(),K=M.buffer.byteLength;var Y=[],X=[],Q=[],J=0,Z=null,ee=null;function te(){if(0==--J&&(null!==Z&&(clearInterval(Z),Z=null),ee)){var e=ee;ee=null,e()}}function ne(e){throw O(e="Aborted("+e+")"),q=!0,P=1,e=new WebAssembly.RuntimeError(e+". Build with -sASSERTIONS for more info."),c(e),e}var re,ae=e=>e.startsWith("data:application/octet-stream;base64,"),ie=e=>e.startsWith("file://");function se(e){if(_)return _(e);throw"both async and sync fetching of the wasm failed"}function oe(e,t,n){return function(e){if(v||$){if("function"==typeof fetch&&!ie(e))return fetch(e,{credentials:"same-origin"}).then((t=>{if(!t.ok)throw`failed to load wasm binary file at '${e}'`;return t.arrayBuffer()})).catch((()=>se(e)));if(g)return new Promise(((t,n)=>{g(e,(e=>t(new Uint8Array(e))),n)}))}return Promise.resolve().then((()=>se(e)))}(e).then((e=>WebAssembly.instantiate(e,t))).then(n,(e=>{O(`failed to asynchronously prepare wasm: ${e}`),ne(e)}))}ae(re="ort-wasm-simd-threaded.wasm")||(re=E(re));var le={826468:(e,t,n,a)=>{if(typeof p>"u"||!p.Db)return 1;if((e=Se(e>>>0)).startsWith("./")&&(e=e.substring(2)),!(e=p.Db.get(e)))return 2;if(a>>>=0,(t>>>=0)+(n>>>=0)>e.byteLength)return 3;try{return r().set(e.subarray(t,t+n),a>>>0),0}catch{return 4}},826969:()=>{p.Xb()},827e3:()=>{p.Yb()},827029:()=>{p.bc()},827054:e=>p.Wb(e),827087:e=>p.$b(e),827119:(e,t,n)=>{p.Lb(e,t,n,!0)},827158:(e,t,n)=>{p.Lb(e,t,n)},827191:e=>{p.ob("Abs",e,void 0)},827242:e=>{p.ob("Neg",e,void 0)},827293:e=>{p.ob("Floor",e,void 0)},827346:e=>{p.ob("Ceil",e,void 0)},827398:e=>{p.ob("Reciprocal",e,void 0)},827456:e=>{p.ob("Sqrt",e,void 0)},827508:e=>{p.ob("Exp",e,void 0)},827559:e=>{p.ob("Erf",e,void 0)},827610:e=>{p.ob("Sigmoid",e,void 0)},827665:(e,t,n)=>{p.ob("HardSigmoid",e,{alpha:t,beta:n})},827744:e=>{p.ob("Log",e,void 0)},827795:e=>{p.ob("Sin",e,void 0)},827846:e=>{p.ob("Cos",e,void 0)},827897:e=>{p.ob("Tan",e,void 0)},827948:e=>{p.ob("Asin",e,void 0)},828e3:e=>{p.ob("Acos",e,void 0)},828052:e=>{p.ob("Atan",e,void 0)},828104:e=>{p.ob("Sinh",e,void 0)},828156:e=>{p.ob("Cosh",e,void 0)},828208:e=>{p.ob("Asinh",e,void 0)},828261:e=>{p.ob("Acosh",e,void 0)},828314:e=>{p.ob("Atanh",e,void 0)},828367:e=>{p.ob("Tanh",e,void 0)},828419:e=>{p.ob("Not",e,void 0)},828470:(e,t,n)=>{p.ob("Clip",e,{min:t,max:n})},828539:e=>{p.ob("Clip",e,void 0)},828591:(e,t)=>{p.ob("Elu",e,{alpha:t})},828649:e=>{p.ob("Relu",e,void 0)},828701:(e,t)=>{p.ob("LeakyRelu",e,{alpha:t})},828765:(e,t)=>{p.ob("ThresholdedRelu",e,{alpha:t})},828835:(e,t)=>{p.ob("Cast",e,{to:t})},828893:e=>{p.ob("Add",e,void 0)},828944:e=>{p.ob("Sub",e,void 0)},828995:e=>{p.ob("Mul",e,void 0)},829046:e=>{p.ob("Div",e,void 0)},829097:e=>{p.ob("Pow",e,void 0)},829148:e=>{p.ob("Equal",e,void 0)},829201:e=>{p.ob("Greater",e,void 0)},829256:e=>{p.ob("GreaterOrEqual",e,void 0)},829318:e=>{p.ob("Less",e,void 0)},829370:e=>{p.ob("LessOrEqual",e,void 0)},829429:(e,t,n,r,a)=>{p.ob("ReduceMean",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},829588:(e,t,n,r,a)=>{p.ob("ReduceMax",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},829746:(e,t,n,r,a)=>{p.ob("ReduceMin",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},829904:(e,t,n,r,a)=>{p.ob("ReduceProd",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830063:(e,t,n,r,a)=>{p.ob("ReduceSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830221:(e,t,n,r,a)=>{p.ob("ReduceL1",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830378:(e,t,n,r,a)=>{p.ob("ReduceL2",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830535:(e,t,n,r,a)=>{p.ob("ReduceLogSum",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830696:(e,t,n,r,a)=>{p.ob("ReduceSumSquare",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},830860:(e,t,n,r,a)=>{p.ob("ReduceLogSumExp",e,{keepDims:!!t,noopWithEmptyAxes:!!n,axes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},831024:e=>{p.ob("Where",e,void 0)},831077:(e,t,n)=>{p.ob("Transpose",e,{perm:t?Array.from(s().subarray(t>>>0,n>>>0)):[]})},831185:(e,t,n,r)=>{p.ob("DepthToSpace",e,{blocksize:t,mode:Se(n),format:r?"NHWC":"NCHW"})},831318:(e,t,n,r)=>{p.ob("DepthToSpace",e,{blocksize:t,mode:Se(n),format:r?"NHWC":"NCHW"})},831451:(e,n,r,a,i,o,l,u,d,c,h,f,m,g,_)=>{p.ob("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:a,kernelShape:[i],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(s().subarray(h>>>0,f>>>0)):[],outputShape:m?Array.from(s().subarray(m>>>0,g>>>0)):[],activation:Se(_)})},831852:(e,n,r,a,i,o,l,u,d,c,h,f,m,g)=>{p.ob("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(s().subarray(r>>>0,2+(r>>>0)>>>0)),group:a,kernelShape:Array.from(s().subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(s().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(s().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(s().subarray(c>>>0,h>>>0)):[],outputShape:f?Array.from(s().subarray(f>>>0,m>>>0)):[],activation:Se(g)})},832417:(e,n,r,a,i,o,l,u,d,c,h,f,m,g,_)=>{p.ob("ConvTranspose",e,{format:d?"NHWC":"NCHW",autoPad:n,dilations:[r],group:a,kernelShape:[i],pads:[o,l],strides:[u],wIsConst:()=>!!t()[c>>>0],outputPadding:h?Array.from(s().subarray(h>>>0,f>>>0)):[],outputShape:m?Array.from(s().subarray(m>>>0,g>>>0)):[],activation:Se(_)})},832818:(e,n,r,a,i,o,l,u,d,c,h,f,m,g)=>{p.ob("ConvTranspose",e,{format:u?"NHWC":"NCHW",autoPad:n,dilations:Array.from(s().subarray(r>>>0,2+(r>>>0)>>>0)),group:a,kernelShape:Array.from(s().subarray(i>>>0,2+(i>>>0)>>>0)),pads:Array.from(s().subarray(o>>>0,4+(o>>>0)>>>0)),strides:Array.from(s().subarray(l>>>0,2+(l>>>0)>>>0)),wIsConst:()=>!!t()[d>>>0],outputPadding:c?Array.from(s().subarray(c>>>0,h>>>0)):[],outputShape:f?Array.from(s().subarray(f>>>0,m>>>0)):[],activation:Se(g)})},833383:(e,t)=>{p.ob("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},833474:(e,t,n,r,a,i,s,o,l,u,d,c,h,f,m,g)=>{p.ob("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,s],kernel_shape:[o,l],pads:[u,d,c,h],strides:[f,m]})},833758:(e,t)=>{p.ob("GlobalAveragePool",e,{format:t?"NHWC":"NCHW"})},833849:(e,t,n,r,a,i,s,o,l,u,d,c,h,f,m,g)=>{p.ob("AveragePool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,s],kernel_shape:[o,l],pads:[u,d,c,h],strides:[f,m]})},834133:(e,t)=>{p.ob("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},834220:(e,t,n,r,a,i,s,o,l,u,d,c,h,f,m,g)=>{p.ob("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,s],kernel_shape:[o,l],pads:[u,d,c,h],strides:[f,m]})},834500:(e,t)=>{p.ob("GlobalMaxPool",e,{format:t?"NHWC":"NCHW"})},834587:(e,t,n,r,a,i,s,o,l,u,d,c,h,f,m,g)=>{p.ob("MaxPool",e,{format:g?"NHWC":"NCHW",auto_pad:t,ceil_mode:n,count_include_pad:r,storage_order:a,dilations:[i,s],kernel_shape:[o,l],pads:[u,d,c,h],strides:[f,m]})},834867:(e,t,n,r,a)=>{p.ob("Gemm",e,{alpha:t,beta:n,transA:r,transB:a})},834971:e=>{p.ob("MatMul",e,void 0)},835025:(e,t,n,r)=>{p.ob("ArgMax",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},835133:(e,t,n,r)=>{p.ob("ArgMin",e,{keepDims:!!t,selectLastIndex:!!n,axis:r})},835241:(e,t)=>{p.ob("Softmax",e,{axis:t})},835304:(e,t)=>{p.ob("Concat",e,{axis:t})},835364:(e,t,n,r,a)=>{p.ob("Split",e,{axis:t,numOutputs:n,splitSizes:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},835504:e=>{p.ob("Expand",e,void 0)},835558:(e,t)=>{p.ob("Gather",e,{axis:Number(t)})},835629:(e,t)=>{p.ob("GatherElements",e,{axis:Number(t)})},835708:(e,t,n,r,a,i,o,l,u,d,c)=>{p.ob("Resize",e,{antialias:t,axes:n?Array.from(s().subarray(n>>>0,r>>>0)):[],coordinateTransformMode:Se(a),cubicCoeffA:i,excludeOutside:o,extrapolationValue:l,keepAspectRatioPolicy:Se(u),mode:Se(d),nearestMode:Se(c)})},836054:(e,t,n,r,a,i,o)=>{p.ob("Slice",e,{starts:t?Array.from(s().subarray(t>>>0,n>>>0)):[],ends:r?Array.from(s().subarray(r>>>0,a>>>0)):[],axes:i?Array.from(s().subarray(i>>>0,o>>>0)):[]})},836270:e=>{p.ob("Tile",e,void 0)},836322:(e,t,n,r)=>{p.ob("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},836433:(e,t,n)=>{p.ob("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},836547:(e,t,n)=>{p.ob("InstanceNormalization",e,{epsilon:t,format:n?"NHWC":"NCHW"})},836661:e=>{p.ob("Range",e,void 0)},836714:(e,t)=>{p.ob("Einsum",e,{equation:Se(t)})},836795:(e,t,n,r,a)=>{p.ob("Pad",e,{mode:t,value:n,pads:r?Array.from(s().subarray(r>>>0,a>>>0)):[]})},836922:(e,t,n,r,a,i)=>{p.ob("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:i?"NHWC":"NCHW"})},837091:(e,t,n,r,a,i)=>{p.ob("BatchNormalization",e,{epsilon:t,momentum:n,spatial:!!a,trainingMode:!!r,format:i?"NHWC":"NCHW"})},837260:(e,t,n)=>{p.ob("CumSum",e,{exclusive:Number(t),reverse:Number(n)})},837357:(e,t,n,r,a,i,o,l,u)=>{p.ob("Attention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:i,qkvHiddenSizes:o?Array.from(s().subarray(Number(l)>>>0,Number(l)+o>>>0)):[],pastPresentShareBuffer:!!u})},837629:e=>{p.ob("BiasAdd",e,void 0)},837684:e=>{p.ob("BiasSplitGelu",e,void 0)},837745:e=>{p.ob("FastGelu",e,void 0)},837801:(e,n,r,a,i,o,u,d,c,h,f,m,g)=>{p.ob("Conv",e,{format:c?"NHWC":"NCHW",auto_pad:n,dilations:[r],group:a,kernel_shape:[i],pads:o?Array.from(s().subarray(o>>>0,u>>>0)):[],strides:[d],w_is_const:()=>!!t()[h>>>0],activation:Se(f),activation_params:m?Array.from(l().subarray(m>>>0,g>>>0)):[]})},838171:(e,n,r,a,i,o,u,d,c,h,f,m,g,_,y,w)=>{p.ob("Conv",e,{format:m?"NHWC":"NCHW",auto_pad:n,dilations:[r,a],group:i,kernel_shape:[o,u],pads:d?Array.from(s().subarray(d>>>0,c>>>0)):[],strides:[h,f],w_is_const:()=>!!t()[g>>>0],activation:Se(_),activation_params:y?Array.from(l().subarray(y>>>0,w>>>0)):[]})},838562:e=>{p.ob("Gelu",e,void 0)},838614:(e,t,n,r,a,i)=>{p.ob("MatMulNBits",e,{k:t,n,accuracyLevel:r,bits:a,blockSize:i})},838741:(e,t,n,r,a,i)=>{p.ob("MultiHeadAttention",e,{numHeads:t,isUnidirectional:n,maskFilterValue:r,scale:a,doRotary:i})},838900:(e,t,n,r,a)=>{p.ob("RotaryEmbedding",e,{interleaved:!!t,numHeads:n,rotaryEmbeddingDim:r,scale:a})},839039:(e,t,n)=>{p.ob("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},839141:(e,t,n)=>{p.ob("SkipLayerNormalization",e,{epsilon:t,simplified:!!n})},839243:(e,t,n,r)=>{p.ob("LayerNormalization",e,{axis:t,epsilon:n,simplified:!!r})},839354:e=>{p.ac(e)},839388:(e,t)=>p.cc(e,t,p.Cb.ec,p.Cb.errors)};function ue(e){this.name="ExitStatus",this.message=`Program terminated with exit(${e})`,this.status=e}var de=e=>{e.terminate(),e.onmessage=()=>{}},ce=e=>{0==_e.xb.length&&(ge(),_e.Mb(_e.xb[0]));var t=_e.xb.pop();if(!t)return 6;_e.yb.push(t),_e.ub[e.wb]=t,t.wb=e.wb;var n={cmd:"run",start_routine:e.fc,arg:e.Rb,pthread_ptr:e.wb};return x&&t.unref(),t.postMessage(n,e.mc),0},pe=0,he=(e,t,...n)=>(e=>{var t=En();return e=e(),kn(t),e})((()=>{for(var r=2*n.length,a=Sn(8*r),i=a>>>3,s=0;s<n.length;s++){var o=n[s];"bigint"==typeof o?(V[i+2*s]=1n,V[i+2*s+1]=o):(V[i+2*s]=0n,u()[i+2*s+1>>>0]=o)}return wn(e,0,r,a,t)}));function fe(e){if(k)return he(0,1,e);P=e,0<pe||(_e.hc(),p.onExit?.(e),q=!0),b(e,new ue(e))}var me=e=>{if(P=e,k)throw we(e),"unwind";fe(e)};function ge(){var e=E("ort-wasm-simd-threaded.worker.js");e=new Worker(e),_e.xb.push(e)}var _e={xb:[],yb:[],Qb:[],ub:{},Gb(){k?(_e.receiveObjectTransfer=_e.dc,_e.threadInitTLS=_e.Pb,_e.setExitStatus=_e.Ob):function(){for(var e=p.numThreads;e--;)ge();Y.unshift((()=>{J++,function(e){k?e():Promise.all(_e.xb.map(_e.Mb)).then(e)}((()=>te()))}))}()},Ob:e=>P=e,pc:["$terminateWorker"],hc:()=>{for(var e of _e.yb)de(e);for(e of _e.xb)de(e);_e.xb=[],_e.yb=[],_e.ub=[]},Nb:e=>{var t=e.wb;delete _e.ub[t],_e.xb.push(e),_e.yb.splice(_e.yb.indexOf(e),1),e.wb=0,bn(t)},dc(){},Pb(){_e.Qb.forEach((e=>e()))},Mb:e=>new Promise((t=>{e.onmessage=n=>{var r=(n=n.data).cmd;if(n.targetThread&&n.targetThread!=fn()){var a=_e.ub[n.targetThread];a?a.postMessage(n,n.transferList):O(`Internal error! Worker sent a message "${r}" to target pthread ${n.targetThread}, but that thread no longer exists!`)}else"checkMailbox"===r?vt():"spawnThread"===r?ce(n):"cleanupThread"===r?_e.Nb(_e.ub[n.thread]):"killThread"===r?(n=n.thread,r=_e.ub[n],delete _e.ub[n],de(r),bn(n),_e.yb.splice(_e.yb.indexOf(r),1),r.wb=0):"cancelThread"===r?_e.ub[n.thread].postMessage({cmd:"cancel"}):"loaded"===r?(e.loaded=!0,x&&!e.wb&&e.unref(),t(e)):"alert"===r?alert(`Thread ${n.threadId}: ${n.text}`):"setimmediate"===n.target?e.postMessage(n):"callHandler"===r?p[n.handler](...n.args):r&&O(`worker sent an unknown command ${r}`)},e.onerror=e=>{throw O(`worker sent an error! ${e.filename}:${e.lineno}: ${e.message}`),e},x&&(e.on("message",(t=>e.onmessage({data:t}))),e.on("error",(t=>e.onerror(t))));var r,a=[];for(r of["onExit"])p.hasOwnProperty(r)&&a.push(r);e.postMessage({cmd:"load",handlers:a,urlOrBlob:p.mainScriptUrlOrBlob||n,wasmMemory:M,wasmModule:R})}))};p.PThread=_e;var ye=e=>{for(;0<e.length;)e.shift()(p)};function we(e){if(k)return he(1,0,e);me(e)}p.establishStackSpace=()=>{var e=fn(),t=o()[e+52>>>2>>>0];e=o()[e+56>>>2>>>0],xn(t,t-e),kn(t)},p.invokeEntryPoint=(e,t)=>{pe=0,e=Cn(e,t),0<pe?_e.Ob(e):vn(e)};class be{constructor(e){this.Ib=e-24}Gb(e,t){o()[this.Ib+16>>>2>>>0]=0,o()[this.Ib+4>>>2>>>0]=e,o()[this.Ib+8>>>2>>>0]=t}}function ve(e,t,n,r){return k?he(2,1,e,t,n,r):$e(e,t,n,r)}function $e(e,t,n,r){if(e>>>=0,t>>>=0,n>>>=0,r>>>=0,typeof SharedArrayBuffer>"u")return O("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var a=[];return k&&0===a.length?ve(e,t,n,r):(e={fc:n,wb:e,Rb:r,mc:a},k?(e.oc="spawnThread",postMessage(e,a),0):ce(e))}var xe=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ke=(e,t,n)=>{var r=(t>>>=0)+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.buffer&&xe)return xe.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,n):e.subarray(t,n));for(r="";t<n;){var a=e[t++];if(128&a){var i=63&e[t++];if(192==(224&a))r+=String.fromCharCode((31&a)<<6|i);else{var s=63&e[t++];65536>(a=224==(240&a)?(15&a)<<12|i<<6|s:(7&a)<<18|i<<12|s<<6|63&e[t++])?r+=String.fromCharCode(a):(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a))}}else r+=String.fromCharCode(a)}return r},Se=(e,t)=>(e>>>=0)?ke(r(),e,t):"";function Ee(e,t,n){return k?he(3,1,e,t,n):0}function Ce(e,t){if(k)return he(4,1,e,t)}var Ae=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);127>=r?t++:2047>=r?t+=2:55296<=r&&57343>=r?(t+=4,++n):t+=3}return t},Ie=(e,t,n,r)=>{if(!(0<r))return 0;var a=n>>>=0;r=n+r-1;for(var i=0;i<e.length;++i){var s=e.charCodeAt(i);if(55296<=s&&57343>=s&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++i)),127>=s){if(n>=r)break;t[n++>>>0]=s}else{if(2047>=s){if(n+1>=r)break;t[n++>>>0]=192|s>>6}else{if(65535>=s){if(n+2>=r)break;t[n++>>>0]=224|s>>12}else{if(n+3>=r)break;t[n++>>>0]=240|s>>18,t[n++>>>0]=128|s>>12&63}t[n++>>>0]=128|s>>6&63}t[n++>>>0]=128|63&s}}return t[n>>>0]=0,n-a},Te=(e,t,n)=>Ie(e,r(),t,n);function ze(e,t){if(k)return he(5,1,e,t)}function Oe(e,t,n){if(k)return he(6,1,e,t,n)}function Me(e,t,n){return k?he(7,1,e,t,n):0}function Re(e,t){if(k)return he(8,1,e,t)}function Pe(e,t,n){if(k)return he(9,1,e,t,n)}function Be(e,t,n,r){if(k)return he(10,1,e,t,n,r)}function Ne(e,t,n,r){if(k)return he(11,1,e,t,n,r)}function Ue(e,t,n,r){if(k)return he(12,1,e,t,n,r)}function We(e){if(k)return he(13,1,e)}function Fe(e,t){if(k)return he(14,1,e,t)}function Le(e,t,n){if(k)return he(15,1,e,t,n)}var Ve,Ge,He=e=>{for(var t="";r()[e>>>0];)t+=Ve[r()[e++>>>0]];return t},qe={},je={},Ke={};function Ye(e,t,n={}){if(!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");return function(e,t,n={}){var r=t.name;if(!e)throw new Ge(`type "${r}" must have a positive integer typeid pointer`);if(je.hasOwnProperty(e)){if(n.Ub)return;throw new Ge(`Cannot register type '${r}' twice`)}je[e]=t,delete Ke[e],qe.hasOwnProperty(e)&&(t=qe[e],delete qe[e],t.forEach((e=>e())))}(e,t,n)}var Xe=(e,n,l)=>{switch(n){case 1:return l?e=>t()[e>>>0]:e=>r()[e>>>0];case 2:return l?e=>a()[e>>>1>>>0]:e=>i()[e>>>1>>>0];case 4:return l?e=>s()[e>>>2>>>0]:e=>o()[e>>>2>>>0];case 8:return l?e=>V[e>>>3]:e=>G[e>>>3];default:throw new TypeError(`invalid integer width (${n}): ${e}`)}},Qe=[],Je=[];function Ze(e){9<(e>>>=0)&&0==--Je[e+1]&&(Je[e]=void 0,Qe.push(e))}var et=e=>{if(!e)throw new Ge("Cannot use deleted val. handle = "+e);return Je[e]},tt=e=>{switch(e){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let t=Qe.pop()||Je.length;return Je[t]=e,Je[t+1]=1,t}};function nt(e){return this.fromWireType(o()[e>>>2>>>0])}var rt={name:"emscripten::val",fromWireType:e=>{var t=et(e);return Ze(e),t},toWireType:(e,t)=>tt(t),argPackAdvance:8,readValueFromPointer:nt,Bb:null},at=(e,t)=>{switch(t){case 4:return function(e){return this.fromWireType(l()[e>>>2>>>0])};case 8:return function(e){return this.fromWireType(u()[e>>>3>>>0])};default:throw new TypeError(`invalid float width (${t}): ${e}`)}},it=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,ot=(e,t)=>{for(var n=e>>1,s=n+t/2;!(n>=s)&&i()[n>>>0];)++n;if(32<(n<<=1)-e&&it)return it.decode(r().slice(e,n));for(n="",s=0;!(s>=t/2);++s){var o=a()[e+2*s>>>1>>>0];if(0==o)break;n+=String.fromCharCode(o)}return n},lt=(e,t,n)=>{if(n??=2147483647,2>n)return 0;var r=t;n=(n-=2)<2*e.length?n/2:e.length;for(var i=0;i<n;++i){var s=e.charCodeAt(i);a()[t>>>1>>>0]=s,t+=2}return a()[t>>>1>>>0]=0,t-r},ut=e=>2*e.length,pt=(e,t)=>{for(var n=0,r="";!(n>=t/4);){var a=s()[e+4*n>>>2>>>0];if(0==a)break;++n,65536<=a?(a-=65536,r+=String.fromCharCode(55296|a>>10,56320|1023&a)):r+=String.fromCharCode(a)}return r},ft=(e,t,n)=>{if(t>>>=0,n??=2147483647,4>n)return 0;var r=t;n=r+n-4;for(var a=0;a<e.length;++a){var i=e.charCodeAt(a);if(55296<=i&&57343>=i&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++a)),s()[t>>>2>>>0]=i,(t+=4)+4>n)break}return s()[t>>>2>>>0]=0,t-r},yt=e=>{for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&++n,t+=4}return t},wt=e=>{if(!q)try{if(e(),!(0<pe))try{k?vn(P):me(P)}catch(e){e instanceof ue||"unwind"==e||b(1,e)}}catch(e){e instanceof ue||"unwind"==e||b(1,e)}};function bt(e){e>>>=0,"function"==typeof Atomics.nc&&(Atomics.nc(s(),e>>>2,e).value.then(vt),e+=128,Atomics.store(s(),e>>>2,1))}p.__emscripten_thread_mailbox_await=bt;var vt=()=>{var e=fn();e&&(bt(e),wt($n))};p.checkMailbox=vt;var $t=[],xt=(e,t)=>{var n=je[e];if(void 0===n)throw e=hn(e),n=He(e),gn(e),new Ge(`${t} has unknown type ${n}`);return n},kt=(e,t,n)=>{var r=[];return e=e.toWireType(r,n),r.length&&(o()[t>>>2>>>0]=tt(r)),e},St=e=>{try{e()}catch(e){ne(e)}},Et=0,Ct=null,At=0,It=[],Tt={},zt={},Ot=0,Mt=null,Rt=[];function Pt(e){return function(e){if(!q){if(0===Et){var t=!1,n=!1;e(((e=0)=>{if(!q&&(At=e,t=!0,n)){Et=2,St((()=>Tn(Ct))),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),e=!1;try{var r=function(){var e=s()[Ct+8>>>2>>>0];return e=pn[zt[e]],--pe,e()}()}catch(t){r=t,e=!0}var a=!1;if(!Ct){var i=Mt;i&&(Mt=null,(e?i.reject:i.resolve)(r),a=!0)}if(e&&!a)throw r}})),n=!0,t||(Et=1,Ct=function(){var e=mn(65548),t=e+12;o()[e>>>2>>>0]=t,o()[e+4>>>2>>>0]=t+65536,t=It[0];var n=Tt[t];return void 0===n&&(n=Ot++,Tt[t]=n,zt[n]=t),t=n,s()[e+8>>>2>>>0]=t,e}(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),St((()=>An(Ct))))}else 2===Et?(Et=0,St(zn),gn(Ct),Ct=null,Rt.forEach(wt)):ne(`invalid state: ${Et}`);return At}}((t=>{e().then(t)}))}var Bt=[],Dt={},Nt=e=>{var t=Dt[e];return void 0===t?He(e):t},Ut=()=>"object"==typeof globalThis?globalThis:Function("return this")(),Wt=(e,t)=>Object.defineProperty(t,"name",{value:e}),Ft=e=>e%4==0&&(e%100!=0||e%400==0),Lt=[0,31,60,91,121,152,182,213,244,274,305,335],Vt=[0,31,59,90,120,151,181,212,243,273,304,334];function Gt(e,t,n,r,a,i,s){return k?he(16,1,e,t,n,r,a,i,s):-52}function Ht(e,t,n,r,a,i){if(k)return he(17,1,e,t,n,r,a,i)}var qt,jt=[],Kt=(e,t)=>{jt.length=0;for(var n;n=r()[e++>>>0];){var a=105!=n;t+=(a&=112!=n)&&t%8?4:0,jt.push(112==n?o()[t>>>2>>>0]:106==n?V[t>>>3]:105==n?s()[t>>>2>>>0]:u()[t>>>3>>>0]),t+=a?8:4}return jt},Yt={},Xt=()=>{if(!qt){var e,t={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:w||"./this.program"};for(e in Yt)void 0===Yt[e]?delete t[e]:t[e]=Yt[e];var n=[];for(e in t)n.push(`${e}=${t[e]}`);qt=n}return qt};function Qt(e,n){if(k)return he(18,1,e,n);e>>>=0,n>>>=0;var r=0;return Xt().forEach(((a,i)=>{var s=n+r;for(i=o()[e+4*i>>>2>>>0]=s,s=0;s<a.length;++s)t()[i++>>>0]=a.charCodeAt(s);t()[i>>>0]=0,r+=a.length+1})),0}function Jt(e,t){if(k)return he(19,1,e,t);e>>>=0,t>>>=0;var n=Xt();o()[e>>>2>>>0]=n.length;var r=0;return n.forEach((e=>r+=e.length+1)),o()[t>>>2>>>0]=r,0}function Zt(e){return k?he(20,1,e):52}function en(e,t,n,r){return k?he(21,1,e,t,n,r):52}function tn(e,t,n,r){return k?he(22,1,e,t,n,r):70}var nn=[null,[],[]];function rn(e,t,n,a){if(k)return he(23,1,e,t,n,a);t>>>=0,n>>>=0,a>>>=0;for(var i=0,s=0;s<n;s++){var l=o()[t>>>2>>>0],u=o()[t+4>>>2>>>0];t+=8;for(var d=0;d<u;d++){var c=r()[l+d>>>0],p=nn[e];0===c||10===c?((1===e?z:O)(ke(p,0)),p.length=0):p.push(c)}i+=u}return o()[a>>>2>>>0]=i,0}var an=[31,29,31,30,31,30,31,31,30,31,30,31],sn=[31,28,31,30,31,30,31,31,30,31,30,31];function on(e,n,r,a){function i(e,t,n){for(e="number"==typeof e?e.toString():e||"";e.length<t;)e=n[0]+e;return e}function l(e,t){return i(e,t,"0")}function u(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function d(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function c(e){var t=e.zb;for(e=new Date(new Date(e.Ab+1900,0,1).getTime());0<t;){var n=e.getMonth(),r=(Ft(e.getFullYear())?an:sn)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return n=new Date(e.getFullYear()+1,0,4),t=d(new Date(e.getFullYear(),0,4)),n=d(n),0>=u(t,e)?0>=u(n,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}e>>>=0,n>>>=0,r>>>=0,a>>>=0;var p=o()[a+40>>>2>>>0];for(var h in a={kc:s()[a>>>2>>>0],jc:s()[a+4>>>2>>>0],Eb:s()[a+8>>>2>>>0],Jb:s()[a+12>>>2>>>0],Fb:s()[a+16>>>2>>>0],Ab:s()[a+20>>>2>>>0],vb:s()[a+24>>>2>>>0],zb:s()[a+28>>>2>>>0],qc:s()[a+32>>>2>>>0],ic:s()[a+36>>>2>>>0],lc:p?Se(p):""},r=Se(r),p={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"})r=r.replace(new RegExp(h,"g"),p[h]);var f="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),m="January February March April May June July August September October November December".split(" ");for(h in p={"%a":e=>f[e.vb].substring(0,3),"%A":e=>f[e.vb],"%b":e=>m[e.Fb].substring(0,3),"%B":e=>m[e.Fb],"%C":e=>l((e.Ab+1900)/100|0,2),"%d":e=>l(e.Jb,2),"%e":e=>i(e.Jb,2," "),"%g":e=>c(e).toString().substring(2),"%G":c,"%H":e=>l(e.Eb,2),"%I":e=>(0==(e=e.Eb)?e=12:12<e&&(e-=12),l(e,2)),"%j":e=>{for(var t=0,n=0;n<=e.Fb-1;t+=(Ft(e.Ab+1900)?an:sn)[n++]);return l(e.Jb+t,3)},"%m":e=>l(e.Fb+1,2),"%M":e=>l(e.jc,2),"%n":()=>"\n","%p":e=>0<=e.Eb&&12>e.Eb?"AM":"PM","%S":e=>l(e.kc,2),"%t":()=>"\t","%u":e=>e.vb||7,"%U":e=>l(Math.floor((e.zb+7-e.vb)/7),2),"%V":e=>{var t=Math.floor((e.zb+7-(e.vb+6)%7)/7);if(2>=(e.vb+371-e.zb-2)%7&&t++,t)53==t&&(4==(n=(e.vb+371-e.zb)%7)||3==n&&Ft(e.Ab)||(t=1));else{t=52;var n=(e.vb+7-e.zb-1)%7;(4==n||5==n&&Ft(e.Ab%400-1))&&t++}return l(t,2)},"%w":e=>e.vb,"%W":e=>l(Math.floor((e.zb+7-(e.vb+6)%7)/7),2),"%y":e=>(e.Ab+1900).toString().substring(2),"%Y":e=>e.Ab+1900,"%z":e=>(0<=(e=e.ic)?"+":"-")+("0000"+((e=Math.abs(e)/60)/60*100+e%60)).slice(-4),"%Z":e=>e.lc,"%%":()=>"%"},r=r.replace(/%%/g,"\0\0"),p)r.includes(h)&&(r=r.replace(new RegExp(h,"g"),p[h](a)));return h=function(e){var t=Array(Ae(e)+1);return Ie(e,t,0,t.length),t}(r=r.replace(/\0\0/g,"%")),h.length>n?0:(((e,n)=>{t().set(e,n>>>0)})(h,e),h.length-1)}_e.Gb();for(var ln=Array(256),un=0;256>un;++un)ln[un]=String.fromCharCode(un);Ve=ln,Ge=p.BindingError=class extends Error{constructor(e){super(e),this.name="BindingError"}},p.InternalError=class extends Error{constructor(e){super(e),this.name="InternalError"}},Je.push(0,1,void 0,1,null,1,!0,1,!1,1),p.count_emval_handles=()=>Je.length/2-5-Qe.length;var dn=[fe,we,ve,Ee,Ce,ze,Oe,Me,Re,Pe,Be,Ne,Ue,We,Fe,Le,Gt,Ht,Qt,Jt,Zt,en,tn,rn],cn={ua:function(e,t,n){return Pt((async()=>{await p.Zb(e,t,n)}))},b:function(e,t,n){throw new be(e>>>=0).Gb(t>>>0,n>>>0),e},ia:function(e){_n(e>>>0,!$,1,!v,131072,!1),_e.Pb()},G:function(e){e>>>=0,k?postMessage({cmd:"cleanupThread",thread:e}):_e.Nb(_e.ub[e])},_:$e,A:Ee,pa:Ce,W:ze,Y:Oe,qa:Me,na:Re,fa:Pe,ma:Be,K:Ne,X:Ue,U:We,oa:Fe,V:Le,E:function(e,t,n){n>>>=0,Ye(e>>>=0,{name:t=He(t>>>0),fromWireType:e=>e,toWireType:function(e,t){if("bigint"!=typeof t&&"number"!=typeof t)throw t=null===t?"null":"object"==(e=typeof t)||"array"===e||"function"===e?t.toString():""+t,new TypeError(`Cannot convert "${t}" to ${this.name}`);return"number"==typeof t&&(t=BigInt(t)),t},argPackAdvance:8,readValueFromPointer:Xe(t,n,-1==t.indexOf("u")),Bb:null})},O:function(e,t,n,a){Ye(e>>>=0,{name:t=He(t>>>0),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?n:a},argPackAdvance:8,readValueFromPointer:function(e){return this.fromWireType(r()[e>>>0])},Bb:null})},N:function(e){return Ye(e>>>0,rt)},D:function(e,t,n){n>>>=0,Ye(e>>>=0,{name:t=He(t>>>0),fromWireType:e=>e,toWireType:(e,t)=>t,argPackAdvance:8,readValueFromPointer:at(t,n),Bb:null})},t:function(e,t,n,r,a){if(e>>>=0,n>>>=0,t=He(t>>>0),-1===a&&(a=4294967295),a=e=>e,0===r){var i=32-8*n;a=e=>e<<i>>>i}var s=t.includes("unsigned")?function(e,t){return t>>>0}:function(e,t){return t};Ye(e,{name:t,fromWireType:a,toWireType:s,argPackAdvance:8,readValueFromPointer:Xe(t,n,0!==r),Bb:null})},p:function(e,n,r){function a(e){var n=o()[e>>>2>>>0];return e=o()[e+4>>>2>>>0],new i(t().buffer,e,n)}var i=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][n];Ye(e>>>=0,{name:r=He(r>>>0),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{Ub:!0})},F:function(e,t){e>>>=0;var n="std::string"===(t=He(t>>>0));Ye(e,{name:t,fromWireType:function(e){var t=o()[e>>>2>>>0],a=e+4;if(n)for(var i=a,s=0;s<=t;++s){var l=a+s;if(s==t||0==r()[l>>>0]){if(i=Se(i,l-i),void 0===u)var u=i;else u+=String.fromCharCode(0),u+=i;i=l+1}}else{for(u=Array(t),s=0;s<t;++s)u[s]=String.fromCharCode(r()[a+s>>>0]);u=u.join("")}return gn(e),u},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var a="string"==typeof t;if(!(a||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array))throw new Ge("Cannot pass non-string to std::string");var i=n&&a?Ae(t):t.length,s=mn(4+i+1),l=s+4;if(o()[s>>>2>>>0]=i,n&&a)Te(t,l,i+1);else if(a)for(a=0;a<i;++a){var u=t.charCodeAt(a);if(255<u)throw gn(l),new Ge("String has UTF-16 code units that do not fit in 8 bits");r()[l+a>>>0]=u}else for(a=0;a<i;++a)r()[l+a>>>0]=t[a];return null!==e&&e.push(gn,s),s},argPackAdvance:8,readValueFromPointer:nt,Bb(e){gn(e)}})},z:function(e,t,n){if(e>>>=0,t>>>=0,n=He(n>>>=0),2===t)var r=ot,a=lt,s=ut,l=e=>i()[e>>>1>>>0];else 4===t&&(r=pt,a=ft,s=yt,l=e=>o()[e>>>2>>>0]);Ye(e,{name:n,fromWireType:e=>{for(var n,a=o()[e>>>2>>>0],i=e+4,s=0;s<=a;++s){var u=e+4+s*t;(s==a||0==l(u))&&(i=r(i,u-i),void 0===n?n=i:(n+=String.fromCharCode(0),n+=i),i=u+t)}return gn(e),n},toWireType:(e,r)=>{if("string"!=typeof r)throw new Ge(`Cannot pass non-string to C++ string type ${n}`);var i=s(r),l=mn(4+i+t);return o()[l>>>2>>>0]=i/t,a(r,l+4,i+t),null!==e&&e.push(gn,l),l},argPackAdvance:8,readValueFromPointer:nt,Bb(e){gn(e)}})},P:function(e,t){Ye(e>>>=0,{Vb:!0,name:t=He(t>>>0),argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(e,t){(e>>>=0)==t>>>0?setTimeout(vt):k?postMessage({targetThread:e,cmd:"checkMailbox"}):(e=_e.ub[e])&&e.postMessage({cmd:"checkMailbox"})},$:function(e,t,n,r,a){t>>>=0,n>>>=0,r/=2,$t.length=r,a=a>>>0>>>3;for(var i=0;i<r;i++)$t[i]=V[a+2*i]?V[a+2*i+1]:u()[a+2*i+1>>>0];return e=t?le[t]:dn[e],_e.Sb=n,n=e(...$t),_e.Sb=0,n},ha:bt,sa:function(e){x&&_e.ub[e>>>0].ref()},w:function(e,t,n){return t>>>=0,n>>>=0,e=et(e>>>0),t=xt(t,"emval::as"),kt(t,n,e)},y:function(e){return e>>>=0,Pt((()=>(e=et(e)).then(tt)))},o:function(e,t,n,r){return n>>>=0,r>>>=0,(e=Bt[e>>>0])(null,t=et(t>>>0),n,r)},k:function(e,t,n,r,a){return n>>>=0,r>>>=0,a>>>=0,(e=Bt[e>>>0])(t=et(t>>>0),t[n=Nt(n)],r,a)},c:Ze,C:function(e,t){return t>>>=0,(e=et(e>>>0))==et(t)},n:function(e){return 0==(e>>>=0)?tt(Ut()):(e=Nt(e),tt(Ut()[e]))},j:function(e,t,n){t=((e,t)=>{for(var n=Array(e),r=0;r<e;++r)n[r]=xt(o()[t+4*r>>>2>>>0],"parameter "+r);return n})(e,t>>>0);var r=t.shift();e--;var a="return function (obj, func, destructorsRef, args) {\n",i=0,s=[];0===n&&s.push("obj");for(var l=["retType"],u=[r],d=0;d<e;++d)s.push("arg"+d),l.push("argType"+d),u.push(t[d]),a+=`  var arg${d} = argType${d}.readValueFromPointer(args${i?"+"+i:""});\n`,i+=t[d].argPackAdvance;return a+=`  var rv = ${1===n?"new func":"func.call"}(${s.join(", ")});\n`,r.Vb||(l.push("emval_returnValue"),u.push(kt),a+="  return emval_returnValue(retType, destructorsRef, rv);\n"),l.push(a+"};\n"),e=function(e){var t=Function;if(!(t instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof t} which is not a function`);var n=Wt(t.name||"unknownFunctionName",(function(){}));return n.prototype=t.prototype,n=new n,(e=t.apply(n,e))instanceof Object?e:n}(l)(...u),n=`methodCaller<(${t.map((e=>e.name)).join(", ")}) => ${r.name}>`,(e=>{var t=Bt.length;return Bt.push(e),t})(Wt(n,e))},s:function(e,t){return t>>>=0,e=et(e>>>0),t=et(t),tt(e[t])},d:function(e){9<(e>>>=0)&&(Je[e+1]+=1)},v:function(){return tt([])},m:function(e){e=et(e>>>0);for(var t=Array(e.length),n=0;n<e.length;n++)t[n]=e[n];return tt(t)},g:function(e){return tt(Nt(e>>>0))},l:function(){return tt({})},i:function(e){for(var t=et(e>>>=0);t.length;){var n=t.pop();t.pop()(n)}Ze(e)},h:function(e,t,n){t>>>=0,n>>>=0,e=et(e>>>0),t=et(t),n=et(n),e[t]=n},e:function(e,t){return t>>>=0,e=(e=xt(e>>>0,"_emval_take_value")).readValueFromPointer(t),tt(e)},ca:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),s()[t>>>2>>>0]=e.getUTCSeconds(),s()[t+4>>>2>>>0]=e.getUTCMinutes(),s()[t+8>>>2>>>0]=e.getUTCHours(),s()[t+12>>>2>>>0]=e.getUTCDate(),s()[t+16>>>2>>>0]=e.getUTCMonth(),s()[t+20>>>2>>>0]=e.getUTCFullYear()-1900,s()[t+24>>>2>>>0]=e.getUTCDay(),e=(e.getTime()-Date.UTC(e.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,s()[t+28>>>2>>>0]=e},da:function(e,t){e=-9007199254740992>e||9007199254740992<e?NaN:Number(e),t>>>=0,e=new Date(1e3*e),s()[t>>>2>>>0]=e.getSeconds(),s()[t+4>>>2>>>0]=e.getMinutes(),s()[t+8>>>2>>>0]=e.getHours(),s()[t+12>>>2>>>0]=e.getDate(),s()[t+16>>>2>>>0]=e.getMonth(),s()[t+20>>>2>>>0]=e.getFullYear()-1900,s()[t+24>>>2>>>0]=e.getDay();var n=(Ft(e.getFullYear())?Lt:Vt)[e.getMonth()]+e.getDate()-1|0;s()[t+28>>>2>>>0]=n,s()[t+36>>>2>>>0]=-60*e.getTimezoneOffset(),n=new Date(e.getFullYear(),6,1).getTimezoneOffset();var r=new Date(e.getFullYear(),0,1).getTimezoneOffset();e=0|(n!=r&&e.getTimezoneOffset()==Math.min(r,n)),s()[t+32>>>2>>>0]=e},ea:function(e){e>>>=0;var t=new Date(s()[e+20>>>2>>>0]+1900,s()[e+16>>>2>>>0],s()[e+12>>>2>>>0],s()[e+8>>>2>>>0],s()[e+4>>>2>>>0],s()[e>>>2>>>0],0),n=s()[e+32>>>2>>>0],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),i=new Date(t.getFullYear(),0,1).getTimezoneOffset(),o=Math.min(i,a);return 0>n?s()[e+32>>>2>>>0]=+(a!=i&&o==r):0<n!=(o==r)&&(a=Math.max(i,a),t.setTime(t.getTime()+6e4*((0<n?o:a)-r))),s()[e+24>>>2>>>0]=t.getDay(),n=(Ft(t.getFullYear())?Lt:Vt)[t.getMonth()]+t.getDate()-1|0,s()[e+28>>>2>>>0]=n,s()[e>>>2>>>0]=t.getSeconds(),s()[e+4>>>2>>>0]=t.getMinutes(),s()[e+8>>>2>>>0]=t.getHours(),s()[e+12>>>2>>>0]=t.getDate(),s()[e+16>>>2>>>0]=t.getMonth(),s()[e+20>>>2>>>0]=t.getYear(),e=t.getTime(),BigInt(isNaN(e)?-1:e/1e3)},aa:Gt,ba:Ht,R:function(e,t,n,r){e>>>=0,t>>>=0,n>>>=0,r>>>=0;var a=(new Date).getFullYear(),i=new Date(a,0,1),l=new Date(a,6,1);a=i.getTimezoneOffset();var u=l.getTimezoneOffset(),d=Math.max(a,u);o()[e>>>2>>>0]=60*d,s()[t>>>2>>>0]=+(a!=u),i=(e=e=>e.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1])(i),l=e(l),u<a?(Te(i,n,17),Te(l,r,17)):(Te(i,r,17),Te(l,n,17))},q:()=>{ne("")},f:function(e,t,n){return e>>>=0,t=Kt(t>>>0,n>>>0),le[e](...t)},M:function(e,t,n){return e>>>=0,t=Kt(t>>>0,n>>>0),le[e](...t)},H:()=>{},L:()=>Date.now(),ra:()=>{throw pe+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>x?(Nl(),De(_t)).cpus().length:navigator.hardwareConcurrency,Q:function(e){e>>>=0;var t=r().length;if(e<=t||4294901760<e)return!1;for(var n=1;4>=n;n*=2){var a=t*(1+.2/n);a=Math.min(a,e+100663296);var i=Math;a=Math.max(e,a);e:{i=(i.min.call(i,4294901760,a+(65536-a%65536)%65536)-M.buffer.byteLength+65535)/65536;try{M.grow(i),j();var s=1;break e}catch{}s=void 0}if(s)return!0}return!1},ja:Qt,la:Jt,Z:me,B:Zt,J:en,ga:tn,I:rn,a:M||p.wasmMemory,ka:on,r:function(e,t,n,r){return on(e>>>0,t>>>0,n>>>0,r>>>0)}},pn=function(){function e(e,t){return pn=e.exports,pn=function(){var e=pn,t={};for(let[n,r]of Object.entries(e))t[n]="function"==typeof r?(...e)=>{It.push(n);try{return r(...e)}finally{q||(It.pop(),Ct&&1===Et&&0===It.length&&(Et=0,pe+=1,St(In),typeof Fibers<"u"&&Fibers.rc()))}}:r;return t}(),pn=function(){var e=pn,t=e=>t=>e(t)>>>0,n=e=>()=>e()>>>0;return(e=Object.assign({},e)).wa=t(e.wa),e.$a=n(e.$a),e.ab=t(e.ab),e.emscripten_main_runtime_thread_id=n(e.emscripten_main_runtime_thread_id),e.mb=t(e.mb),e.nb=n(e.nb),e}(),_e.Qb.push(pn.cb),X.unshift(pn.va),R=t,te(),pn}var t={a:cn};if(J++,p.instantiateWasm)try{return p.instantiateWasm(t,e)}catch(e){O(`Module.instantiateWasm callback failed with error: ${e}`),c(e)}return function(e,t){var n=re;return"function"!=typeof WebAssembly.instantiateStreaming||ae(n)||ie(n)||x||"function"!=typeof fetch?oe(n,e,t):fetch(n,{credentials:"same-origin"}).then((r=>WebAssembly.instantiateStreaming(r,e).then(t,(function(r){return O(`wasm streaming compile failed: ${r}`),O("falling back to ArrayBuffer instantiation"),oe(n,e,t)}))))}(t,(function(t){e(t.instance,t.module)})).catch(c),{}}(),hn=e=>(hn=pn.wa)(e);p.__embind_initialize_bindings=()=>(p.__embind_initialize_bindings=pn.xa)(),p._OrtInit=(e,t)=>(p._OrtInit=pn.ya)(e,t),p._OrtGetLastError=(e,t)=>(p._OrtGetLastError=pn.za)(e,t),p._OrtCreateSessionOptions=(e,t,n,r,a,i,s,o,l,u)=>(p._OrtCreateSessionOptions=pn.Aa)(e,t,n,r,a,i,s,o,l,u),p._OrtAppendExecutionProvider=(e,t)=>(p._OrtAppendExecutionProvider=pn.Ba)(e,t),p._OrtAddFreeDimensionOverride=(e,t,n)=>(p._OrtAddFreeDimensionOverride=pn.Ca)(e,t,n),p._OrtAddSessionConfigEntry=(e,t,n)=>(p._OrtAddSessionConfigEntry=pn.Da)(e,t,n),p._OrtReleaseSessionOptions=e=>(p._OrtReleaseSessionOptions=pn.Ea)(e),p._OrtCreateSession=(e,t,n)=>(p._OrtCreateSession=pn.Fa)(e,t,n),p._OrtReleaseSession=e=>(p._OrtReleaseSession=pn.Ga)(e),p._OrtGetInputOutputCount=(e,t,n)=>(p._OrtGetInputOutputCount=pn.Ha)(e,t,n),p._OrtGetInputName=(e,t)=>(p._OrtGetInputName=pn.Ia)(e,t),p._OrtGetOutputName=(e,t)=>(p._OrtGetOutputName=pn.Ja)(e,t),p._OrtFree=e=>(p._OrtFree=pn.Ka)(e),p._OrtCreateTensor=(e,t,n,r,a,i)=>(p._OrtCreateTensor=pn.La)(e,t,n,r,a,i),p._OrtGetTensorData=(e,t,n,r,a)=>(p._OrtGetTensorData=pn.Ma)(e,t,n,r,a),p._OrtReleaseTensor=e=>(p._OrtReleaseTensor=pn.Na)(e),p._OrtCreateRunOptions=(e,t,n,r)=>(p._OrtCreateRunOptions=pn.Oa)(e,t,n,r),p._OrtAddRunConfigEntry=(e,t,n)=>(p._OrtAddRunConfigEntry=pn.Pa)(e,t,n),p._OrtReleaseRunOptions=e=>(p._OrtReleaseRunOptions=pn.Qa)(e),p._OrtCreateBinding=e=>(p._OrtCreateBinding=pn.Ra)(e),p._OrtBindInput=(e,t,n)=>(p._OrtBindInput=pn.Sa)(e,t,n),p._OrtBindOutput=(e,t,n,r)=>(p._OrtBindOutput=pn.Ta)(e,t,n,r),p._OrtClearBoundOutputs=e=>(p._OrtClearBoundOutputs=pn.Ua)(e),p._OrtReleaseBinding=e=>(p._OrtReleaseBinding=pn.Va)(e),p._OrtRunWithBinding=(e,t,n,r,a)=>(p._OrtRunWithBinding=pn.Wa)(e,t,n,r,a),p._OrtRun=(e,t,n,r,a,i,s,o)=>(p._OrtRun=pn.Xa)(e,t,n,r,a,i,s,o),p._OrtEndProfiling=e=>(p._OrtEndProfiling=pn.Ya)(e),p._JsepOutput=(e,t,n)=>(p._JsepOutput=pn.Za)(e,t,n),p._JsepGetNodeName=e=>(p._JsepGetNodeName=pn._a)(e);var fn=p._pthread_self=()=>(fn=p._pthread_self=pn.$a)(),mn=p._malloc=e=>(mn=p._malloc=pn.ab)(e),gn=p._free=e=>(gn=p._free=pn.bb)(e);p.__emscripten_tls_init=()=>(p.__emscripten_tls_init=pn.cb)();var _n=p.__emscripten_thread_init=(e,t,n,r,a,i)=>(_n=p.__emscripten_thread_init=pn.eb)(e,t,n,r,a,i);p.__emscripten_thread_crashed=()=>(p.__emscripten_thread_crashed=pn.fb)();var yn,wn=(e,t,n,r,a)=>(wn=pn.gb)(e,t,n,r,a),bn=e=>(bn=pn.hb)(e),vn=p.__emscripten_thread_exit=e=>(vn=p.__emscripten_thread_exit=pn.ib)(e),$n=()=>($n=pn.jb)(),xn=(e,t)=>(xn=pn.kb)(e,t),kn=e=>(kn=pn.lb)(e),Sn=e=>(Sn=pn.mb)(e),En=()=>(En=pn.nb)(),Cn=p.dynCall_ii=(e,t)=>(Cn=p.dynCall_ii=pn.pb)(e,t),An=e=>(An=pn.qb)(e),In=()=>(In=pn.rb)(),Tn=e=>(Tn=pn.sb)(e),zn=()=>(zn=pn.tb)();function On(){if(!(0<J))if(k)d(p),k||ye(X),startWorker(p);else{if(p.preRun)for("function"==typeof p.preRun&&(p.preRun=[p.preRun]);p.preRun.length;)Y.unshift(p.preRun.shift());ye(Y),0<J||yn||(yn=!0,p.calledRun=!0,q||(k||ye(X),d(p),k||ye(Q)))}}return p.___start_em_js=839500,p.___stop_em_js=839661,p.wasmMemory=M,p.stackSave=()=>En(),p.stackRestore=e=>kn(e),p.stackAlloc=e=>Sn(e),p.keepRuntimeAlive=()=>0<pe,p.UTF8ToString=Se,p.stringToUTF8=Te,p.lengthBytesUTF8=Ae,p.ExitStatus=ue,p.PThread=_e,ee=function e(){yn||On(),yn||(ee=e)},On(),h});"object"==typeof e&&"object"==typeof t?t.exports=r:"function"==typeof define&&define.amd&&define([],(()=>r))})),Wl=Pe(((e,t)=>{t.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\n'})),Fl=Re((()=>{wt=ft(),bt=Ul(),$t=!1,xt=!1,kt=!1,St=e=>{if(1===e)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Et=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ct=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",At=async e=>{if($t)return Promise.resolve();if(xt)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(kt)throw new Error("previous call to 'initializeWebAssembly()' failed.");xt=!0;let t=e.initTimeout,n=e.numThreads,r=e.simd,a=St(n),i=r&&Et(),s=e.wasmPaths,o="string"==typeof s?s:void 0,l=Ct(i,a),u="object"==typeof s?s[l]:void 0,d=!1,c=[];if(t>0&&c.push(new Promise((e=>{setTimeout((()=>{d=!0,e()}),t)}))),c.push(new Promise(((e,t)=>{let r=a?bt:wt,i={locateFile:(e,t)=>{if(a&&e.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Wl()],{type:"text/javascript"}));if(e.endsWith(".wasm")){if(u)return u;let e=o??t;return"ort-wasm-simd.wasm"===l?e+"ort-wasm-simd.jsep.wasm":"ort-wasm-simd-threaded.wasm"===l?e+"ort-wasm-simd-threaded.jsep.wasm":e+l}return t+e}};if(a)if(i.numThreads=n,typeof Blob>"u")i.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let e=`var ortWasmThreaded=${r.toString()};`;i.mainScriptUrlOrBlob=new Blob([e],{type:"text/javascript"})}r(i).then((t=>{xt=!1,$t=!0,vt=t,e()}),(e=>{xt=!1,kt=!0,t(e)}))}))),await Promise.race(c),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},It=()=>{if($t&&vt)return vt;throw new Error("WebAssembly is not initialized yet.")}})),Ll=Re((()=>{Fl(),Tt=(e,t)=>{let n=It(),r=n.lengthBytesUTF8(e)+1,a=n._malloc(r);return n.stringToUTF8(e,a,r),t.push(a),a},zt=(e,t,n,r)=>{if("object"==typeof e&&null!==e){if(n.has(e))throw new Error("Circular reference in options");n.add(e)}Object.entries(e).forEach((([e,a])=>{let i=t?t+e:e;if("object"==typeof a)zt(a,i+".",n,r);else if("string"==typeof a||"number"==typeof a)r(i,a.toString());else{if("boolean"!=typeof a)throw new Error("Can't handle extra config type: "+typeof a);r(i,a?"1":"0")}}))},Ot=e=>{let t=It(),n=t.stackSave();try{let n=t.stackAlloc(8);t._OrtGetLastError(n,n+4);let r=t.HEAP32[n/4],a=t.HEAPU32[n/4+1],i=a?t.UTF8ToString(a):"";throw new Error(`${e} ERROR_CODE: ${r}, ERROR_MESSAGE: ${i}`)}finally{t.stackRestore(n)}}})),Vl=Re((()=>{Fl(),Ll(),Mt=e=>{let t=It(),n=0,r=[],a=e||{};try{if(void 0===e?.logSeverityLevel)a.logSeverityLevel=2;else if("number"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===e?.logVerbosityLevel)a.logVerbosityLevel=0;else if("number"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===e?.terminate&&(a.terminate=!1);let i=0;return void 0!==e?.tag&&(i=Tt(e.tag,r)),n=t._OrtCreateRunOptions(a.logSeverityLevel,a.logVerbosityLevel,!!a.terminate,i),0===n&&Ot("Can't create run options."),void 0!==e?.extra&&zt(e.extra,"",new WeakSet,((e,a)=>{let i=Tt(e,r),s=Tt(a,r);0!==t._OrtAddRunConfigEntry(n,i,s)&&Ot(`Can't set a run config entry: ${e} - ${a}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),r.forEach((e=>t._free(e))),e}}})),Gl=Re((()=>{Fl(),Ll(),Rt=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Pt=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Bt=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some((e=>"webgpu"===("string"==typeof e?e:e.name)))&&(e.enableMemPattern=!1)},Dt=(e,t,n)=>{for(let r of t){let t="string"==typeof r?r:r.name;switch(t){case"webnn":if(t="WEBNN","string"!=typeof r){let t=r;if(t?.deviceType){let r=Tt("deviceType",n),a=Tt(t.deviceType,n);0!==It()._OrtAddSessionConfigEntry(e,r,a)&&Ot(`Can't set a session config entry: 'deviceType' - ${t.deviceType}.`)}if(t?.numThreads){let r=t.numThreads;("number"!=typeof r||!Number.isInteger(r)||r<0)&&(r=0);let a=Tt("numThreads",n),i=Tt(r.toString(),n);0!==It()._OrtAddSessionConfigEntry(e,a,i)&&Ot(`Can't set a session config entry: 'numThreads' - ${t.numThreads}.`)}if(t?.powerPreference){let r=Tt("powerPreference",n),a=Tt(t.powerPreference,n);0!==It()._OrtAddSessionConfigEntry(e,r,a)&&Ot(`Can't set a session config entry: 'powerPreference' - ${t.powerPreference}.`)}}break;case"webgpu":if(t="JS","string"!=typeof r){let t=r;if(t?.preferredLayout){if("NCHW"!==t.preferredLayout&&"NHWC"!==t.preferredLayout)throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${t.preferredLayout}`);let r=Tt("preferredLayout",n),a=Tt(t.preferredLayout,n);0!==It()._OrtAddSessionConfigEntry(e,r,a)&&Ot(`Can't set a session config entry: 'preferredLayout' - ${t.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${t}`)}let a=Tt(t,n);0!==It()._OrtAppendExecutionProvider(e,a)&&Ot(`Can't append execution provider: ${t}.`)}},Nt=e=>{let t=It(),n=0,r=[],a=e||{};Bt(a);try{let e=Rt(a.graphOptimizationLevel??"all"),i=Pt(a.executionMode??"sequential"),s="string"==typeof a.logId?Tt(a.logId,r):0,o=a.logSeverityLevel??2;if(!Number.isInteger(o)||o<0||o>4)throw new Error(`log serverity level is not valid: ${o}`);let l=a.logVerbosityLevel??0;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log verbosity level is not valid: ${l}`);let u="string"==typeof a.optimizedModelFilePath?Tt(a.optimizedModelFilePath,r):0;if(n=t._OrtCreateSessionOptions(e,!!a.enableCpuMemArena,!!a.enableMemPattern,i,!!a.enableProfiling,0,s,o,l,u),0===n&&Ot("Can't create session options."),a.executionProviders&&Dt(n,a.executionProviders,r),void 0!==a.enableGraphCapture){if("boolean"!=typeof a.enableGraphCapture)throw new Error(`enableGraphCapture must be a boolean value: ${a.enableGraphCapture}`);let e=Tt("enableGraphCapture",r),i=Tt(a.enableGraphCapture.toString(),r);0!==t._OrtAddSessionConfigEntry(n,e,i)&&Ot(`Can't set a session config entry: 'enableGraphCapture' - ${a.enableGraphCapture}.`)}if(a.freeDimensionOverrides)for(let[e,i]of Object.entries(a.freeDimensionOverrides)){if("string"!=typeof e)throw new Error(`free dimension override name must be a string: ${e}`);if("number"!=typeof i||!Number.isInteger(i)||i<0)throw new Error(`free dimension override value must be a non-negative integer: ${i}`);let a=Tt(e,r);0!==t._OrtAddFreeDimensionOverride(n,a,i)&&Ot(`Can't set a free dimension override: ${e} - ${i}.`)}return void 0!==a.extra&&zt(a.extra,"",new WeakSet,((e,a)=>{let i=Tt(e,r),s=Tt(a,r);0!==t._OrtAddSessionConfigEntry(n,i,s)&&Ot(`Can't set a session config entry: ${e} - ${a}.`)})),[n,r]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),r.forEach((e=>t._free(e))),e}}})),Hl=Re((()=>{Ut=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Wt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Ft=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Lt=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":case"bool":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Vt=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Gt=e=>"float32"===e||"float16"===e||"int32"===e||"int64"===e||"uint32"===e||"uint8"===e||"bool"===e,Ht=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}})),ql=Re((()=>{qt=async e=>{if("string"!=typeof e)return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e);if(!(typeof process<"u"&&process.versions&&process.versions.node)){let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let n=t.headers.get("Content-Length"),r=n?parseInt(n,10):0;if(r<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n,a=t.body.getReader();try{n=new ArrayBuffer(r)}catch(e){if(!(e instanceof RangeError))throw e;{let e=Math.ceil(r/65536);n=new WebAssembly.Memory({initial:e,maximum:e}).buffer}}let i=0;for(;;){let{done:e,value:t}=await a.read();if(e)break;let r=t.byteLength;new Uint8Array(n,i,r).set(t),i+=r}return new Uint8Array(n,0,r)}}try{return new Uint8Array(await(void 0)(e))}catch(t){if("ERR_FS_FILE_TOO_LARGE"===t.code){let t=(void 0)(e),n=[];for await(let e of t)n.push(e);return new Uint8Array(Buffer.concat(n))}throw t}}})),jl=Re((()=>{Hl(),jt=["V","I","W","E","F"],Kt=(e,t)=>{console.log(`[${jt[e]},${(new Date).toISOString()}]${t}`)},Qt=(e,t)=>{Yt=e,Xt=t},Jt=(e,t)=>{let n=Vt(e);n>=Vt(Yt)&&Kt(n,"function"==typeof t?t():t)},Zt=(...e)=>{Xt&&Jt(...e)}})),Kl=Re((()=>{Hl(),en=(e,t)=>new(Lt(t))(e)})),Yl=Re((()=>{})),Xl=Re((()=>{jl(),Yl(),tn=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),nn=[],rn=e=>16*Math.ceil(e/16),an=e=>{for(let t=0;t<nn.length;t++){let n=nn[t];if(e<=n)return n}return 16*Math.ceil(e/16)},sn=1,on=()=>sn++,ln=async(e,t,n,r)=>{let a=rn(n),i=e.device.createBuffer({size:a,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let s=e.getCommandEncoder();e.endComputePass(),s.copyBufferToBuffer(t,0,i,0,a),e.flush(),await i.mapAsync(GPUMapMode.READ);let o=i.getMappedRange();if(r){let e=r();return e.set(new Uint8Array(o,0,n)),e}return new Uint8Array(o.slice(0,n))}finally{i.destroy()}},un=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[e]of tn)nn.push(e),this.freeBuffers.set(e,[]),this.freeUniformBuffers.set(e,[])}upload(e,t){let n=t.buffer,r=t.byteOffset,a=t.byteLength,i=rn(a),s=this.storageCache.get(e);if(!s)throw new Error("gpu data for uploading does not exist");if(s.originalSize!==a)throw new Error(`inconsistent data size. gpu data size=${s.originalSize}, data size=${a}`);let o=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=o.getMappedRange();new Uint8Array(l).set(new Uint8Array(n,r,a)),o.unmap();let u=this.backend.getCommandEncoder();this.backend.endComputePass(),u.copyBufferToBuffer(o,0,s.gpuData.buffer,0,i),Zt("verbose",(()=>`[WebGPU] GpuDataManager.upload(id=${e})`)),this.buffersForUploadingPending.push(o)}memcpy(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("source gpu data for memcpy does not exist");let r=this.storageCache.get(t);if(!r)throw new Error("destination gpu data for memcpy does not exist");if(n.originalSize!==r.originalSize)throw new Error("inconsistent source and destination gpu data size");let a=rn(n.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(n.gpuData.buffer,0,r.gpuData.buffer,0,a)}registerExternalBuffer(e,t,n){let r;if(n){if(r=this.externalBuffers.get(n),void 0===r)throw new Error("previous buffer is not registered");if(e===n)return Zt("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, buffer is the same, skip.`)),r;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error("Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!");this.externalBuffers.delete(n)}else r=on();return this.storageCache.set(r,{gpuData:{id:r,type:0,buffer:e},originalSize:t}),this.externalBuffers.set(e,r),Zt("verbose",(()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${r}, registered.`)),r}unregisterExternalBuffer(e){let t=this.externalBuffers.get(e);void 0!==t&&(this.storageCache.delete(t),this.externalBuffers.delete(e),Zt("verbose",(()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`)))}create(e,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let n,r=an(e),a=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(a||i){let e=(a?this.freeBuffers:this.freeUniformBuffers).get(r);n=e&&e.length>0?e.pop():this.backend.device.createBuffer({size:r,usage:t})}else n=this.backend.device.createBuffer({size:r,usage:t});let s={id:on(),type:0,buffer:n};return this.storageCache.set(s.id,{gpuData:s,originalSize:e}),Zt("verbose",(()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${s.id}`)),s}get(e){return this.storageCache.get(e)?.gpuData}release(e){let t=this.storageCache.get(e);if(!t)throw new Error("releasing data does not exist");return Zt("verbose",(()=>`[WebGPU] GpuDataManager.release(id=${e}), gpuDataId=${t.gpuData.id}`)),this.storageCache.delete(e),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,t){let n=this.storageCache.get(e);if(!n)throw new Error("data does not exist");await ln(this.backend,n.gpuData.buffer,n.originalSize,t)}refreshPendingBuffers(){for(let e of this.buffersForUploadingPending)e.destroy();if(this.buffersForUploadingPending=[],0!==this.buffersPending.length)if("default"===this.backend.sessionStatus){for(let e of this.buffersPending){let t=tn.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let n=this.freeBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let n=this.freeUniformBuffers.get(e.size)||[];void 0===t||n.length>=t?e.destroy():n.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let t of this.buffersPending)e.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.freeUniformBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache.forEach((e=>{e.gpuData.buffer.destroy()})),this.capturedPendingBuffers.forEach((e=>{e.forEach((e=>{e.destroy()}))})),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(e){let t=this.capturedPendingBuffers.get(e);t&&(t.forEach((e=>{e.destroy()})),this.capturedPendingBuffers.delete(e))}},dn=(...e)=>new un(...e)})),Ql=Re((()=>{cn=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map((e=>`${this[e]}`)).join(";")),this.key}},pn=e=>new cn(e)})),Jl=Re((()=>{hn=class{static calcMatMulShape(e,t){return e[1]!==t[0]?void 0:[e[0],t[1]]}},fn=class{static calcShape(e,t,n=!1){let r=e.length,a=t.length;if(0===r)return t;if(0===a)return e;let i=Math.max(e.length,t.length),s=new Array(i);if(n){if(r<2||a<2)return;let n=hn.calcMatMulShape([e[r-2],e[r-1]],[t[a-2],t[a-1]]);if(void 0===n)return;[s[i-2],s[i-1]]=n}for(let o=n?3:1;o<=i;o++){let n=r-o<0?1:e[r-o],l=a-o<0?1:t[a-o];if(n!==l&&n>1&&l>1)return;let u=Math.max(n,l);if(n&&l)s[i-o]=Math.max(n,l);else{if(u>1)return;s[i-o]=0}}return s}static isValidBroadcast(e,t){let n=e.length,r=t.length;if(n>r)return!1;for(let a=1;a<=n;a++)if(1!==e[n-a]&&e[n-a]!==t[r-a])return!1;return!0}},mn=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(e,t=4){let n=e.length;if(0===n)return[];let r=new Array(n),a=n-1;for(;a>=0;){if(e[a]%t==0){r[a]=e[a]/t;break}if(t%e[a]!=0)throw new Error("cannot convert shape");r[a]=1,t/=e[a],a--}for(a--;a>=0;a--)r[a]=e[a];return r}static sizeFromDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,n,t.length)}static sizeToDimension(t,n){if(n<0||n>t.length)throw new Error(`invalid dimension of ${n} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,n)}static getSizeFromDimensionRange(e,t,n){let r=1;for(let a=t;a<n;a++){if(e[a]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");r*=e[a]}return r}static computeStrides(e){let t=e.length;if(0===t)return[];if(1===t)return[1];let n=new Array(t);n[t-1]=1,n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}static normalizeAxis(e,t){if(e<-t&&e>=t)throw new Error("unsupported axis for this operation.");return e<0?e+t:e}static normalizeAxes(e,t){return e.map((n=>this.normalizeAxis(n,t??e.length)))}static sortBasedOnPerm(e,t){return t?t.map((t=>e[t])):e.slice().reverse()}static padShape(e,t){let n=e.length;return e.map(((e,r)=>e+t[r]+t[r+n]))}static areEqual(e,t){return e.length===t.length&&e.every(((e,n)=>e===t[n]))}},gn=class e{static adjustPoolAttributes(e,t,n,r,a,i){if(!e&&n.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(e)for(let e=0;e<t.length-2;e++)e>=n.length?n.push(t[e+2]):n[e]=t[e+2];for(let e=0;e<n.length;e++)if(e<r.length){if(r[e]<0)throw new Error("strides should be greater than or equal to 1")}else r.push(1);for(let e=0;e<n.length;e++)if(e<a.length){if(a[e]<0)throw new Error("dilations should be greater than or equal to 1")}else a.push(1);for(let e=0;e<2*n.length;e++)if(e<i.length){if(i[e]<0)throw new Error("pad should be greater than or equal to 1")}else i.push(0);for(let e=0;e<n.length;e++){if(n[e]<=0)throw new Error("kernel shapes need to be greater than 0");if(i[e]>=n[e]||i[e+n.length]>=n[e])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,n,r,a,i,s,o){if(o){if(i.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(n.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(a.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<t.length-2;l++)e.adjustPadAndReturnShape(t[l+(s?1:2)],n[l],r[l],a[l],i,l,l+t.length-2,o)}}static computePoolOutputShape(t,n,r,a,i,s,o){if(n.length<=0)throw new Error("input shape must be of size greater than 0");let l=[n[0],n[1]];return e.computeShapeHelper(t,n,l,r,a,i,s,o),l}static computeConvOutputShape(t,n,r,a,i,s,o){if(t.length<=0||n.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[t[0],n[0]];return e.computeShapeHelper(!1,t,l,r,a,i,s,o),l}static computeShapeHelper(t,n,r,a,i,s,o,l){if(t)for(let e=0;e<n.length-2;e++)r.push(1);else for(let t=0;t<n.length-2;t++)r.push(e.adjustPadAndReturnShape(n[t+2],a[t],i[t],s[t],o,t,t+n.length-2,l))}static adjustPadAndReturnShape(e,t,n,r,a,i,s,o){let l=n*(r-1)+1;if(!o||"NOTSET"===o)return Math.floor((e+a[i]+a[s]-l)/t+1);switch(o){case"VALID":return a[i]=0,a[s]=0,Math.floor((e-l)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(1!==n)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let n=((e+t-1)/t-1)*t+r-e;return a[i]=Math.floor("SAME_LOWER"===o?(n+1)/2:n/2),a[s]=n-a[i],Math.floor((e+n-r)/t+1)}default:throw new Error("Unsupported AutoPad type")}}},_n=class{static getShapeOfGemmResult(e,t,n,r,a){if(2!==e.length||2!==n.length)throw new Error("shape need to be of size 2");let i,s,o;t?(i=e[1],s=e[0]):(i=e[0],s=e[1]);let l=-1;if(r?(o=n[0],l=1):(o=n[1],l=0),n[l]!==s)throw new Error("dimension mismatch");if(i<=0||o<=0||s<=0)throw new Error("invalid shape specified");if(a&&!fn.isValidBroadcast(a,[i,o]))throw new Error("gemm: invalid bias shape for broadcast");return[i,o,s]}},yn=-34028234663852886e22,wn=34028234663852886e22})),Zl=Re((()=>{Hl(),Jl(),bn=64,vn=(e,t)=>{if(3===t)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(4!==t)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},$n=(e,t=1)=>{let n=vn(e,t);return"string"==typeof n?n:n[0]},xn=(e,t=1)=>{let n=vn(e,t);return"string"==typeof n?n:n[1]},kn=(...e)=>{let t=[];return e.forEach((e=>{0!==e.length&&t.push({type:12,data:e},{type:12,data:mn.computeStrides(e)})})),t},Sn=e=>e%4==0?4:e%2==0?2:1,En=(e="f32",t,n="0")=>t&&1!==t?`vec${t}<${e}>(${n})`:`${e}(${n})`,Cn=(e,t,n)=>"f32"===e?n:1===t?`f32(${n})`:`vec${t}<f32>(${n})`,An=(e,t)=>4===t?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:2===t?`(${e}.x + ${e}.y)`:3===t?`(${e}.x + ${e}.y + ${e}.z)`:e,In=(e,t,n,r)=>e.startsWith("uniforms.")&&n>4?"string"==typeof t?"f16"===r?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:"f16"===r?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:n>1?`${e}[${t}]`:e,Tn=(e,t,n,r,a)=>{let i="number"==typeof n,s=i?n:n.length,o=[...new Array(s).keys()],l=s<2?"u32":s<=4?`vec${s}<u32>`:`array<u32, ${s}>`,u=vn(t,a),d="string"==typeof u?u:u[1],c="string"==typeof u?u:u[0],p={indices:l,value:d,storage:c,tensor:t},h=e=>"string"==typeof e?e:`${e}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},m=i?"uniforms.":"",g=`${m}${e}_shape`,_=`${m}${e}_strides`,y="";for(let e=0;e<s-1;e++)y+=`\n    let dim${e} = current / ${In(_,e,s)};\n    let rest${e} = current % ${In(_,e,s)};\n    indices[${e}] = dim${e};\n    current = rest${e};\n    `;y+=`indices[${s-1}] = current;`;let w=s<2?"":`\n  fn o2i_${e}(offset: u32) -> ${p.indices} {\n    var indices: ${p.indices};\n    var current = offset;\n    ${y}\n    return indices;\n  }`,b=[];if(s>=2)for(let e=s-1;e>=0;e--)b.push(`${In(_,e,s)} * (indices[${e}])`);let v=s<2?"":`\n  fn i2o_${e}(indices: ${p.indices}) -> u32 {\n    return ${b.join("+")};\n  }`,$=(...e)=>0===s?"0u":`${p.indices}(${e.map(h).join(",")})`,x=(e,t)=>s<2?`${e}`:`${In(e,t,s)}`,k={},S=(t,n)=>(()=>{if(p.storage===p.value)return`${e}[${t}]=${n};`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), select(0u, 0xFFFFFFFFu, ${n} < 0));`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`${e}[${t}]=vec2<u32>(u32(${n}), 0u);`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`${e}[${t}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${n}));`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),E=t=>(()=>{if(p.storage===p.value)return`${e}[${t}]`;if("vec2<u32>"===p.storage&&"i32"===p.value)return`i32(${e}[${t}].x)`;if("vec2<u32>"===p.storage&&"u32"===p.value)return`u32(${e}[${t}].x)`;if("u32"===p.storage&&"vec4<bool>"===p.value)return`vec4<bool>(bool(${e}[${t}] & 0xFFu), bool(${e}[${t}] & 0xFF00u), bool(${e}[${t}] & 0xFF0000u), bool(${e}[${t}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${p.storage} and value type ${p.value} yet`)})(),C=s<2?"":`\n  fn get_${e}ByIndices(indices: ${p.indices}) -> ${d} {\n    return ${E(`i2o_${e}(indices)`)};\n  }`,A=s<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn get_${e}(${t}) -> ${d} {\n    return get_${e}ByIndices(${$(n)});\n  }`})(),I=s<2?"":`\n  fn set_${e}ByIndices(indices: ${p.indices}, value: ${d}) {\n    ${S(`i2o_${e}(indices)`,"value")}\n  }`,T=s<2?"":(()=>{let t=o.map((e=>`d${e}: u32`)).join(", "),n=o.map((e=>`d${e}`)).join(", ");return`\n  fn set_${e}(${t}, value: ${d}) {\n    set_${e}ByIndices(${$(n)}, value);\n  }`})();return{impl:()=>{let e=[],t=!1;return f.offsetToIndices&&(e.push(w),t=!0),f.indicesToOffset&&(e.push(v),t=!0),f.broadcastedIndicesToOffset&&(Object.values(k).forEach((t=>e.push(t))),t=!0),f.set&&(e.push(T),t=!0),f.setByIndices&&(e.push(I),t=!0),f.get&&(e.push(A),t=!0),f.getByIndices&&(e.push(C),t=!0),!i&&t&&e.unshift(`const ${g} = ${p.indices}(${n.join(",")});`,`const ${_} = ${p.indices}(${mn.computeStrides(n).join(",")});`),e.join("\n")},type:p,offsetToIndices:t=>(f.offsetToIndices=!0,s<2?t:`o2i_${e}(${t})`),indicesToOffset:t=>(f.indicesToOffset=!0,s<2?t:`i2o_${e}(${t})`),broadcastedIndicesToOffset:(t,n)=>{f.broadcastedIndicesToOffset=!0;let r=`${n.name}broadcastedIndicesTo${e}Offset`;if(r in k)return`${r}(${t})`;let a=[];for(let e=s-1;e>=0;e--){let t=n.indicesGet("outputIndices",e+n.rank-s);a.push(`${x(_,e)} * (${t} % ${x(g,e)})`)}return k[r]=`fn ${r}(outputIndices: ${n.type.indices}) -> u32 {\n             return ${a.length>0?a.join("+"):"0u"};\n           }`,`${r}(${t})`},indices:$,indicesGet:x,indicesSet:(e,t,n)=>s<2?`${e}=${n};`:`${In(e,t,s)}=${n};`,set:(...t)=>{if(t.length!==s+1)throw new Error(`indices length must be ${s}`);let n=t[s];if("string"!=typeof n)throw new Error("value must be string");let r=t.slice(0,s).map(h).join(",");return 0===s?S("0u",n):1===s?S(r[0],n):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${r}, ${n})`)},setByOffset:S,setByIndices:(t,n)=>s<2?S(t,n):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${t}, ${n});`),get:(...t)=>{if(t.length!==s)throw new Error(`indices length must be ${s}`);let n=t.map(h).join(",");return 0===s?E("0u"):1===s?E(n[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${n})`)},getByOffset:E,getByIndices:t=>s<2?E(t):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${t})`),usage:r,name:e,strides:_,shape:g,rank:s}},zn=(e,t,n,r=1)=>Tn(e,t,n,"input",r),On=(e,t,n,r=1)=>Tn(e,t,n,"output",r),Mn=(e,t,n,r=1)=>Tn(e,t,n,"internal",r),Rn=class{constructor(e,t){this.normalizedDispatchGroup=e,this.limits=t,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${"number"==typeof e?`${e}u`:e}) { return; }`}mainStart(e=bn){let t="number"==typeof e?e:e[0],n="number"==typeof e?1:e[1],r="number"==typeof e?1:e[2];if(t>this.limits.maxComputeWorkgroupSizeX||n>this.limits.maxComputeWorkgroupSizeY||r>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(t*n*r>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${t}, ${n}, ${r}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let a=1===this.normalizedDispatchGroup[1]&&1===this.normalizedDispatchGroup[2];return`@compute @workgroup_size(${t}, ${n}, ${r})\n  fn main(${a?"@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>":"@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>"}) {\n    ${a?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*n*r}u + local_idx;`}\n  `}appendVariableUniforms(e){0!==e.rank&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,t){if("internal"===e.usage)throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let n="input"===e.usage?"read":"read_write",r=e.type.storage;return`@group(0) @binding(${t}) var<storage, ${n}> ${e.name}: array<${r}>;`}declareVariables(...e){return e.map((e=>this.declareVariable(e,this.variableIndex++))).join("\n")}registerInternalVariable(e){if("internal"!==e.usage)throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach((e=>this.registerInternalVariable(e))),this}registerUniform(e,t,n=1){return this.uniforms.push({name:e,type:t,length:n}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(0===this.uniforms.length)return"";let e=[];for(let{name:t,type:n,length:r}of this.uniforms)if(r&&r>4)"f16"===n?e.push(`@align(16) ${t}:array<mat2x4<${n}>, ${Math.ceil(r/8)}>`):e.push(`${t}:array<vec4<${n}>, ${Math.ceil(r/4)}>`);else{let a=null==r||1===r?n:`vec${r}<${n}>`;e.push(`${t}:${a}`)}return`\n      struct Uniforms { ${e.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map((e=>e.impl())).join("\n")+this.internalVariables.map((e=>e.impl())).join("\n")}get variablesInfo(){if(0===this.uniforms.length)return;let e=e=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(e)];return this.uniforms.map((t=>[e(t.type),t.length??1]))}},Pn=(e,t)=>new Rn(e,t),Bn=(e,t)=>{let n=e.length,r=[];for(let a=0;a<n;a++){let i=n-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&r.unshift(i)}return r}})),eu=Re((()=>{Hl(),Jl(),Ql(),Zl(),Dn=e=>{if(!e||1!==e.length)throw new Error("Transpose requires 1 input.")},Nn=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Un=(e,t)=>mn.sortBasedOnPerm(e,Nn(e.length,t)),Wn=(e,t,n,r)=>{let a=[];a.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)a.push(n.indicesSet("a",e[r],`i[${r}]`));return a.push("return a;}"),a.join("\n")},Fn=(e,t)=>{let n=e.dataType,r=e.dims.length,a=Nn(r,t),i=Un(e.dims,a),s=On("output",n,i.length),o=zn("a",n,r);return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:e=>{let t=mn.size(i);return{outputs:[{dims:i,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(t/64)},programUniforms:[{type:12,data:t},...kn(e[0].dims,i)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(o,s)}\n\n  ${Wn(a,r,o,s)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${s.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${s.setByOffset("global_idx",o.getByIndices("aIndices"))}\n  }`}},Ln=(e,t)=>{Dn(e.inputs),e.compute(Fn(e.inputs[0],t.perm))},Vn=e=>pn({perm:e.perm})})),tu=Re((()=>{Hl(),Jl(),Zl(),nu(),eu(),Gn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},Hn={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},qn={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},jn={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Kn=(e,t)=>{let n=[];for(let r=t-e;r<t;++r)n.push(r);return n},Yn=(e,t)=>{let n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]},Xn=(e,t)=>{let n=e.length+t.length,r=[],a=0;for(let i=0;i<n;i++)-1===t.indexOf(i)?r.push(e[a++]):r.push(1);return r},Qn=(e,t)=>{for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0},Jn=(e,t)=>{let n=[];if(!Qn(e,t)){for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);e.forEach((e=>n.push(e)))}return n},Zn=(e,t,n,r,a,i,s)=>{let o=n[0].dims,l=mn.size(i),u=mn.size(s),d=zn("_A",n[0].dataType,o),c=On("output",a,i);return{name:e,shaderCache:t,getShaderSource:e=>`\n        ${e.registerUniform("reduceSize","u32").declareVariables(d,c)}\n        \n          var<workgroup> aBestValues : array<f32, 32>;\n       \n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${e.mainStart(32)}\n\n          let outputIndex = global_idx / 32;\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${qn[r]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + 32) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Gn[r]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, 32u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${Hn[r]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${c.setByOffset("outputIndex","mean"===r?`${c.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${c.type.storage}(${jn[r]})`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:i,dataType:a}],dispatchGroup:{x:l},programUniforms:[{type:12,data:u}]})}},er=(e,t,n,r)=>{let a=1===e.inputs.length?n:fr(e.inputs,n),i=a.axes;0===i.length&&!a.noopWithEmptyAxes&&(i=e.inputs[0].dims.map(((e,t)=>t)));let s=mn.normalizeAxes(i,e.inputs[0].dims.length),o=s,l=e.inputs[0],u=Jn(o,e.inputs[0].dims.length);u.length>0&&(l=e.compute(Fn(e.inputs[0],u),{inputs:[0],outputs:[-1]})[0],o=Kn(o.length,l.dims.length));let[d,c]=Yn(l.dims,o),p=d;a.keepDims&&(p=Xn(d,s)),e.compute(Zn(t,{hint:a.cacheKey,inputDependencies:["type"]},[l],r,e.inputs[0].dataType,p,c),{inputs:[l]})},tr=(e,t)=>{er(e,"ReduceMeanShared",t,"mean")},nr=(e,t)=>{er(e,"ReduceL1Shared",t,"l1")},rr=(e,t)=>{er(e,"ReduceL2Shared",t,"l2")},ar=(e,t)=>{er(e,"ReduceLogSumExpShared",t,"logSumExp")},ir=(e,t)=>{er(e,"ReduceMaxShared",t,"max")},sr=(e,t)=>{er(e,"ReduceMinShared",t,"min")},or=(e,t)=>{er(e,"ReduceProdShared",t,"prod")},lr=(e,t)=>{er(e,"ReduceSumShared",t,"sum")},ur=(e,t)=>{er(e,"ReduceSumSquareShared",t,"sumSquare")},dr=(e,t)=>{er(e,"ReduceLogSumShared",t,"logSum")}})),nu=Re((()=>{Hl(),Jl(),Ql(),Zl(),tu(),cr=e=>{if(!e||0===e.length||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(2===e.length&&1!==e[1].dims.length)throw new Error("Invalid axes input dims.")},pr=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],hr=(e,t,n,r,a,i,s=!1,o=!1)=>{let l=[],u=n[0].dims,d=u.length,c=mn.normalizeAxes(a,d),p=!o&&0===c.length;u.forEach(((e,t)=>{p||c.indexOf(t)>=0?s&&l.push(1):l.push(e)}));let h=l.length,f=mn.size(l);return{name:e,shaderCache:t,getShaderSource:e=>{let t=[],a=zn("_A",n[0].dataType,d),o=On("output",i,h),l=r(a,o,c),f=l[2];for(let e=0,n=0;e<d;e++)p||c.indexOf(e)>=0?(s&&n++,f=`for(var j${e}: u32 = 0; j${e} < ${u[e]}; j${e}++) {\n                  ${l[2].includes("last_index")?`let last_index = j${e};`:""}\n                  ${a.indicesSet("input_indices",e,`j${e}`)}\n                  ${f}\n                }`):(t.push(`${a.indicesSet("input_indices",e,o.indicesGet("output_indices",n))};`),n++);return`\n\n        ${e.registerUniform("output_size","u32").declareVariables(a,o)}\n\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${a.type.indices};\n          let output_indices = ${o.offsetToIndices("global_idx")};\n\n          ${t.join("\n")}\n          ${l[0]}       // init ops for reduce max/min\n          ${l[1]}\n          ${f}\n          ${l[3]}\n          ${4===l.length?o.setByOffset("global_idx","value"):l.slice(4).join("\n")}\n        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...kn(u,l)]})}},fr=(e,t)=>{let n=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),pn({axes:n,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},mr=(e,t,n,r)=>{let a=e.inputs,i=1===a.length?n:fr(a,n);e.compute(hr(t,{hint:i.cacheKey,inputDependencies:["rank"]},[a[0]],i.noopWithEmptyAxes&&0===i.axes.length?pr:r,i.axes,a[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},gr=(e,t)=>{cr(e.inputs),mr(e,"ReduceLogSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,"value = log(value);"]))},_r=(e,t)=>{cr(e.inputs),mr(e,"ReduceL1",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += abs(${e.getByIndices("input_indices")});`,""]))},yr=(e,t)=>{cr(e.inputs),mr(e,"ReduceL2",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"]))},wr=(e,t)=>{cr(e.inputs),mr(e,"ReduceLogSumExp",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += exp(${e.getByIndices("input_indices")});`,"value = log(value);"]))},br=(e,t)=>{cr(e.inputs),mr(e,"ReduceMax",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(e.indicesSet("input_indices",t,0));return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = max(value, ${e.getByIndices("input_indices")});`,""]}))},vr=(e,t)=>{cr(e.inputs),mr(e,"ReduceMean",t,((t,n,r)=>{let a=1;for(let n=0;n<t.rank;n++)(r.indexOf(n)>=0||0===r.length)&&(a*=e.inputs[0].dims[n]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${n.type.value}(sum / ${a});`]}))},$r=(e,t)=>{cr(e.inputs),mr(e,"ReduceMin",t,((e,t,n)=>{let r=[];for(let t=0;t<e.rank;t++)(n.indexOf(t)>=0||0===n.length)&&r.push(`input_indices[${t}] = 0;`);return[`${r.join("\n")}`,`var value = ${e.getByIndices("input_indices")};`,`value = min(value, ${e.getByIndices("input_indices")});`,""]}))},xr=(e,t)=>{cr(e.inputs),mr(e,"ReduceProd",t,((e,t)=>[`var value = ${t.type.storage}(1);`,"",`value *= ${e.getByIndices("input_indices")};`,""]))},kr=(e,t)=>{cr(e.inputs),mr(e,"ReduceSum",t,((e,t)=>[`var value = ${t.type.storage}(0);`,"",`value += ${e.getByIndices("input_indices")};`,""]))},Sr=(e,t)=>{cr(e.inputs),mr(e,"ReduceSumSquare",t,((e,t)=>[`var t = ${t.type.value}(0); var value = ${t.type.value}(0);`,"",`t = ${e.getByIndices("input_indices")}; value += t * t;`,""]))},Er=(e,t,n)=>{if(0===t.length)return n;let r=1,a=1;for(let n=0;n<t.length;n++)-1===t.indexOf(n)?r*=e[n]:a*=e[n];return a<32&&r>1024},Cr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vr(e,t):tr(e,t)},Ar=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_r(e,t):nr(e,t)},Ir=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yr(e,t):rr(e,t)},Tr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wr(e,t):ar(e,t)},zr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?br(e,t):ir(e,t)},Or=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$r(e,t):sr(e,t)},Mr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xr(e,t):or(e,t)},Rr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kr(e,t):lr(e,t)},Pr=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sr(e,t):ur(e,t)},Br=(e,t)=>{Er(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gr(e,t):dr(e,t)}})),ru=Re((()=>{Hl(),Ql(),nu(),Dr=e=>{if(!e||0===e.length||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(1!==e[0].dataType)throw new Error("Invalid input type.")},Nr=(e,t)=>{Dr(e.inputs),e.compute(hr("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let a=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`input_indices[${t}] = 0;`);return[`${a.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Ur=(e,t)=>{Dr(e.inputs),e.compute(hr("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],((e,n,r)=>{let a=[];for(let t=0;t<e.rank;t++)(r.indexOf(t)>=0||0===r.length)&&a.push(`input_indices[${t}] = 0;`);return[`${a.join("\n")}`,`var value = ${e.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${e.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${e.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",n.setByOffset("global_idx","best_index")]}),[t.axis],7,t.keepDims),{inputs:[0]})},Wr=e=>pn(e)})),au=Re((()=>{Hl(),Jl(),Ql(),Zl(),Fr=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let n=e[0],r=n.dataType,a=n.dims.length;e.forEach(((e,i)=>{if(0!==i){if(e.dataType!==r)throw new Error("input tensors should be one type");if(e.dims.length!==a)throw new Error("input tensors should have the same shape");e.dims.forEach(((e,r)=>{if(r!==t&&e!==n.dims[r])throw new Error("non concat dimensions must match")}))}}))},Lr=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Vr=(e,t)=>{let n=e.length,r=[];for(let a=0;a<n;++a){let i=t.setByOffset("global_idx",e[a].getByIndices("indices"));1===n?r.push(i):0===a?r.push(`if (inputIndex == ${a}u) { ${i} }`):a===n-1?r.push(`else { ${i} }`):r.push(`else if (inputIndex == ${a}) { ${i} }`)}return r.join("\n")},Gr=(e,t,n,r)=>{let a=mn.size(n),i=new Array(e.length),s=new Array(e.length),o=0,l=[],u=[],d=[{type:12,data:a}];for(let n=0;n<e.length;++n)o+=e[n].dims[t],i[n]=o,u.push(e[n].dims.length),s[n]=zn(`input${n}`,r,u[n]),l.push("rank"),d.push({type:12,data:i[n]});for(let t=0;t<e.length;++t)d.push(...kn(e[t].dims));d.push(...kn(n));let c=On("output",r,n.length),p=c.indicesGet("indices",t),h=Array.from(Array(i.length).keys()).map((e=>`uniforms.sizeInConcatAxis${e}`)).join(",");return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:n,dataType:r}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:t=>`\n\n  ${(()=>{t.registerUniform("outputSize","u32");for(let n=0;n<e.length;n++)t.registerUniform(`sizeInConcatAxis${n}`,"u32");return t.declareVariables(...s,c)})()}\n\n  ${Lr(i.length,h)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${p});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${i.length}u>(${h});\n      ${p} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Vr(s,c)}\n  }`}},Hr=(e,t)=>{let n=e.inputs,r=n[0].dims,a=mn.normalizeAxis(t.axis,r.length);Fr(n,a);let i=r.slice();i[a]=n.reduce(((e,t)=>e+(t.dims.length>a?t.dims[a]:0)),0);let s=n.filter((e=>mn.size(e.dims)>0));e.compute(Gr(s,a,i,n[0].dataType),{inputs:s})},qr=e=>pn({axis:e.axis})})),iu=Re((()=>{Hl(),Yl(),Zl(),au(),jr=(e,t)=>{let n=e[0],r=e[1],a=e[2],i=e[3],s=e[4],o=e[5];if(s&&o)throw new Error("Attention cannot have both past and relative_position_bias");if(3!==n.dims.length)throw new Error('Input "input" must have 3 dimensions');let l=n.dims[0],u=n.dims[1],d=n.dims[2];if(1!==a.dims.length)throw new Error('Input "bias" is expected to have 1 dimensions');if(2!==r.dims.length)throw new Error('Input "weights" is expected to have 2 dimensions');if(r.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(a.dims[0]!==r.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let c=a.dims[0]/3,p=c,h=p;if(t.qkvHiddenSizes.length>0){if(3!==t.qkvHiddenSizes.length)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let e of t.qkvHiddenSizes)if(e%t.numHeads!=0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");c=t.qkvHiddenSizes[0],p=t.qkvHiddenSizes[1],h=t.qkvHiddenSizes[2]}let f=u;if(c!==p)throw new Error("qkv_hidden_sizes first element should be same as the second");if(a.dims[0]!==c+p+h)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let m=0;if(s){if(p!==h)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(5!==s.dims.length)throw new Error('Input "past" must have 5 dimensions');if(2!==s.dims[0])throw new Error('Input "past" first dimension must be 2');if(s.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(s.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(s.dims[4]!==p/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(m=s.dims[3])}let g=f+m;if(i)throw new Error("Mask not supported");if(s)throw new Error("past is not supported");return{batchSize:l,sequenceLength:u,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:g,maxSequenceLength:-1,inputHiddenSize:d,hiddenSize:c,vHiddenSize:h,headSize:Math.floor(c/t.numHeads),vHeadSize:Math.floor(h/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:0,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Kr=(e,t,n,r)=>{let a=Sn(r),i=64,s=r/a;s<i?i=1:s/8<64&&(i=Math.ceil(s/8));let o=Math.ceil(r/a/i),l=[{type:t.dataType,data:1/r},{type:12,data:s},{type:12,data:o}],u=$n(t.dataType,a),d=xn(1,a);return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${i};${u};${a}`},getShaderSource:e=>{let n=On("x",t.dataType,t.dims,a),r=[{name:"d_inv",type:xn(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${i}>;\n  var<workgroup> thread_sum: array<f32, ${i}>;\n  ${e.registerUniforms(r).declareVariables(n)}\n  ${e.mainStart([i,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(a){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${a}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${i}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(a){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${a}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${i}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${n.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${n.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`},getRunData:()=>({outputs:[],dispatchGroup:{x:n},programUniforms:l})}},Yr=(e,t,n,r,a,i,s)=>{let o=s+a.kvSequenceLength,l=[a.batchSize,a.numHeads,a.sequenceLength,o],u=0===i.scale?1/Math.sqrt(a.headSize):i.scale,d=Sn(a.headSize),c=a.headSize/d,p={x:Math.ceil(o/12),y:Math.ceil(a.sequenceLength/12),z:a.batchSize*a.numHeads},h=[{type:12,data:a.sequenceLength},{type:12,data:c},{type:12,data:o},{type:12,data:a.numHeads},{type:1,data:u}];return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:r?["type","type","type"]:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:e=>{let a=zn("q",t.dataType,t.dims,d),i=[a,zn("key",n.dataType,n.dims,d)];r&&i.push(zn("relative_position_bias",r.dataType,r.dims));let s=On("output",t.dataType,l),o=xn(1,d);return`\n  const TILE_SIZE = 12u;\n\n  var<workgroup> tileQ: array<${a.type.storage}, 144>;\n  var<workgroup> tileK: array<${a.type.storage}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}]).declareVariables(...i,s)}\n  ${e.mainStart([12,12,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${o}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${o}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${s.type.value} (sum * uniforms.alpha) + ${r?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`}}},Xr=(e,t,n,r,a)=>{let i=a+r.kvSequenceLength,s=[r.batchSize,r.sequenceLength,r.vHiddenSize],o={x:Math.ceil(r.vHeadSize/12),y:Math.ceil(r.sequenceLength/12),z:r.batchSize*r.numHeads},l=[{type:12,data:r.sequenceLength},{type:12,data:i},{type:12,data:r.vHeadSize},{type:12,data:r.numHeads},{type:12,data:r.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:o,programUniforms:l}),getShaderSource:e=>{let r=zn("probs",t.dataType,t.dims),a=zn("v",n.dataType,n.dims),i=On("output",t.dataType,s);return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileQ: array<${r.type.value}, 144>;\n  var<workgroup> tileK: array<${r.type.value}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}]).declareVariables(r,a,i)}\n  ${e.mainStart([12,12,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${r.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Qr=(e,t,n,r,a,i,s,o,l,u,d)=>{let c=e.outputCount>1,p=e.outputCount>2,h=c&&p?u.pastSequenceLength:0,f=h+u.kvSequenceLength,m=[u.batchSize,u.numHeads,f,u.headSize],g=s?[s,n]:[n],_=c?e.compute(Gr(g,2,m,n.dataType),{inputs:g,outputs:[1]})[0]:n,y=[u.batchSize,u.numHeads,f,u.headSize],w=o?[o,r]:[r],b=p?e.compute(Gr(w,2,y,r.dataType),{inputs:w,outputs:[2]})[0]:r,v=[t,_];l&&v.push(l);let $=e.compute(Yr(0,t,_,l,u,d,h),{inputs:v,outputs:[-1]})[0];e.compute(Kr(0,$,u.batchSize*u.numHeads*u.sequenceLength,f),{inputs:[$],outputs:[]});let x=[$,b];e.compute(Xr(0,$,b,u,h),{inputs:x,outputs:[0]})},Jr=(e,t)=>{let n=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],r=t.sequenceLength,a=t.inputHiddenSize,i=t.headSize,s={x:Math.ceil(t.headSize/12),y:Math.ceil(t.sequenceLength/12),z:t.batchSize*t.numHeads},o=[e.inputs[0],e.inputs[1],e.inputs[2]],l=[{type:12,data:r},{type:12,data:a},{type:12,data:i},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}];return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:n,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:s,programUniforms:l}),getShaderSource:e=>{let t=On("output_q",o[0].dataType,n),r=On("output_k",o[0].dataType,n),a=On("output_v",o[0].dataType,n),i=zn("input",o[0].dataType,o[0].dims),s=zn("weight",o[1].dataType,o[1].dims),l=zn("bias",o[2].dataType,o[2].dims),u=i.type.storage;return`\n  const TILE_SIZE = 12u;\n  var<workgroup> tileInput: array<${u}, 144>;\n  var<workgroup> tileWeightQ: array<${u}, 144>;\n  var<workgroup> tileWeightK: array<${u}, 144>;\n  var<workgroup> tileWeightV: array<${u}, 144>;\n  ${e.registerUniforms([{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}]).declareVariables(i,s,l,t,r,a)}\n  ${e.mainStart([12,12,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${u}(0);\n    var valueK = ${u}(0);\n    var valueV = ${u}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`}},{inputs:o,outputs:[-1,-1,-1]})},Zr=(e,t)=>{let n=jr(e.inputs,t),[r,a,i]=Jr(e,n);return Qr(e,r,a,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],n,t)}})),su=Re((()=>{it(),Hl(),Jl(),Ql(),Zl(),ea=(e,t)=>{if(!e||5!==e.length)throw new Error("BatchNormalization requires 5 inputs");let n=(e,t,n)=>{let r=t.length;if(r!==e.length)throw new Error(`${n}: num dimensions != ${r}`);t.forEach(((t,r)=>{if(t!==e[r])throw new Error(`${n}: dim[${r}] do not match`)}))};if(e[0].dims.length>1){let r="NHWC"===t.format?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);n(e[1].dims,r,"Invalid input scale"),n(e[2].dims,r,"Invalid input B"),n(e[3].dims,r,"Invalid input mean"),n(e[4].dims,r,"Invalid input var")}else n(e[1].dims,[1],"Invalid input scale"),n(e[2].dims,[1],"Invalid input B"),n(e[3].dims,[1],"Invalid input mean"),n(e[4].dims,[1],"Invalid input var")},ta=(e,t)=>{let{epsilon:n,spatial:r,format:a}=t,i=e[0].dims,s=r?Sn(i[i.length-1]):1,o="NHWC"===a&&i.length>1?s:1,l=mn.size(i)/s,u=r,d=u?i.length:i,c=zn("x",e[0].dataType,e[0].dims,s),p=zn("scale",e[1].dataType,e[1].dims,o),h=zn("bias",e[2].dataType,e[2].dims,o),f=zn("inputMean",e[3].dataType,e[3].dims,o),m=zn("inputVar",e[4].dataType,e[4].dims,o),g=On("y",e[0].dataType,d,s);return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${r}_${s}`,inputDependencies:u?["rank","type","type","type","type"]:void 0},getShaderSource:e=>`\n  const epsilon = ${n};\n  ${e.registerUniform("outputSize","u32").declareVariables(c,p,h,f,m,g)}\n  ${e.mainStart()}\n  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${g.offsetToIndices(`global_idx * ${s}`)};\n    ${(()=>{let e="";if(r)e=`let cOffset = ${1===i.length?"0u":"NHWC"===a?`outputIndices[${i.length-1}] / ${s}`:"outputIndices[1]"};`;else if("NCHW"===a)e=`\n            ${g.indicesSet("outputIndices","0","0")}\n            let cOffset = ${g.indicesToOffset("outputIndices")};`;else{e=`var cIndices = ${p.type.indices}(0);\n                       cIndices[0] = outputIndices[${i.length-1}];`;for(let t=1;t<p.rank;t++)e+=`cIndices[${t}] = outputIndices[${t}];`;e+=`let cOffset = ${p.indicesToOffset("cIndices")};`}return e})()}\n    let scale = ${p.getByOffset("cOffset")};\n    let bias = ${h.getByOffset("cOffset")};\n    let inputMean = ${f.getByOffset("cOffset")};\n    let inputVar = ${m.getByOffset("cOffset")};\n    let x = ${c.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${g.setByOffset("global_idx","value")}\n  }`,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u?[{type:12,data:l},...kn(i)]:[{type:12,data:l}]})}},na=e=>pn(e),ra=(e,t)=>{let{inputs:n,outputCount:r}=e,a=na({...t,outputCount:r});if(ae.webgpu.validateInputContent&&ea(n,a),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ta(n,a))}})),ou=Re((()=>{Jl(),Zl(),aa=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},ia=e=>{let t=e[0].dims,n=e[0].dims[2],r=mn.size(t)/4,a=e[0].dataType,i=zn("input",a,t,4),s=zn("bias",a,[n],4),o=zn("residual",a,t,4),l=On("output",a,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(r/64)}}),getShaderSource:e=>`\n  const channels = ${n}u / 4;\n  ${e.declareVariables(i,s,o,l)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes(r)}\n    let value = ${i.getByOffset("global_idx")}\n      + ${s.getByOffset("global_idx % channels")} + ${o.getByOffset("global_idx")};\n    ${l.setByOffset("global_idx","value")}\n  }`}},sa=e=>{aa(e.inputs),e.compute(ia(e.inputs))}})),lu=Re((()=>{Hl(),Jl(),Ql(),Zl(),oa=(e,t,n,r,a,i)=>{let s=Math.ceil(t/4),o="";o="string"==typeof a?`${a}(a)`:a("a");let l=zn("inputData",n,[s],4),u=On("outputData",r,[s],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(l,u)}\n\n  ${i??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${l.getByOffset("global_idx")};\n    ${u.setByOffset("global_idx",o)}\n  }`},la=(e,t,n,r,a,i=e.dataType)=>({name:t,shaderCache:{hint:a,inputDependencies:["type"]},getShaderSource:t=>oa(t,mn.size(e.dims),e.dataType,i,n,r),getRunData:t=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(mn.size(t[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(mn.size(e.dims)/4)}]})}),ua=e=>{e.compute(la(e.inputs[0],"Abs","abs"))},da=e=>{e.compute(la(e.inputs[0],"Acos","acos"))},ca=e=>{e.compute(la(e.inputs[0],"Acosh","acosh"))},pa=e=>{e.compute(la(e.inputs[0],"Asin","asin"))},ha=e=>{e.compute(la(e.inputs[0],"Asinh","asinh"))},fa=e=>{e.compute(la(e.inputs[0],"Atan","atan"))},ma=e=>{e.compute(la(e.inputs[0],"Atanh","atanh"))},ga=e=>pn(e),_a=(e,t)=>{let n;switch(t.to){case 10:n="vec4<f16>";break;case 1:n="vec4<f32>";break;case 12:n="vec4<u32>";break;case 6:n="vec4<i32>";break;case 9:n="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(la(e.inputs[0],"Cast",n,void 0,t.cacheKey,t.to))},ya=e=>{let t=e.length>=2&&0!==e[1].data?e[1].getFloat32Array()[0]:yn,n=e.length>=3&&0!==e[2].data?e[2].getFloat32Array()[0]:wn;return pn({min:t,max:n})},wa=(e,t)=>{let n=1===e.inputs.length?t:ya(e.inputs),r=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"Clip",(e=>`clamp(${e}, clip_min_, clip_max_)`),`\n    const clip_min_: vec4<${r}> = vec4(${r}(${n.min}));\n    const clip_max_: vec4<${r}> = vec4(${r}(${n.max}));\n`,n.cacheKey),{inputs:[0]})},ba=e=>{e.compute(la(e.inputs[0],"Ceil","ceil"))},va=e=>{e.compute(la(e.inputs[0],"Cos","cos"))},$a=e=>{e.compute(la(e.inputs[0],"Cosh","cosh"))},xa=e=>pn(e),ka=(e,t)=>{let n=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"Elu",(e=>`elu_vf32(${e})`),`\n  const elu_alpha_ = ${n}(${t.alpha});\n\n  fn elu_f32(a: ${n}) -> ${n} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${n}>) -> vec4<${n}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},Sa=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Ea=e=>{let t=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"Erf",(e=>`erf_vf32(${e})`),Sa(t)))},Ca=e=>{e.compute(la(e.inputs[0],"Exp","exp"))},Aa=e=>{e.compute(la(e.inputs[0],"Floor","floor"))},Ia=e=>{let t=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"Gelu",(e=>`0.5 * ${e} * (1.0 + erf_vf32(${e} * 0.7071067811865475))`),Sa(t)))},Ta=(e,t)=>{let n=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"LeakyRelu",(e=>`select(leaky_relu_alpha_ * ${e}, ${e}, ${e} >= vec4<${n}>(0.0))`),`const leaky_relu_alpha_ = ${n}(${t.alpha});`,t.cacheKey))},za=e=>{e.compute(la(e.inputs[0],"Not",(e=>`!${e}`)))},Oa=e=>{e.compute(la(e.inputs[0],"Neg",(e=>`-${e}`)))},Ma=e=>{e.compute(la(e.inputs[0],"Reciprocal",(e=>`1.0/${e}`)))},Ra=e=>{let t=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"Relu",(e=>`select(vec4<${t}>(0.0), ${e}, ${e} > vec4<${t}>(0.0))`)))},Pa=e=>{e.compute(la(e.inputs[0],"Sigmoid",(e=>`(1.0 / (1.0 + exp(-${e})))`)))},Ba=e=>pn(e),Da=(e,t)=>{let n=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"HardSigmoid",(e=>`max(vec4<${n}>(0.0), min(vec4<${n}>(1.0), ${t.alpha} * ${e} + vec4<${n}>(${t.beta})))`),void 0,t.cacheKey))},Na=e=>{e.compute(la(e.inputs[0],"Sin","sin"))},Ua=e=>{e.compute(la(e.inputs[0],"Sinh","sinh"))},Wa=e=>{e.compute(la(e.inputs[0],"Sqrt","sqrt"))},Fa=e=>{e.compute(la(e.inputs[0],"Tan","tan"))},La=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Va=e=>{e.compute(la(e.inputs[0],"Tanh",La))},Ga=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${La("v")};\n}\n`,Ha=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,qa=e=>{let t=xn(e.inputs[0].dataType);e.compute(la(e.inputs[0],"FastGelu",Ha,Ga(t),void 0,e.inputs[0].dataType))},ja=(e,t)=>{let n=xn(e.inputs[0].dataType);return e.compute(la(e.inputs[0],"ThresholdedRelu",(e=>`select(vec4<${n}>(0.0), ${e}, ${e} > thresholded_relu_alpha_)`),`const thresholded_relu_alpha_ = vec4<${n}>(${t.alpha});`,t.cacheKey)),0},Ka=e=>{e.compute(la(e.inputs[0],"Log","log"))}})),uu=Re((()=>{Jl(),Zl(),lu(),Ya=e=>{if(3!==e[0].dims.length)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(1!==e[1].dims.length)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Xa=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let n=zn("input",e[0].dataType,e[0].dims,4),r=zn("bias",e[0].dataType,[e[0].dims[2]],4),a=On("output",e[0].dataType,t,4),i=mn.size(t)/4,s=$n(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:t=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${t.declareVariables(n,r,a)}\n\n  ${Sa(s)}\n\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes(i)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${a.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Qa=e=>{Ya(e.inputs),e.compute(Xa(e.inputs))}})),du=Re((()=>{Hl(),Jl(),Zl(),Ja=(e,t,n,r,a,i,s,o,l,u,d,c)=>{let p,h;"string"==typeof o?p=h=(e,t)=>`${o}((${e}),(${t}))`:"function"==typeof o?p=h=o:(p=o.scalar,h=o.vector);let f,m=On("outputData",d,r.length,4),g=zn("aData",l,t.length,4),_=zn("bData",u,n.length,4);if(a)if(i){let e=1===mn.size(t),r=1===mn.size(n),a=t.length>0&&t[t.length-1]%4==0,i=n.length>0&&n[n.length-1]%4==0;f=e||r?m.setByOffset("global_idx",h(e?`${g.type.value}(${g.getByOffset("0")}.x)`:g.getByOffset("global_idx"),r?`${_.type.value}(${_.getByOffset("0")}.x)`:_.getByOffset("global_idx"))):`\n            let outputIndices = ${m.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${g.broadcastedIndicesToOffset("outputIndices",m)};\n            let offsetB = ${_.broadcastedIndicesToOffset("outputIndices",m)};\n            ${m.setByOffset("global_idx",h(s||a?g.getByOffset("offsetA / 4u"):`${g.type.value}(${g.getByOffset("offsetA / 4u")}[offsetA % 4u])`,s||i?_.getByOffset("offsetB / 4u"):`${_.type.value}(${_.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else f=m.setByOffset("global_idx",h(g.getByOffset("global_idx"),_.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let e=(e,t,n="")=>{let r=`aData[indexA${t}][componentA${t}]`,a=`bData[indexB${t}][componentB${t}]`;return`\n            let outputIndices${t} = ${m.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offsetA${t} = ${g.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let offsetB${t} = ${_.broadcastedIndicesToOffset(`outputIndices${t}`,m)};\n            let indexA${t} = offsetA${t} / 4u;\n            let indexB${t} = offsetB${t} / 4u;\n            let componentA${t} = offsetA${t} % 4u;\n            let componentB${t} = offsetB${t} % 4u;\n            ${e}[${t}] = ${n}(${p(r,a)});\n          `};f=9===d?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("outputData[global_idx]",0)}\n            ${e("outputData[global_idx]",1)}\n            ${e("outputData[global_idx]",2)}\n            ${e("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(g,_,m)}\n\n        ${c??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${f}\n      }`},Za=(e,t,n,r,a,i,s=n.dataType)=>{let o=!mn.areEqual(n.dims,r.dims),l=n.dims,u=mn.size(n.dims),d=!1,c=!1,p=[o];if(o){let e=fn.calcShape(n.dims,r.dims,!1);if(!e)throw new Error("Can't perform binary op on the given tensors");l=e,u=mn.size(l);let t=1===mn.size(n.dims),a=1===mn.size(r.dims),i=n.dims.length>0&&n.dims[n.dims.length-1]%4==0,s=r.dims.length>0&&r.dims[r.dims.length-1]%4==0;p.push(t),p.push(a),p.push(i),p.push(s);let o=1;for(let e=1;e<l.length;e++){let t=n.dims[n.dims.length-e]??1;if(t!==(r.dims[r.dims.length-e]??1))break;o*=t}o%4==0?(c=!0,d=!0):(t||a||i||s)&&(d=!0)}else d=!0;return p.push(d),{name:e,shaderCache:{hint:t+p.map((e=>e.toString())).join("_"),inputDependencies:["rank","rank"]},getShaderSource:e=>Ja(e,n.dims,r.dims,l,d,o,c,a,n.dataType,r.dataType,s,i),getRunData:()=>({outputs:[{dims:l,dataType:s}],dispatchGroup:{x:Math.ceil(u/64/4)},programUniforms:[{type:12,data:Math.ceil(mn.size(l)/4)},...kn(n.dims,r.dims,l)]})}},ei=(e,t,n,r,a,i)=>{e.compute(Za(t,a??"",e.inputs[0],e.inputs[1],n,r,i))},ti=e=>{ei(e,"Add",((e,t)=>`${e}+${t}`))},ni=e=>{ei(e,"Div",((e,t)=>`${e}/${t}`))},ri=e=>{ei(e,"Equal",{scalar:(e,t)=>`u32(${e}==${t})`,vector:(e,t)=>`vec4<u32>(${e}==${t})`},void 0,void 0,9)},ai=e=>{ei(e,"Mul",((e,t)=>`${e}*${t}`))},ii=e=>{let t=zn("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;ei(e,"Pow",{scalar:(e,t)=>`pow_custom(${e},${t})`,vector:(e,t)=>`pow_vector_custom(${e},${t})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${"i32"===t?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},si=e=>{ei(e,"Sub",((e,t)=>`${e}-${t}`))},oi=e=>{ei(e,"Greater",{scalar:(e,t)=>`u32(${e}>${t})`,vector:(e,t)=>`vec4<u32>(${e}>${t})`},void 0,void 0,9)},li=e=>{ei(e,"Less",{scalar:(e,t)=>`u32(${e}<${t})`,vector:(e,t)=>`vec4<u32>(${e}<${t})`},void 0,void 0,9)},ui=e=>{ei(e,"GreaterOrEqual",{scalar:(e,t)=>`u32(${e}>=${t})`,vector:(e,t)=>`vec4<u32>(${e}>=${t})`},void 0,void 0,9)},di=e=>{ei(e,"LessOrEqual",{scalar:(e,t)=>`u32(${e}<=${t})`,vector:(e,t)=>`vec4<u32>(${e}<=${t})`},void 0,void 0,9)}})),cu=Re((()=>{Hl(),Jl(),ci=(e,t,n="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${n}(uniforms.clip_min)), ${t}(${n}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${n}(uniforms.alpha) * value + ${n}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${n}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},pi=(e,t)=>{"Clip"===e.activation?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):"HardSigmoid"===e.activation?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):"LeakyRelu"===e.activation&&t.push({type:1,data:e.alpha})},hi=(e,t)=>{"Clip"===e.activation?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):"HardSigmoid"===e.activation?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):"LeakyRelu"===e.activation&&t.push({name:"alpha",type:"f32"})},fi=e=>{let t=e?.activation||"";if("HardSigmoid"===t){let[n,r]=e?.activation_params||[.2,.5];return{activation:t,alpha:n,beta:r}}if("Clip"===t){let[n,r]=e?.activation_params||[yn,wn];return{activation:t,clipMax:r,clipMin:n}}if("LeakyRelu"===t){let[n]=e?.activation_params||[.01];return{activation:t,alpha:n}}return{activation:t}}})),pu=Re((()=>{mi=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},gi=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `})),hu=Re((()=>{_i=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`})),fu=Re((()=>{Hl(),Jl(),Zl(),cu(),pu(),yi=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,wi=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${3===t?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${3===t?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,bi=(e,t,n="f32",r,a=!1,i=32,s=!1,o=32)=>{let l=t[1]*e[1],u=t[0]*e[0],d=a?l:i,c=a?i:l,p=d/t[0],h=i/t[1];if((!a||4!==p||4!==e[1])&&(a||3!==p&&4!==p)||d%t[0]!=0||i%t[1]!=0||4!==e[0])throw new Error(`If transposeA ${a} is true, innerElementSize ${p} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${p} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${p}<${n}>, ${d/p}>, ${c}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${n}>, ${u/e[0]}>, ${i}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${p};\nconst tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${s?"0":"i32(globalId.z)"};\n  ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${l};\n\n  let num_tiles = ${s?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};\n\n  var acc: array<vec4<${n}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${h};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yi(a,r)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${r?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${3===p?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${wi(a,p)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},vi=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,$i=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",xi=(e,t,n="f32",r,a=!1,i=32,s=!1,o=32,l=!1)=>{let u=e[1]*t[1],d=e[0]*t[0],c=a?u:i,p=a?i:u;if(p%t[1]!=0||c%t[0]!=0||i%t[1]!=0)throw new Error(`tileAHight ${p} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${t[0]}, tileInner ${i} must be divisible by workgroupSize[1]${t[1]}`);let h=p/t[1],f=c/t[0],m=i/t[1],g=l?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${u};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${t[0]}) {\n          ${vi(a,r)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${r?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${n}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${a?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${u};\n\nlet tileRowA = i32(localId.y) * ${h};\nlet tileColA = i32(localId.x) * ${f};\nlet tileRowB = i32(localId.y) * ${m};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${h}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${vi(a,r)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${m}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${r?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${n}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${$i(a)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${n}, ${c}>, ${p}>;\n  var<workgroup> mm_Bsub : array<array<${n}, ${d}>, ${i}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${i};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${s?"0":"i32(globalId.z)"};\n    ${r?`let batchIndices = ${r.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${s?`${Math.ceil(o/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};\n\n    var acc : array<array<${n}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${g}\n  }\n`},ki=(e,t,n,r,a,i=!1)=>{let[s,o,l]=a,[u,d,c,p]=r,h=Bn(s,l),f=Bn(o,l),m=$n(r[0].type.tensor);return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${mi(e,m)} {\n      var value = ${mi(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${(()=>{let e=d.rank,t=u.rank,n=`var aIndices: ${d.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\naIndices[${r}] = ${t>1?`batchIndices[${a}]`:"batchIndices"};`;return h.forEach((e=>{n+=`\naIndices[${e}] = 0;`})),n+=`\naIndices[${e-2}] = u32(row);\n                   aIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${u.type.indices}) -> ${mi(e,m)} {\n      var value = ${mi(e,m)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${(()=>{let e=c.rank,t=u.rank,n=`var bIndices: ${c.type.indices};`;for(let r=e-2-1,a=t-1;r>=0;r--,a--)n+=`\nbIndices[${r}] = ${t>1?`batchIndices[${a}]`:"batchIndices"};`;return f.forEach((e=>{n+=`\nbIndices[${e}] = 0;`})),n+=`\nbIndices[${e-2}] = u32(row);\n                   bIndices[${e-1}] = u32(colIn);`,n})()}\n        value = ${c.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mi(e,m)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${i?"bias[colIn]":`${mi(e,m)}(bias[row])`};`:""}\n        ${n}\n        ${p.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Si=(e,t,n,r,a=!1)=>{let i=e[0].dims,s=e[1].dims,o=i.slice(0,-2),l=s.slice(0,-2),u=r?r.slice(0,-2):n.slice(0,-2),d=mn.size(u),c=i[i.length-2],p=i[i.length-1],h=s[s.length-1],f=p%4==0&&h%4==0,m=c<=8?[4,1,1]:[4,4,1],g=[8,8,1],_=[Math.ceil(h/g[0]/m[0]),Math.ceil(c/g[1]/m[1]),Math.ceil(d/g[2]/m[2])],y=f?4:1,w=[...o,c,p/y],b=w.length,v=[...l,p,h/y],$=v.length,x=[d,c,h/y],k=[{type:6,data:c},{type:6,data:h},{type:6,data:p}];pi(t,k),k.push(...kn(u,w,v));let S=["rank","rank"],E=e.length>2;return E&&(k.push(...kn(e[2].dims)),S.push("rank")),k.push(...kn(x)),{name:"MatMul",shaderCache:{hint:`${m};${t.activation};${f};${a}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:_[0],y:_[1],z:_[2]},programUniforms:k}),getShaderSource:n=>{let r=u.length,i=Mn("batchDims",e[0].dataType,r,1),s=$n(e[0].dataType),d=zn("a",e[0].dataType,b,y),c=zn("b",e[1].dataType,$,y),p=On("result",e[0].dataType,x.length,y),h=[d,c];if(E){let t=a?y:1;h.push(zn("bias",e[2].dataType,e[2].dims.length,t))}let _=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];hi(t,_);let w=$n(p.type.tensor),v=ci(t,p.type.value,w),k=ki(y,E,v,[i,d,c,p],[o,l,u],a);return`\n  ${n.registerUniforms(_).registerInternalVariables(i).declareVariables(...h,p)}\n  ${k}\n  ${f?bi(m,g,s,i):xi(m,g,s,i)}\n                   `}}}})),mu=Re((()=>{Hl(),jl(),Zl(),cu(),pu(),hu(),fu(),Ei=(e,t,n,r,a=!1,i,s=4,o=4,l=4,u="f32")=>{let d=e?"\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    ":"\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    ",c=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",m=e?"col":"row",g=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${f} / outWidth;\n    let outCol = ${f} % outWidth;\n\n    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${m} % inChannels;\n    var resData = ${mi(s,u)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the 'same' padding type.\n    if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${h}) {\n      ${d}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${(e=>{switch(e){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${u}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(s)}\n    }\n    return resData;`,_=e?t&&r?`\n    let col = colIn * ${s};\n    ${g}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${g}\n    }\n    return ${mi(s,u)}(0.0);`:r&&n?`\n    let col = colIn * ${s};\n    ${g}`:`\n    let col = colIn * ${s};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${g}\n    }\n    return ${mi(s,u)}(0.0);`,y=`${(e=>{switch(e){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${e} is not supported.`)}})(o)}`,w=mi(l,u),b=mi(e?s:o,u),v=mi(e?o:s,u),$=ci(i,w,u);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${b} {\n      ${e?_:y}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${v} {\n      ${e?y:_}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${w}) {\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${gi(a)}\n      ${$}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ci=(e,t,n,r,a,i,s,o)=>{let l="NHWC"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],p=l?n[1]:n[2],h=l?n[3]:n[1],f=l&&(u%4==0||u%3==0)&&h%4==0,m=l?h:c*p,g=l?c*p:h,_=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/_[0]/y[0]),Math.ceil(g/_[1]/y[1]),Math.ceil(d/_[2]/y[2])];Zt("verbose",(()=>`[conv2d_mm_webgpu] dispatch = ${w}`));let b=f?l&&u%4!=0?3:4:1,v=_[1]*y[1],$=_[0]*y[0],x=Math.max(_[0]*b,_[1]),k=r%v==0,S=a%$==0,E=i%x==0,C=f?[b,4,4]:[1,1,1],A=[{type:6,data:r},{type:6,data:a},{type:6,data:i},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];pi(t,A),A.push(...kn(e[0].dims,e[1].dims));let I=["rank","rank"];return s&&(A.push(...kn(e[2].dims)),I.push("rank")),A.push(...kn(n)),{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${b};${f};${k};${S};${E};${v};${$};${x}`,inputDependencies:I},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:A}),getShaderSource:r=>{let a=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];hi(t,a);let i=f?4:1,u=$n(e[0].dataType),d=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${f?`vec4<${u}>`:u}) {\n        result[flatIndex] = ${f?`vec4<${u}>`:u}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${f?`vec4<${u}>`:u}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${f?"/ 4":""}, value);\n      }`,c=[zn("x",e[0].dataType,e[0].dims.length,3===b?1:b),zn("w",e[1].dataType,e[1].dims.length,i)],p=On("result",e[0].dataType,n.length,i);if(s){let t=zn("bias",e[2].dataType,e[2].dims.length,i);c.push(t),d+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${f?`vec4<${u}>`:u} {\n          return bias[coords.${l?"w":"y"}${f?"/ 4":""}];\n        }`}return`\n        ${_i("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${r.registerUniforms(a).declareVariables(...c,p)}\n        ${d}\n        ${Ei(l,k,S,E,s,t,C[0],C[1],C[2],u)}\n        ${f?bi(y,_,u,void 0,!l,x):xi(y,_,u,void 0,!l,x,!1,void 0,o)}`}}}})),gu=Re((()=>{Hl(),Jl(),Zl(),yu(),cu(),Ai=(e,t,n)=>{let r=e.length>2,a=r?"value += b[output_channel];":"",i=e[0].dims,s=e[1].dims,o=s[0]/t.group,l="NHWC"===t.format,u=Mi(i,s,t.dilations,t.pads,t.strides,l),d=mn.size(u),c=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:o}];pi(t,c),c.push(...kn(i,s));let p=["rank","rank"];return r&&(c.push(...kn(e[2].dims)),p.push("rank")),c.push(...kn(u)),{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:p},getRunData:()=>({outputs:[{dims:n?n(u):u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:c}),getShaderSource:n=>{let o=On("output",e[0].dataType,u.length),d=$n(o.type.tensor),c=ci(t,o.type.value,d),p=zn("x",e[0].dataType,i.length),h=zn("w",e[1].dataType,s.length),f=[p,h];r&&f.push(zn("b",e[2].dataType,e[2].dims.length));let m=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return hi(t,m),`\n  ${n.registerUniforms(m).declareVariables(...f,o)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${o.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${l?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${o.type.value} = ${o.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${l?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${l?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${l?p.get("batch","xHeight","xWidth","input_channel"):p.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${h.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${a}\n    ${c}\n    ${o.setByOffset("global_idx","value")}\n  }`}}},Ii=(e,t,n)=>{let r=e.length>2,a=Sn(n[3]),i=Sn(n[2]),s=mn.size(n)/a/i,o=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/a],l=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/a],u=[n[0],n[1],n[2],n[3]/a],d=[{type:12,data:s},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];pi(t,d),d.push(...kn(o,l,u));let c=(i-1)*t.strides[1]+l[1];return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${a};${i};${c};${l[0]};${l[1]}`,inputDependencies:r?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:d}),getShaderSource:n=>{let s=On("output",e[0].dataType,u.length,a),d=$n(s.type.tensor),p=ci(t,s.type.value,d),h=zn("x",e[0].dataType,o.length,a),f=zn("w",e[1].dataType,l.length,a),m=[h,f];r&&m.push(zn("b",e[2].dataType,e[2].dims,a));let g=r?"value += b[output_channel];":"",_=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return hi(t,_),`\n  ${n.registerUniforms(_).declareVariables(...m,s)}\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${i}u;\n    let col = (index1 % width1) * ${i}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${h.type.value}, ${c}>;\n    var values: array<${s.type.value}, ${i}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w's height/width.\n    for (var w_height: u32 = 0u; w_height < ${l[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${c}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${h.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${h.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${l[1]}; w_width++) {\n          let w_val = ${f.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${i}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${i}u; i++) {\n      var value = values[i];\n      ${g}\n      ${p}\n      ${s.set("batch","row","col + i","output_channel","value")};\n    }\n  }`}}}})),_u=Re((()=>{Hl(),Jl(),fu(),Zl(),cu(),Ti=(e,t,n,r,a=!1)=>{let i=e[0].dims,s=e[1].dims,o=i[i.length-2],l=s[s.length-1],u=i[i.length-1],d=Sn(l),c=Sn(u),p=Sn(o),h=mn.size(n)/d/p,f=e.length>2,m=r?r.slice(0,-2):n.slice(0,-2),g=[mn.size(m),o,l],_=[{type:12,data:h},{type:12,data:o},{type:12,data:l},{type:12,data:u}];return pi(t,_),_.push(...kn(m,i,s)),f&&_.push(...kn(e[2].dims)),_.push(...kn(g)),{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${c};${p};${a}`,inputDependencies:f?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:_}),getShaderSource:r=>{let o=Mn("batch_dims",e[0].dataType,m.length),l=zn("a",e[0].dataType,i.length,c),u=zn("b",e[1].dataType,s.length,d),h=On("output",e[0].dataType,g.length,d),_=$n(h.type.tensor),y=ci(t,h.type.value,_),w=[l,u],b="";if(f){let t=a?d:1;w.push(zn("bias",e[2].dataType,e[2].dims.length,t)),b=a?`value += bias[col / ${t}];`:`value += ${h.type.value}(bias[row + i]);`}let v=i.slice(0,-2),$=s.slice(0,-2),x=Bn(v,m),k=Bn($,m),S=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];hi(t,S);let E=(e,t)=>{let n=e.rank,r=e.name;if(2===n)return`var ${r}_indices = ${e.type.indices}(0u, 0u);`;let a=o.rank,i=`var ${r}_indices: ${e.type.indices};`;for(let e=n-2-1,t=a-1;e>=0;e--,t--)i+=`\n${r}_indices[${e}] = ${a>1?`batch_indices[${t}]`:"batch_indices"};`;return t.forEach((e=>{i+=`\n${r}_indices[${e}] = 0;`})),i+=`${r}_indices[${n-2}] = 0u;\n                     ${r}_indices[${n-1}] = 0u;`,i};return`\n  ${r.registerUniforms(S).registerInternalVariables(o).declareVariables(...w,h)}\n  ${r.mainStart()}\n    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${p};\n    let row = (index1 % stride1) * ${p};\n    let batch = index1 / stride1;\n\n    ${2===n.length?"":`let batch_indices = ${o.offsetToIndices("batch")};`}\n    ${E(l,x)}\n    let a_offset = ${l.indicesToOffset("a_indices")};\n    ${E(u,k)}\n    let b_offset = ${u.indicesToOffset("b_indices")};\n    var values: array<${h.type.value}, ${p}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${c}) {\n      ${(()=>{let e=`var a_data: ${l.type.value};`;for(let t=0;t<c;t++)e+=`\n              let b_data${t} = b[(b_offset + (k + ${t}) * uniforms.N + col) / ${d}];`;for(let t=0;t<p;t++){e+=`a_data = a[(a_offset + (row + ${t}) * uniforms.K + k) / ${c}];`;for(let n=0;n<c;n++)e+=`\n            values[${t}] = fma(${u.type.value}(a_data${1===c?"":`[${n}]`}), b_data${n}, values[${t}]);\n`}return e})()}\n    }\n    for (var i = 0u; i < ${p}u; i++) {\n      var value = values[i];\n      ${b}\n      ${y}\n      let cur_indices = ${h.type.indices}(batch, row + i, col);\n      let offset = ${h.indicesToOffset("cur_indices")};\n      ${h.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `}}},zi=e=>{if(!e||2!==e.length)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Oi=e=>{zi(e.inputs);let t=fn.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let n=t[t.length-1],r=e.inputs[0].dims[e.inputs[0].dims.length-1];n<8&&r<8?e.compute(Ti(e.inputs,{activation:""},t)):e.compute(Si(e.inputs,{activation:""},t))}})),yu=Re((()=>{Jl(),mu(),fu(),gu(),cu(),_u(),eu(),Mi=(e,t,n,r,a,i)=>{let s=e[0],o=e.slice(i?1:2,i?3:4),l=o.length,u=t[0],d=t.slice(2).map(((e,t)=>e+(e-1)*(n[t]-1))),c=o.map(((e,t)=>e+r[t]+r[t+l])).map(((e,t)=>Math.floor((e-d[t]+a[t])/a[t])));return c.splice(0,0,s),c.splice(i?3:1,0,u),c},Ri=[2,3,1,0],Pi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[1]*t.group)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(3===e.length&&(1!==e[2].dims.length||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(t.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(t.strides.length!==n)throw new Error(`strides should be ${n}D`);if(t.pads.length!==2*n)throw new Error(`pads should be ${2*n}D`);if(0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Bi=(e,t)=>{let n=e.kernelShape.slice();for(let e=2;e<t[1].dims.length;++e)0===n[e-2]&&(n[e-2]=t[1].dims[e]);let r=e.pads.slice();gn.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,n,r,"NHWC"===e.format,e.autoPad);let a=Object.assign({},e);return Object.assign(a,{kernelShape:n,pads:r}),a},Di=e=>{let t=fi(e),n=e.format;return{autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],format:n,dilations:e.dilations,group:e.group,kernelShape:e.kernel_shape,pads:e.pads,strides:e.strides,wIsConst:e.w_is_const(),...t,cacheKey:`${e.format};${t.activation};`}},Ni=(e,t,n)=>{let r=Bi(n,t),a="NHWC"===n.format;if(1!==n.group){if(!e.adapterInfo.isArchitecture("ampere")&&a&&t[1].dims[0]===n.group&&1===t[1].dims[1]&&1===n.dilations[0]&&1===n.dilations[1]){let i=Mi(t[0].dims,t[1].dims,n.dilations,r.pads,n.strides,a),s=e.kernelCustomData.wT??e.compute(Fn(t[1],Ri),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=s);let o=[t[0],s];3===t.length&&o.push(t[2]),e.compute(Ii(o,r,i),{inputs:o})}else e.compute(Ai(t,r));return}let i=3===t.length,s=t[0].dims[a?1:2],o=t[0].dims[a?2:3],l=t[0].dims[a?3:1],u=t[1].dims[2],d=t[1].dims[3],c=Mi(t[0].dims,t[1].dims,n.dilations,r.pads,n.strides,a),p=c[a?1:2],h=c[a?2:3],f=c[a?3:1],m=a&&u===s&&d===o&&0===n.pads[0]&&0===n.pads[1];if(m||1===u&&1===d&&1===n.dilations[0]&&1===n.dilations[1]&&1===n.strides[0]&&1===n.strides[1]&&0===n.pads[0]&&0===n.pads[1]){let u,d,g,_=c[0],y=[];if(a){let r=e.kernelCustomData.wT??e.compute(Fn(t[1],Ri),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];if(n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=r),m){let e=s*o*l;u=t[0].reshape([1,_,e]),d=r.reshape([1,e,f]),g=[1,_,f]}else u=t[0].reshape([_,s*o,l]),d=r.reshape([1,l,f]),g=[_,p*h,f];y.push(u),y.push(d)}else u=t[0].reshape([_,l,s*o]),d=t[1].reshape([1,f,l]),g=[_,f,p*h],y.push(d),y.push(u);i&&y.push(t[2]);let w=g[2],b=y[0].dims[y[0].dims.length-1];return void(w<8&&b<8?e.compute(Ti(y,r,c,g,a),{inputs:y}):e.compute(Si(y,r,c,g,a),{inputs:y}))}let g=e.kernelCustomData.wT??e.compute(Fn(t[1],Ri),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=g);let _=[t[0],g];i&&_.push(t[2]);let y=a?p*h:f,w=a?f:p*h,b=u*d*l;e.compute(Ci(_,r,c,y,w,b,i,!0),{inputs:_})},Ui=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let a=[0,t.pads[0],0,t.pads[1]],i=[1].concat(t.strides),s=[1].concat(t.dilations),o=[1].concat(t.kernelShape),l=Bi({...t,pads:a,strides:i,dilations:s,kernelShape:o},r);e.compute(Ai(r,l,(e=>n?[e[0],e[2],e[3]]:[])))},Wi=(e,t)=>{Pi(e.inputs,t),3===e.inputs[0].dims.length?Ui(e,t):Ni(e,e.inputs,t)}})),wu=Re((()=>{Hl(),jl(),Zl(),cu(),pu(),hu(),fu(),Fi=(e,t=!1,n,r,a=4)=>{let i=e?"\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    ":"\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    ",s=e?"row":"col",o=e?"col":"row",l=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${s} / outWidth;\n      let outCol = ${s} % outWidth;\n\n      let WRow = ${o} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${o} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])"}) || fract(xR) > 0.0) {\n        return ${r}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])"}) || fract(xC) > 0.0) {\n        return ${r}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${o} % inChannels;\n      ${e?"\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      ":"\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      "}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${a}];`,u=e?`\n      let col = colIn * ${a};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${l}\n      }\n      return ${r}(0.0);`:`\n      let col = colIn * ${a};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${l}\n      }\n      return ${r}(0.0);`,d=`\n      let col = colIn * ${a};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${(e=>{switch(e){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${r}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${e} is not supported.`)}})(a)}\n      }\n      return ${r}(0.0);\n      `,c=ci(n,r);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?u:d}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${r} {\n    ${e?d:u}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${r}) {\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${i}\n      ${gi(t)}\n      ${c}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${a}] = value;\n    }\n  }`},Li=(e,t,n,r,a,i,s,o)=>{let l="NHWC"===t.format,u=l?e[0].dims[3]:e[0].dims[1],d=n[0],c=l?n[2]:n[3],p=l?n[1]:n[2],h=l?n[3]:n[1],f=l&&u%4==0&&u%3&&h%4==0,m=l?h:c*p,g=l?c*p:h,_=[8,8,1],y=r<=8?[4,1,1]:[4,4,1],w=[Math.ceil(m/_[0]/y[0]),Math.ceil(g/_[1]/y[1]),Math.ceil(d/_[2]/y[2])];Zt("verbose",(()=>`[conv_backprop_mm_webgpu] dispatch = ${w}`));let b=f?4:1,v=Math.max(_[0]*b,_[1]),$=f?4:1,x=[t.kernelShape[l?1:2],t.kernelShape[l?2:3]],k=[x[0]+(t.dilations[0]<=1?0:(x[0]-1)*(t.dilations[0]-1)),x[1]+(t.dilations[1]<=1?0:(x[1]-1)*(t.dilations[1]-1))],S=[k[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),k[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],E=[{type:6,data:r},{type:6,data:a},{type:6,data:i},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:x},{type:6,data:S}];pi(t,E),E.push(...kn(e[0].dims,e[1].dims));let C=["rank","rank"];return s&&(E.push(...kn(e[2].dims)),C.push("rank")),E.push(...kn(n)),{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${y};${_};${f}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:w[0],y:w[1],z:w[2]},programUniforms:E}),getShaderSource:r=>{let a=zn("x",e[0].dataType,e[0].dims.length,$),i=zn("w",e[1].dataType,e[1].dims.length,1),u=On("result",e[0].dataType,n.length,$),d=[a,i],c="";if(s){let t=zn("bias",e[2].dataType,e[2].dims.length,$);d.push(t),c+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${t.type.value} {\n            return bias[coords.${l?"w":"y"}${f?"/ 4":""}];\n          }`}let p=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:x.length},{name:"pads",type:"i32",length:S.length}];hi(t,p);let h=$n(e[0].dataType,1);if("f16"!==h&&"f32"!==h)throw new Error(`elemType ${h} is not supported.`);return`\n        ${_i("uniforms.result_strides")}\n        ${r.registerUniforms(p).declareVariables(...d,u)};\n        ${c}\n        ${Fi(l,s,t,a.type.value,b)}\n        ${f?bi(y,_,h,void 0,!l,v):xi(y,_,h,void 0,!l,v,!1,void 0,o)}`}}}})),bu=Re((()=>{Hl(),jl(),Jl(),Zl(),Vi=(e,t,n,r,a,i=!1,s,o,l=!1)=>{let u=l?1:2,d=l?2:3,c=l?3:1,p=i?2:1,h=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${i?`vec4<${s}>`:s}) {\n    result[flatIndex] = ${i?`vec4<${s}>`:s}(value);\n  }`;r&&(h+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${i?`vec4<${s}>`:s} {\n      return bias[coords.${l?"w":"y"}${i?"/ 4":""}];\n    }`);let f=i?4:1,m=zn("W",t[1].dataType,t[1].dims.length,f),g=zn("Dy",t[0].dataType,t[0].dims.length,f),_=[g,m];r&&_.push(zn("bias",t[2].dataType,[n[c]].length,f));let y=On("result",t[0].dataType,n.length,f),w=`{\n        let batch: u32 = ${a?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${a?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${a?"global_id.y":"workgroup_id.y"} * ${p};\n        let d1: u32 = ${a?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${s}>, ${p}>;\n        for (var i = 0; i < ${p}; i++) {\n          dotProd[i] = vec4<${s}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${s}(dyCorner.x) + ${s}(wR)) / ${s}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${s}(dyCorner.y) + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let dyC2 = (${s}(dyCorner.y) + 1.0 + ${s}(wC)) / ${s}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${s}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${g.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${s}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${c}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${m.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${g.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${s}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${p}; i = i + 1) {\n          let value = dotProd[i] + ${r?"bias[c+i]":`vec4<${s}>(0.0)`};\n          ${y.set("batch","r","c + i","d1","value")};\n        }\n      }`,b=`\n          let outputIndices = ${y.offsetToIndices("global_idx")};\n          let batch = ${y.indicesGet("outputIndices",0)};\n          let d1 = ${y.indicesGet("outputIndices",c)};\n          let r = ${y.indicesGet("outputIndices",u)};\n          let c = ${y.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${s}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${s}(dyRCorner) + ${s}(wR)) / ${s}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${s}(uniforms.Dy_shape[${u}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${s}(dyCCorner) + ${s}(wC)) / ${s}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${s}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${l?g.get("batch","idyR","idyC","inputChannel"):g.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${m.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${r?"bias[d1]":`${s}(0.0)`};\n          ${y.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(o).declareVariables(..._,y)}\n  ${h}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${i?w:b}}`},Gi=(e,t,n)=>{let r=e.length>2,a=t.outputShape,i=mn.size(a),s=[Math.ceil(i/64),1,1];Zt("verbose",(()=>`[conv2d_backprop_webgpu] dispatch = ${s}`));let o="NHWC"===t.format,l=["rank","rank"],u=[t.strides[0],t.strides[1]],d=[t.kernelShape[o?1:2],t.kernelShape[o?2:3]],c=[t.dilations[0],t.dilations[1]],p=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[o?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[o?2:3]-1)*(t.dilations[1]-1))],h=[p[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),p[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],f=t.group,m=e[1].dims,g=m[0]/f,_=m[1],y=[{type:12,data:i},{type:12,data:u},{type:12,data:d},{type:12,data:c},{type:12,data:p},{type:6,data:h},{type:12,data:g},{type:12,data:_},...kn(e[0].dims,e[1].dims)];r&&(y.push(...kn(e[2].dims)),l.push("rank")),y.push(...kn(a));let w=1===s[1]&&1===s[2];return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:l},getRunData:()=>({dispatchGroup:{x:s[0],y:s[1],z:s[2]},outputs:[{dims:n?n(a):a,dataType:e[0].dataType}],programUniforms:y}),getShaderSource:t=>{let n=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:u.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:p.length},{name:"pads",type:"i32",length:h.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],i=$n(e[0].dataType);return`${Vi(t,e,a,r,w,!1,i,n,o)}`}}}})),vu=Re((()=>{wu(),bu(),cu(),eu(),Hi=(e,t,n,r,a,i)=>(e-1)*t+n+(r-1)*a+1-i,qi=(e,t,n,r,a)=>{let i=Math.floor(e/2);"SAME_UPPER"===t?(n[r]=i,n[a]=e-i):"SAME_LOWER"===t&&(n[r]=e-i,n[a]=i)},ji=(e,t,n,r,a,i,s,o,l,u)=>{let d=e.length-2,c=0===u.length;if(0===l.length)for(let e=0;e<d;++e)l.push(0);let p=e[0],h=t[o?3:1]*a;for(let a=0,p=e.length-d-(o?1:0);a<d;++a,++p){let o=e[p],h=c?o*s[a]:u[a],f=Hi(o,s[a],i[a],t[p],n[a],h);qi(f,r,i,a,a+d),c&&u.push(s[a]*(o-1)+l[a]+(t[p]-1)*n[a]+1-i[a]-i[a+d])}u.splice(0,0,p),u.splice(o?3:1,0,h)},Ki=(e,t)=>{let n=e.kernelShape.slice();if(0===e.kernelShape.length||0===e.kernelShape.reduce(((e,t)=>e*t),1)){n.length=0;for(let e=2;e<t[1].dims.length;++e)n.push(t[1].dims[e])}let r="NHWC"===e.format;n.splice(0,0,t[1].dims[0]),n.splice(r?3:1,0,t[1].dims[1]);let a=e.pads.slice(),i=e.outputShape.slice(),s=e.outputPadding.slice(),o=t[0].dims,l=e.dilations.slice();if(0===l.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;l=new Array(e).fill(1)}let u=e.strides.slice();if(0===u.reduce(((e,t)=>e+t),0)){let e=t[0].dims.length-2;u=new Array(e).fill(1)}ji(o,n,l,e.autoPad,e.group,a,u,r,s,i);let d=Object.assign({},e);return Object.assign(d,{kernelShape:n,pads:a,outputPadding:s,outputShape:i,dilations:l,strides:u}),d},Yi=e=>{let t=fi(e),n=e.format,r=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],a=e.dilations,i=e.group,s=e.kernelShape,o=e.pads,l=e.strides,u=e.wIsConst();return{autoPad:r,format:n,dilations:a,group:i,kernelShape:s,outputPadding:e.outputPadding,outputShape:e.outputShape,pads:o,strides:l,wIsConst:u,...t,cacheKey:`${e.format};${t.activation};`}},Xi=(e,t)=>{if(!e||2!==e.length&&3!==e.length)throw new Error("Conv requires 2 or 3 inputs");if(4!==e[0].dims.length&&3!==e[0].dims.length)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");if(e[0].dims["NHWC"===t.format?e[0].dims.length-1:1]!==e[1].dims[0])throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*t.group;if(3===e.length&&(1!==e[2].dims.length||e[2].dims[0]!==n))throw new Error("invalid bias");let r=e[0].dims.length-2;if(t.dilations.reduce(((e,t)=>e+t),0)>0&&t.dilations.length!==r)throw new Error(`dilations should be ${r}D`);if(t.strides.reduce(((e,t)=>e+t),0)>0&&t.strides.length!==r)throw new Error(`strides should be ${r}D`);if(t.pads.reduce(((e,t)=>e+t),0)>0&&t.pads.length!==2*r)throw new Error(`pads should be ${2*r}D`);if(t.outputPadding.length!==r&&0!==t.outputPadding.length)throw new Error(`output_padding should be ${r}D`);if(t.kernelShape.reduce(((e,t)=>e+t),0)>0&&0!==t.kernelShape.length&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(0!==t.outputShape.length&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Qi=[2,3,1,0],Ji=(e,t,n)=>{let r=Ki(n,t),a="NHWC"===n.format,i=r.outputShape,s=i[a?3:1],o=t[0].dims[a?3:1];if(1!==r.group||1===s&&1===o)return void e.compute(Gi(t,r));let l=i[a?1:2],u=i[a?2:3],d=a?l*u:s,c=a?s:l*u,p=t[1].dims[2]*t[1].dims[3]*o,h=e.kernelCustomData.wT??e.compute(Fn(t[1],Qi),{inputs:[1],outputs:[n.wIsConst?-2:-1]})[0];n.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=h);let f=[t[0],h],m=3===t.length;m&&(a||1!==t[2].dims.length?f.push(t[2]):f.push(t[2].reshape([t[2].dims[0],1,1]))),e.compute(Li(f,r,i,d,c,p,m,!0),{inputs:f})},Zi=(e,t)=>{let n="NHWC"===t.format,r=[e.inputs[0].reshape(n?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];3===e.inputs.length&&r.push(e.inputs[2]);let a=t.kernelShape;(0===a.length||0===a[0])&&(a=[e.inputs[1].dims[2]]);let i=t.dilations;(0===i.length||0===i[0])&&(i=[1]);let s=t.strides;(0===s.length||0===s[0])&&(s=[1]);let o=t.pads;0===o.length&&(o=[0,0]),o=[0,o[0],0,o[1]],s=[1].concat(s),i=[1].concat(i),a=[1].concat(a);let l=Ki({...t,pads:o,strides:s,dilations:i,kernelShape:a},r);e.compute(Gi(r,l,(e=>n?[e[0],e[2],e[3]]:[e[0],e[1],e[3]])))},es=(e,t)=>{Xi(e.inputs,t),3===e.inputs[0].dims.length?Zi(e,t):Ji(e,e.inputs,t)}})),$u=Re((()=>{Hl(),Jl(),Ql(),Zl(),ts=(e,t,n,r)=>{let a=mn.size(t),i=t.length,s=zn("input",e,i),o=On("output",e,i),l=6===n.dataType?n.getInt32Array()[0]:Number(n.getBigInt64Array()[0]),u=mn.normalizeAxis(l,i);return{name:"CumSum",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},{type:12,data:u},...kn(t,t)]}),getShaderSource:e=>{let t=` i32(${s.indicesGet("inputIndices","uniforms.axis")}) `,n=In("uniforms.input_shape","uniforms.axis",i),a=r.reverse?t+(r.exclusive?" + 1":""):"0",l=r.reverse?n:t+(r.exclusive?"":" + 1");return`\n                ${e.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(s,o)}\n                ${e.mainStart()}\n                  ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${o.offsetToIndices("global_idx")};\n                  var sum = ${o.type.value}(0);\n                  let first : i32 = ${a};\n                  let last : i32 = ${l};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${s.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${s.getByIndices("inputIndices")};\n                  }\n                  ${o.setByOffset("global_idx","sum")};\n                }`}}},ns=(e,t)=>{let n=e.inputs[0].dims,r=e.inputs[0].dataType,a=e.inputs[1];e.compute(ts(r,n,a,t),{inputs:[0]})},rs=e=>{let t=1===e.exclusive,n=1===e.reverse;return pn({exclusive:t,reverse:n})}})),xu=Re((()=>{Hl(),Jl(),Ql(),Zl(),as=e=>{if(!e||1!==e.length)throw new Error("DepthToSpace requires 1 input.");if(4!==e[0].dims.length)throw new Error("DepthToSpace requires 4D input.")},is=(e,t,n,r)=>{let a=[];a.push(`fn perm(i: ${r.type.indices}) -> ${n.type.indices} {\n    var a: ${n.type.indices};`);for(let r=0;r<t;++r)a.push(n.indicesSet("a",e[r],`i[${r}]`));return a.push("return a;}"),a.join("\n")},ss=(e,t)=>{let n,r,a,i,s,o,l="NHWC"===t.format,u=t.blocksize,d="DCR"===t.mode;l?([n,r,a,i]=e.dims,s=d?[n,r,a,u,u,i/u**2]:[n,r,a,i/u**2,u,u],o=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([n,r,a,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],s=d?[n,u,u,i/u**2,r,a]:[n,i/u**2,u,u,r,a],o=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let c=e.reshape(s),p=c.dims.length,h=e.dataType,f=zn("a",h,p),m=On("output",h,p);return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:e=>{let t=l?[n,r*u,a*u,i/u**2]:[n,i/u**2,r*u,a*u],s=mn.size(t),d=c.dims,p=mn.sortBasedOnPerm(d,o);return{outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...kn(d,p)]}},getShaderSource:e=>`\n  ${e.registerUniform("output_size","u32").declareVariables(f,m)}\n\n  ${is(o,p,f,m)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${m.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${m.setByOffset("global_idx",f.getByIndices("aIndices"))}\n  }`}},os=(e,t)=>{as(e.inputs),e.compute(ss(e.inputs[0],t))},ls=e=>pn({blocksize:e.blocksize,mode:e.mode,format:e.format})})),ku=Re((()=>{Hl(),Jl(),Ql(),Zl(),cs="^"+(ds="("+(us="[a-zA-Z]|\\.\\.\\.")+")+")+"$",ps="^("+ds+",)*"+ds+"$",hs=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,t){let n=this.symbolToIndices.get(e);void 0===n?n=[t]:n.push(t),this.symbolToIndices.set(e,n)}},fs=class{constructor(e,t){this.equation=t,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[n,r]=t.includes("->")?t.split("->",2):[t,""];if(!n.match(RegExp(ps)))throw new Error("Invalid LHS term");if(n.split(",").forEach(((t,n)=>{let r=e[n].dims.slice();if(!t.match(RegExp(cs)))throw new Error("Invalid LHS term");let a=this.processTerm(t,!0,r,n);this.lhs.push(a)})),""===r)r+=[...this.symbolToInfo.entries()].filter((([e,t])=>1===t.count||"..."===e)).map((([e])=>e)).join("");else if(!r.match(RegExp(ds)))throw new Error("Invalid RHS");r.match(RegExp(us,"g"))?.forEach((e=>{if("..."===e)this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let t=this.symbolToInfo.get(e);if(void 0===t)throw new Error("Invalid RHS symbol");this.outputDims.push(t.dimValue)}})),this.rhs=this.processTerm(r,!1,this.outputDims)}addSymbol(e,t,n){let r=this.symbolToInfo.get(e);if(void 0!==r){if(r.dimValue!==t&&1!==r.count)throw new Error("Dimension mismatch");r.count++,r.inputIndices.push(n)}else r={count:1,dimValue:t,inputIndices:[n]};this.symbolToInfo.set(e,r)}processTerm(e,t,n,r=-1){let a=n.length,i=!1,s=[],o=0;if(!e.match(RegExp(cs))&&!t&&""!==e)throw new Error("Invalid LHS term");let l=e.match(RegExp(us,"g")),u=new hs(r);return l?.forEach(((e,d)=>{if("..."===e){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let e=a-l.length+1;if(e<0)throw new Error("Ellipsis out of bounds");if(s=n.slice(o,o+e),this.hasEllipsis){if(this.ellipsisDims.length!==s.length||this.ellipsisDims.toString()!==s.toString())throw new Error("Ellipsis dimensions mismatch")}else{if(!t)throw new Error("Ellipsis must be specified in the LHS");this.hasEllipsis=!0,this.ellipsisDims=s}for(let e=0;e<s.length;e++){let t=String.fromCharCode("0".charCodeAt(0)+e);u.addSymbol(t,d+e),this.addSymbol(t,n[o++],r)}}else u.addSymbol(e,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(e,n[o++],r)})),u}},ms=e=>e+"_max",gs=(e,t,n,r)=>{let a=e.map((e=>e.length)).map(((e,n)=>zn(`input${n}`,t,e))),i=mn.size(r),s=On("output",t,r.length),o=[...n.symbolToInfo.keys()].filter((e=>!n.rhs.symbolToIndices.has(e)));return{name:"Einsum",shaderCache:{hint:n.equation,inputDependencies:e.map((()=>"rank"))},getRunData:()=>{let a=o.filter((e=>n.symbolToInfo.has(e))).map((e=>({type:12,data:n.symbolToInfo.get(e)?.dimValue||0})));a.push({type:12,data:i});let s=e.map(((e,t)=>[...kn(e)])).reduce(((e,t)=>e.concat(t)),a);return s.push(...kn(r)),{outputs:[{dims:r,dataType:t}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:s}},getShaderSource:e=>{let t=[],r=[],i=[],l=[],u=[],d=n.symbolToInfo.size===n.rhs.symbolToIndices.size;n.symbolToInfo.forEach(((e,o)=>{if(n.rhs.symbolToIndices.has(o)){let r=n.rhs.symbolToIndices.get(o)?.[0];void 0!==r&&n.lhs.forEach(((n,i)=>{if(e.inputIndices.includes(i)){let e=n.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{t.push(`${a[i].indicesSet(`input${i}Indices`,e,s.indicesGet("outputIndices",r))}`)}))}}))}else n.lhs.forEach(((t,n)=>{if(e.inputIndices.includes(n)){let e=t.symbolToIndices.get(o);if(void 0===e)throw new Error("Invalid symbol error");e.forEach((e=>{r.push(`${a[n].indicesSet(`input${n}Indices`,e,`${o}`)}`)})),u.push(`prod *= ${a[n].getByIndices(`input${n}Indices`)};`)}})),i.push(`for(var ${o}: u32 = 0; ${o} < uniforms.${ms(o)}; ${o}++) {`),l.push("}")}));let c=d?[...t,`let sum = ${a.map(((e,t)=>e.getByIndices(`input${t}Indices`))).join(" * ")};`]:[...t,"var sum = 0.0;",...i,...r,"var prod = 1.0;",...u,"sum += prod;",...l];return`\n            ${e.registerUniforms(o.map((e=>({name:`${ms(e)}`,type:"u32"})))).registerUniform("outputSize","u32").declareVariables(...a,s)}\n\n            ${e.mainStart()}\n            ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${s.offsetToIndices("global_idx")};\n            ${a.map(((e,t)=>`var input${t}Indices: ${a[t].type.indices};`)).join("\n")}\n            ${c.join("\n")};\n            ${s.setByOffset("global_idx","sum")};\n          }`}}},_s=(e,t)=>{let n=new fs(e.inputs,t.equation),r=n.outputDims,a=e.inputs.map(((e,t)=>e.dims));e.compute(gs(a,e.inputs[0].dataType,n,r))},ys=e=>{let t=e.equation.replace(/\s+/g,"");return pn({equation:t})}})),Su=Re((()=>{Hl(),Jl(),Zl(),ws=e=>{if(!e||2!==e.length)throw new Error("Expand requires 2 input.");let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=n.length<t.length?0:n.length-t.length,a=t.length<n.length?0:t.length-n.length;for(;r<n.length&&a<t.length;++r,++a)if(n[r]!==t[a]&&1!==n[r]&&1!==t[a])throw new Error("Expand requires shape to be broadcastable to input")},bs=(e,t)=>{let n=e.length-t.length,r=[];for(let t=0;t<n;++t)r.push(e[t]);for(let a=0;a<t.length;++a)r.push(1===t[a]?e[a+n]:t[a]);return r},vs=(e,t)=>e.length>t.length?bs(e,t):bs(t,e),$s=e=>{let t=e[0].dims,n=Array.from(e[1].getBigInt64Array(),Number),r=vs(t,n),a=e[0].dataType,i=9===a?4:1,s=Math.ceil(mn.size(r)/i),o=[{type:12,data:s},...kn(t,r)];return{name:"Expand",shaderCache:{hint:`${r.length}`,inputDependencies:["rank"]},getShaderSource:e=>{let n,s=zn("input",a,t.length,i),o=On("output",a,r.length,i);if(9===a){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${o.offsetToIndices(`outputOffset + ${t}u`)};\n          let offset${t} = ${s.broadcastedIndicesToOffset(`outputIndices${t}`,o)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${s.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${i};\n        var data = vec4<u32>(0);\n        ${e("data",0,"u32")}\n        ${e("data",1,"u32")}\n        ${e("data",2,"u32")}\n        ${e("data",3,"u32")}\n        ${o.setByOffset("global_idx","data")}\n      }`}else n=`\n        let outputIndices = ${o.offsetToIndices("global_idx")};\n        let inputOffset = ${s.broadcastedIndicesToOffset("outputIndices",o)};\n        ${o.setByOffset("global_idx",s.getByOffset("inputOffset"))}\n      }`;return`\n    ${e.registerUniform("vec_size","u32").declareVariables(s,o)}\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${n}`},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:o})}},xs=e=>{ws(e.inputs),e.compute($s(e.inputs),{inputs:[0]})}})),Eu=Re((()=>{Hl(),Jl(),Zl(),lu(),ks=e=>{let t=e[0].dataType,n=mn.size(e[0].dims),r=mn.size(e[1].dims),a=r%4==0;return{name:"FastGeluWithBias",shaderCache:{hint:`${a}`,inputDependencies:["type","type"]},getShaderSource:e=>{let n=zn("x",t,[1],4),r=zn("bias",t,[1],4),i=On("y",t,[1],4),s=e=>`\n      let bias${e}_offset: u32 = (global_idx * 4 + ${e}) % uniforms.bias_size;\n      let bias${e} = ${r.getByOffset(`bias${e}_offset / 4`)}[bias${e}_offset % 4];`,o=a?`\n      let bias = ${r.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${s(0)}${s(1)}${s(2)}${s(3)}\n      let bias = ${n.type.value}(bias0, bias1, bias2, bias3);`;return`${e.registerUniforms([{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}]).declareVariables(n,r,i)}\n\n    ${Ga(xn(t))}\n\n    ${e.mainStart(bn)}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${n.getByOffset("global_idx")};\n      ${o}\n      let x_in = x + bias;\n      ${i.setByOffset("global_idx",Ha("x_in"))}\n    }`},getRunData:e=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],programUniforms:[{type:12,data:Math.ceil(n/4)},{type:12,data:r}],dispatchGroup:{x:Math.ceil(n/bn/4)}})}},Ss=e=>{e.inputs.length<2||0===mn.size(e.inputs[1].dims)?qa(e):e.compute(ks(e.inputs))}})),Cu=Re((()=>{Hl(),Jl(),Ql(),Zl(),Es=e=>{if(!e||2!==e.length)throw new Error("Gather requires 2 inputs.")},Cs=(e,t)=>{let n=e[0].dims,r=e[1].dims,a=n.length,i=mn.normalizeAxis(t.axis,a),s=n.slice(0);s.splice(i,1,...r);let o=n[i],l=9===e[0].dataType?4:1,u=Math.ceil(mn.size(s)/l),d=[{type:12,data:u},{type:6,data:o},{type:12,data:i},...kn(e[0].dims,e[1].dims,s)];return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:t=>{let n,o=zn("data",e[0].dataType,e[0].dims.length,l),u=zn("inputIndices",e[1].dataType,e[1].dims.length),d=On("output",e[0].dataType,s.length,l),c=e=>{let t=r.length,n=`var indicesIndices${e}  = ${u.type.indices}(0);`;for(let r=0;r<t;r++)n+=`${t>1?`indicesIndices${e}[${r}]`:`indicesIndices${e}`} = ${s.length>1?`outputIndices${e}[uniforms.axis + ${r}]`:`outputIndices${e}`};`;n+=`\n          var idx${e} = ${u.getByIndices(`indicesIndices${e}`)};\n          if (idx${e} < 0) {\n            idx${e} = idx${e} + uniforms.axisDimLimit;\n          }\n          var dataIndices${e} : ${o.type.indices};\n        `;for(let r=0,o=0;r<a;r++)r===i?(n+=`${a>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = u32(idx${e});`,o+=t):(n+=`${a>1?`dataIndices${e}[${r}]`:`dataIndices${e}`} = ${s.length>1?`outputIndices${e}[${o}]`:`outputIndices${e}`};`,o++);return n};if(9===e[0].dataType){let e=(e,t,n="")=>`\n          let outputIndices${t} = ${d.offsetToIndices(`outputOffset + ${t}u`)};\n          ${c(t)};\n          let offset${t} = ${o.indicesToOffset(`dataIndices${t}`)};\n          let index${t} = offset${t} / 4u;\n          let component${t} = offset${t} % 4u;\n          ${e}[${t}] = ${n}(${o.getByOffset(`index${t}`)}[component${t}]);\n        `;n=`\n        let outputOffset = global_idx * ${l};\n        var value = vec4<u32>(0);\n        ${e("value",0,"u32")}\n        ${e("value",1,"u32")}\n        ${e("value",2,"u32")}\n        ${e("value",3,"u32")}\n        ${d.setByOffset("global_idx","value")}\n      `}else n=`\n      let outputIndices = ${d.offsetToIndices("global_idx")};\n      ${c("")};\n      let value = ${o.getByIndices("dataIndices")};\n      ${d.setByOffset("global_idx","value")};\n      `;return`\n      ${t.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(o,u,d)}\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${n}\n      }`}}},As=e=>pn({axis:e.axis}),Is=(e,t)=>{let n=e.inputs;Es(n),e.compute(Cs(e.inputs,t))}})),Au=Re((()=>{Hl(),Jl(),Ql(),Zl(),Ts=e=>{if(!e||2!==e.length)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error("GatherElements requires that the data input and\n                     indices input tensors be of same rank.")},zs=(e,t)=>{let n=e[0].dims,r=e[0].dataType,a=n.length,i=e[1].dims,s=e[1].dataType,o=mn.normalizeAxis(t.axis,a),l=n[o],u=i.slice(0),d=mn.size(u),c=zn("input",r,a),p=zn("indicesInput",s,i.length),h=On("output",r,u.length),f=[{type:12,data:d},{type:6,data:l},{type:12,data:o}];return f.push(...kn(n,i,u)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:e=>`\n      ${e.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(c,p,h)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${h.offsetToIndices("global_idx")};\n\n      var idx = ${p.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${c.type.indices}(outputIndices);\n      ${c.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${c.getByIndices("inputIndices")};\n\n      ${h.setByOffset("global_idx","value")};\n  }`}},Os=e=>pn({axis:e.axis}),Ms=(e,t)=>{let n=e.inputs;Ts(n),e.compute(zs(e.inputs,t))}})),Iu=Re((()=>{Hl(),Jl(),Zl(),Rs=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(3===e.length&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||3===e.length&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ps=(e,t)=>{let n=e[0].dims.slice(),r=e[1].dims.slice(),[a,i,s]=_n.getShapeOfGemmResult(n,t.transA,r,t.transB,3===e.length?e[2].dims:void 0),o=[a,i];if(!o)throw new Error("Can't use gemm on the given tensors");let l=mn.size(o),u=[{type:12,data:l},{type:12,data:a},{type:12,data:i},{type:12,data:s},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];return 3===e.length&&(u.push(...kn(e[2].dims)),d.push("rank")),u.push(...kn(o)),{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:n=>{let r="";t.transA&&t.transB?r="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?r="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?r="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(r="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let a=1===t.alpha?"":"value *= uniforms.alpha;",i=zn("a",e[0].dataType,e[0].dims),s=zn("b",e[1].dataType,e[1].dims),l=i.type.value,u=null,d=[i,s];3===e.length&&(u=zn("c",e[2].dataType,e[2].dims.length),d.push(u));let c=On("output",e[0].dataType,o.length);return d.push(c),`\n  ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}]).declareVariables(...d)}\n\n  ${n.mainStart()}\n    ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${l}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${r}\n    }\n\n    ${a}\n    ${null!=u?`let cOffset = ${u.broadcastedIndicesToOffset("vec2(m, n)",c)}; value += ${l}(uniforms.beta) * ${u.getByOffset("cOffset")};`:""}\n    output[global_idx] = value;\n  }`}}},Bs=e=>({transA:e.transA,transB:e.transB,alpha:e.alpha,beta:e.beta,cacheKey:`${e.transA};${e.transB};${1===e.alpha}`}),Ds=(e,t)=>{Rs(e.inputs),e.compute(Ps(e.inputs,t))}})),Tu=Re((()=>{Hl(),Jl(),Zl(),Ns=(e,t)=>{let n=e[0].dims,r=n,a=mn.sizeToDimension(n,2),i=mn.sizeFromDimension(n,2),s=Sn(i),o=i/s,l=[n[0],n[1],o],u=[{type:12,data:i},{type:12,data:o}];return u.push(...kn(l,l)),{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${s}`,inputDependencies:["rank","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:a},programUniforms:u}),getShaderSource:n=>{let r=zn("x",e[0].dataType,l.length,s),a=zn("scale",e[1].dataType,e[1].dims),i=zn("bias",e[2].dataType,e[2].dims),o=On("output",e[0].dataType,l.length,s),u=[r,a,i,o],d=r.type.value,c=1===s?"f32":`vec${s}<f32>`;return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${c}, 64>;\n  const workgroupSize = 64u;\n  ${n.registerUniforms([{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}]).declareVariables(...u)}\n  ${n.mainStart(64)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${c}(${r.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${An("workgroupShared[0]",s)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${c}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${c}(${r.get("batch","channel","h")}) - ${c}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${An("workgroupShared[0]",s)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${a.getByOffset("channel")});\n    let channelShift = f32(${i.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${r.get("batch","channel","h")} * ${d}(${c}(channelScale)) + ${d}(${c}(channelShift));\n      ${o.set("batch","channel","h","value")};\n    }\n  }`}}},Us=(e,t,n,r,a,i,s,o)=>{let l=Sn(s),u=1===l?"vec2f":`mat2x${l}f`,d=1===l?"f32":`vec${l}f`,c=(e,t)=>`${u}(${e}, ${t})`,p=a*s/l,h=[{type:12,data:Math.ceil(i/64)},{type:12,data:i},{type:12,data:Math.floor(s/l)},{type:12,data:Math.floor(i*s/l)}],f=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${l}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:[a,s,64,2],dataType:1}],dispatchGroup:{x:a*s/l},programUniforms:h}),getShaderSource:e=>{let n=zn("input",t.dataType,t.dims,l);return`\n  ${e.declareVariables(n)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${u}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart(64)}\n    let currentImageNumber = global_idx / 64 / uniforms.C;\n    let currentChannelNumber = (global_idx / 64) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${En("f32",l)};\n    var squaredSum = ${En("f32",l)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${d}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${c("sum","squaredSum")};\n  }`}},{inputs:[t],outputs:[-1]})[0],m=[{type:12,data:p},{type:12,data:i},{type:12,data:Math.floor(s/l)},{type:12,data:Math.floor(64*s/l)}];return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${o}`,inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:[a,s,2],dataType:1}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:m}),getShaderSource:e=>{let t=zn("scale",n.dataType,n.dims,l),a=zn("bias",r.dataType,r.dims,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${u}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${t.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${a.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${u}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${En("f32",l)};\n    var squaredSum = ${En("f32",l)};\n    for (var i: u32 = 0; i < min(64, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * 64];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${o}));\n    let channelScale = invStdDev * ${d}(scale[currentChannelNumber]);\n    let channelShift = ${d}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${c("channelScale","channelShift")};\n  }`}},{inputs:[f,n,r],outputs:[-1]})[0]},Ws=(e,t,n)=>{let r=t[0].dims,a=r,i=r[0],s=r[r.length-1],o=mn.sizeFromDimension(r,1)/s,l=Sn(s),u=mn.size(a)/l,d=[{type:12,data:o},{type:12,data:Math.floor(s/l)}],c=Us(e,t[0],t[1],t[2],i,o,s,n.epsilon);e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:d}),getShaderSource:e=>{let n=$n(t[0].dataType),r=1===l?"vec2f":`mat2x${l}f`,i=1===l?n:`vec${l}<${n}>`,s=zn("input",t[0].dataType,t[0].dims,l),o=On("output",t[0].dataType,a,l);return`\n  @group(0) @binding(0) var<storage, read> input : array<${s.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${r}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${o.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${e.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${i}(scale[0]), ${i}(scale[1]));\n  }`}},{inputs:[t[0],c]})},Fs=(e,t)=>{"NHWC"===t.format?Ws(e,e.inputs,t):e.compute(Ns(e.inputs,t))}})),zu=Re((()=>{Hl(),Jl(),Zl(),Ls=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Vs=(e,t,n)=>{let r=t.simplified,a=e[0].dims,i=e[1],s=!r&&e[2],o=a,l=mn.normalizeAxis(t.axis,a.length),u=mn.sizeToDimension(a,l),d=mn.sizeFromDimension(a,l),c=mn.size(i.dims),p=s?mn.size(s.dims):0;if(c!==d||s&&p!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${c} and bias size of ${p}`);let h=[];for(let e=0;e<a.length;++e)e<l?h.push(a[e]):h.push(1);let f=Sn(d),m=["type","type"],g=[{type:12,data:u},{type:1,data:d},{type:12,data:Math.floor(d/f)},{type:1,data:t.epsilon}];s&&m.push("type");let _=n>1,y=n>2,w=[{dims:o,dataType:e[0].dataType}];return _&&w.push({dims:h,dataType:1}),y&&w.push({dims:h,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${n};${r}`,inputDependencies:m},getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:g}),getShaderSource:t=>{let n=$n(e[0].dataType),a=[zn("x",e[0].dataType,e[0].dims,f),zn("scale",i.dataType,i.dims,f)];return s&&a.push(zn("bias",s.dataType,s.dims,f)),a.push(On("output",e[0].dataType,o,f)),_&&a.push(On("mean_data_output",1,h)),y&&a.push(On("inv_std_output",1,h)),`\n  ${t.registerUniforms([{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...a)}\n  ${t.mainStart()}\n    ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${En("f32",f)};\n    var mean_square_vector = ${En("f32",f)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Cn(n,f,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${An("mean_vector",f)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${An("mean_square_vector",f)} / uniforms.norm_size ${r?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Cn(n,f,"x[j + offset]")};\n      let f32scale = ${Cn(n,f,"scale[j]")};\n      output[j + offset] = ${a[0].type.value}((f32input ${r?"":"- mean"}) * inv_std_dev * f32scale\n        ${s?`+ ${Cn(n,f,"bias[j]")}`:""}\n      );\n    }\n\n    ${_?"mean_data_output[global_idx] = mean":""};\n    ${y?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`}}},Gs=(e,t)=>{Ls(e.inputs),e.compute(Vs(e.inputs,t,e.outputCount))}})),Ou=Re((()=>{Hl(),Jl(),Ql(),Zl(),Hs=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let n=e[0],r=n.dims.length;if(n.dims[r-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let a=Math.floor((t.k+t.blockSize-1)/t.blockSize),i=t.blockSize/8*t.bits,s=e[1];if(!mn.areEqual(s.dims,[t.n,a,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let o=e[2].dims;if(mn.size(o)!==t.n*a)throw new Error("scales input size error.");if(4===e.length){let n=e[3].dims,r=t.bits>4?t.n*a:t.n*Math.floor((a+1)/2);if(mn.size(n)!==r)throw new Error("zeroPoints input size error.")}},qs=(e,t,n,r)=>{let a=e[0].dims,i=a.length,s=Math.floor((t.k+t.blockSize-1)/t.blockSize),o=a[i-2],l=t.k,u=t.n,d=a.slice(0,i-2),c=mn.size(d),p=t.blockSize/8*t.bits/4,h=e[0].dataType,f=Sn(o),m=Sn(t.k),g=Sn(p),_=Ft(h),y=o*s*_,w=Math.floor(r/y),b=s<=n[0]&&w>0,v=!b||w>=4?Sn(u):w>=2&&Sn(u)>=2?2:1,$=d.concat([o,u]),x=mn.size($)/v/f,k=b?[]:[{type:12,data:x},{type:12,data:t.blockSize}],S=[c,o,l/m],E=mn.convertShape(e[1].dims).slice();E.splice(-1,1,p/g),k.push(...kn(S)),k.push(...kn(E)),k.push(...kn(e[2].dims)),4===e.length&&k.push(...kn(mn.convertShape(e[3].dims)));let C=[c,o,u/v];return k.push(...kn(C)),{name:b?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${o};${h};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:$,dataType:h}],name:b?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:b?{x:1,y:Math.ceil(u/v),z:c}:{x:Math.ceil(x/64)},programUniforms:k}),getShaderSource:n=>{let r=S.length,a=zn("a",e[0].dataType,r,m),i=zn("b",12,E.length,g),l=zn("scales",e[2].dataType,e[2].dims.length),d=[a,i,l],c=4===e.length?zn("zero_points",12,e[3].dims.length):void 0;c&&d.push(c);let h=C.length,_=On("output",e[0].dataType,h,v),y=$n(e[0].dataType),w=(()=>{switch(m){case 1:return`array<${y}, 8>`;case 2:return`mat4x2<${y}>`;case 4:return`mat2x4<${y}>`;default:throw new Error(`${m}-component is not supported.`)}})(),$=`\n        for (var word: u32 = 0; word < ${p}; word += ${g}) {\n          ${i.indicesSet("b_indices","2","word")};\n          let b_data = ${i.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${g}; i++) {\n            let b_value: u32 = ${1===g?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${w}(${Array.from({length:4},((e,t)=>`${y}(b_value_lower[${t}]), ${y}(b_value_upper[${t}])`)).join(", ")});\n            let b_dequantized_values = ${1===m?`${w}(${Array.from({length:8},((e,t)=>`(b_quantized_values[${t}] - zero_point) * scale`)).join(", ")});`:`(b_quantized_values - ${w}(${Array(8).fill("zero_point").join(",")})) * scale;`};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${b?o:f}u; m++) {\n              ${a.indicesSet("a_indices",r-2,b?"m":`row * ${f} + m`)};\n              ${a.indicesSet("a_indices",r-1,"word_offset")};\n              var input_offset = ${a.indicesToOffset("a_indices")};\n              var a_data: ${w};\n              for (var j: u32 = 0; j < ${8/m}; j++) {\n                a_data[j] = ${a.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${b?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${v>1?"[c]":""} += ${Array.from({length:8/m},((e,t)=>1===m?`a_data[${t}] * b_dequantized_values[${t}]`:`dot(a_data[${t}], b_dequantized_values[${t}])`)).join(" + ")};\n            }\n            word_offset += ${8/m};\n          }\n        }`,x=c?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${c.getByOffset("zero_point_index")};\n          }`:"";return b?`\n        var<workgroup> workgroup_shared: array<${_.type.value}, ${o*s}>;\n        ${n.declareVariables(...d,_)}\n        ${n.mainStart([s,1,1])}\n          var a_indices: ${a.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${a.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${v}; c++) {\n            let col_times_components_plus_c = col * ${v} + c;\n              ${c?`\n            var zero_point_bytes_per_col: u32 = (${s} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${c.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${i.type.indices};\n            ${i.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${s} + block;\n            let scale = ${l.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${y}(${c?"(zero_point_word) & 0xFu":8});\n            ${i.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/m};\n            var workgroup_shared_offset: u32 = block * ${o};\n            ${$}\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${_.type.indices};\n            ${_.indicesSet("output_indices","0","batch")};\n            ${_.indicesSet("output_indices",h-1,"col")};\n            ${_.indicesSet("output_indices",h-2,"0")};\n            var output_offset = ${_.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${o}u; m++) {\n              var output_value: ${_.type.value} = ${_.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${s}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${o};\n              }\n              ${_.setByOffset("output_offset","output_value")};\n              output_offset += ${u/v};\n            }\n          }\n        }`:`\n        ${n.registerUniforms([{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}]).declareVariables(...d,_)}\n        ${n.mainStart()}\n          ${n.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${_.type.value}, ${f}>;\n          var output_indices = ${_.offsetToIndices("global_idx")};\n          var col = ${_.indicesGet("output_indices",h-1)};\n          var row = ${_.indicesGet("output_indices",h-2)};\n          var a_indices: ${a.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${c?`\n          var zero_point_abs_offset = col * ${v} * ((${s} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${c.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${s*v};\n          var b_indices: ${i.type.indices};\n          for (var c: u32 = 0; c < ${v}; c++) {\n            ${i.indicesSet("b_indices","0",`col * ${v} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${s}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${l.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${y}(${c?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${i.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${$}\n              scale_index++;\n              ${x}\n              block_offset += uniforms.block_size / ${m};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${c?`if (zero_point_offset % 8 > 0) {\n                ${x}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${f}u; k++) {\n              ${_.indicesSet("output_indices",h-2,`${f} * row + k`)};\n              ${_.setByIndices("output_indices","output_values[k]")}\n            }\n        }`}}},js=(e,t)=>{Hs(e.inputs,t);let n=e.getMaxComputeWorkgroupSizes(),r=e.getMaxComputeWorkgroupStoragesize();e.compute(qs(e.inputs,t,n,r))},Ks=e=>pn(e)})),Mu=Re((()=>{Hl(),Jl(),Ql(),Yl(),iu(),Zl(),eu(),Ys=(e,t)=>e.length>t&&e[t].dims.length>0&&mn.size(e[t].dims)>0?e[t]:void 0,Xs=(e,t)=>{let n=e[0],r=Ys(e,1),a=Ys(e,2),i=Ys(e,3),s=Ys(e,4),o=Ys(e,5),l=Ys(e,6),u=Ys(e,7);if(3!==n.dims.length&&5!==n.dims.length)throw new Error("Input query is expected to have 3 or 5 dimensions");let d,c=n.dims[0],p=n.dims[1],h=3===n.dims.length?n.dims[2]:t.numHeads*n.dims[4],f=p,m=0,g=0,_=Math.floor(h/t.numHeads);if(l&&u){if(4!==l.dims.length)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==c||l.dims[1]!==t.numHeads||l.dims[3]!==_)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(u.dims[0]!==c||u.dims[1]!==t.numHeads||u.dims[3]!==_)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==u.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(4!==u.dims.length)throw new Error('Input "past_value" is expected to have 4 dimensions');m=l.dims[2],g=l.dims[2]}else if(l||u)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');if(r){if(3!==n.dims.length)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(r.dims.length<3||r.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(n.dims[0]!==r.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(3===r.dims.length){if(r.dims[2]!==n.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');d=2,f=r.dims[1]}else if(5===r.dims.length){if(r.dims[2]!==t.numHeads||2!==r.dims[3]||r.dims[4]!==_)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(a)throw new Error('Expect "value" be none when "key" has packed kv format.');d=5,f=r.dims[1]}else{if(r.dims[1]!==t.numHeads||r.dims[3]!==_)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=0,f=r.dims[2]}}else{if(3!==n.dims.length&&5!==n.dims.length)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(5===n.dims.length&&(n.dims[2]!==t.numHeads||3!==n.dims[3]))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');d=3}if(i){if(1!==i.dims.length)throw new Error('Input "bias" is expected to have 1 dimension');if(a&&5===n.dims.length&&2===n.dims[3])throw new Error("bias is not allowed for packed kv.")}let y=0;if(s){y=8;let e=s.dims;throw 1===e.length?e[0]===c?y=1:e[0]===3*c+2&&(y=3):2===e.length&&e[0]===c&&e[1]===f&&(y=5),8===y?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let w=!1,b=h;if(a){if(3!==a.dims.length&&4!==a.dims.length)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(n.dims[0]!==a.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(3===a.dims.length){if(f!==a.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');b=a.dims[2]}else{if(f!==a.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');b=a.dims[1]*a.dims[3],w=!0}}let v=m+f;if(s)throw new Error("Key padding mask is not supported");if(o){if(4!==o.dims.length)throw new Error('Input "relative_position_bias" is expected to have 4 dimensions');if(o.dims[0]!==c&&1!==o.dims[0]||o.dims[1]!==t.numHeads||o.dims[2]!==p||o.dims[3]!==v)throw new Error('Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)')}return{batchSize:c,sequenceLength:p,pastSequenceLength:m,kvSequenceLength:f,totalSequenceLength:v,maxSequenceLength:g,inputHiddenSize:0,hiddenSize:h,vHiddenSize:b,headSize:_,vHeadSize:Math.floor(b/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:y,scale:t.scale,broadcastResPosBias:!1,passPastInKv:w,qkvFormat:d}},Qs=e=>pn({...e}),Js=pn({perm:[0,2,1,3]}),Zs=(e,t,n,r,a,i,s)=>{let o=[r,a,i],l=mn.size(o),u=[{type:12,data:l},{type:12,data:s},{type:12,data:i}];return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:o,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:u}),getShaderSource:e=>{let r=On("qkv_with_bias",t.dataType,o),a=zn("qkv",t.dataType,o),i=zn("bias",n.dataType,o);return`\n  ${e.registerUniforms([{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}]).declareVariables(a,i,r)}\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`}},{inputs:[t,n],outputs:[-1]})[0]},eo=(e,t,n,r,a,i,s,o)=>{let l=i;if(s){if(1===r)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=Zs(e,i,s,t,r,n*a,o),l=l.reshape([t,r,n,a]),e.compute(Fn(l,Js.perm),{inputs:[l],outputs:[-1]})[0]}return 3===i.dims.length&&(l=i.reshape([t,r,n,a])),e.compute(Fn(l,Js.perm),{inputs:[l],outputs:[-1]})[0]},to=(e,t)=>{let n=Xs(e.inputs,t),r=e.inputs[0],a=Ys(e.inputs,1),i=Ys(e.inputs,2),s=Ys(e.inputs,3),o=Ys(e.inputs,4),l=Ys(e.inputs,5),u=Ys(e.inputs,6),d=Ys(e.inputs,7);if(5===r.dims.length)throw new Error("Packed QKV is not implemented");if(5===a?.dims.length)throw new Error("Packed KV is not implemented");let c=a&&i&&4===a.dims.length&&4===i.dims.length,p=eo(e,n.batchSize,n.numHeads,n.sequenceLength,n.headSize,r,s,0);if(c)return Qr(e,p,a,i,o,void 0,u,d,l,n,t);if(!a||!i)throw new Error("key and value must be provided");let h=eo(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.headSize,a,s,n.hiddenSize),f=eo(e,n.batchSize,n.numHeads,n.kvSequenceLength,n.vHeadSize,i,s,2*n.hiddenSize);Qr(e,p,h,f,o,void 0,u,d,l,n,t)}})),Ru=Re((()=>{Hl(),Jl(),Zl(),no=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(1!==e[0].dataType&&10!==e[0].dataType)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=2*e[0].dims.length===e[1].dims[0];if(4===e.length&&(t=2*e[3].dims[0]===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},ro=(e,t,n)=>{let r="";for(let a=t-1;a>=0;--a)r+=`\n            k = i32(${e.indicesGet("indices",a)}) - ${In("uniforms.pads",a,n)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${In("uniforms.x_shape",a,t)})) {\n              break;\n            }\n            offset += k * i32(${In("uniforms.x_strides",a,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${r}\n            value = x[offset];\n          }\n      `},ao=(e,t,n)=>{let r="";for(let a=t-1;a>=0;--a)r+=`\n                k = i32(${e.indicesGet("indices",a)}) - ${In("uniforms.pads",a,n)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${In("uniforms.x_shape",a,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${In("uniforms.x_shape",a,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${In("uniforms.x_strides",a,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},io=(e,t,n)=>{let r="";for(let a=t-1;a>=0;--a)r+=`\n                k = i32(${e.indicesGet("indices",a)}) - ${In("uniforms.pads",a,n)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${In("uniforms.x_shape",a,t)})) {\n                  k = i32(${In("uniforms.x_shape",a,t)}) - 1;\n                }\n                offset += k * i32(${In("uniforms.x_strides",a,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},so=(e,t,n)=>{let r="";for(let a=t-1;a>=0;--a)r+=`\n                k = i32(${e.indicesGet("indices",a)}) - ${In("uniforms.pads",a,n)};\n                if (k < 0)  {\n                  k += i32(${In("uniforms.x_shape",a,t)}]);\n                }\n                if (k >= i32(${In("uniforms.x_shape",a,t)})) {\n                  k -= i32(${In("uniforms.x_shape",a,t)});\n                }\n                offset += k * i32(${In("uniforms.x_strides",a,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${r}\n              value = x[offset];\n          `},oo=(e,t,n)=>{switch(n.mode){case 0:return ro(e,t,n.pads.length);case 1:return ao(e,t,n.pads.length);case 2:return io(e,t,n.pads.length);case 3:return so(e,t,n.pads.length);default:throw new Error("Invalid mode")}},lo=(e,t)=>{let n=mn.padShape(e[0].dims.slice(),t.pads),r=e[0].dims,a=[{type:12,data:mn.size(n)},{type:6,data:t.pads}];return 0===t.mode&&a.push({type:e[0].dataType,data:t.value}),a.push(...kn(e[0].dims,n)),{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(mn.size(n)/64)},programUniforms:a}),getShaderSource:a=>{let i=On("output",e[0].dataType,n.length),s=zn("x",e[0].dataType,r.length),o=s.type.value,l=oo(i,r.length,t),u=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return 0===t.mode&&u.push({name:"constant_value",type:o}),`\n            ${a.registerUniforms(u).declareVariables(s,i)}\n            ${a.mainStart()}\n            ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${i.offsetToIndices("global_idx")};\n\n            var value = ${o}(0);\n            ${l}\n            output[global_idx] = value;\n        }`}}},uo=(e,t)=>{if(e.length>1){let n=e[1].getBigInt64Array(),r=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,a=e[0].dims.length,i=new Int32Array(2*a).fill(0);if(e.length>=4){let t=e[3].getBigInt64Array();for(let e=0;e<t.length;e++)i[Number(t[e])]=Number(n[e]),i[Number(t[e])+a]=Number(n[e+t.length])}else n.forEach(((e,t)=>i[Number(t)]=Number(e)));let s=[];return i.forEach((e=>s.push(e))),{mode:t.mode,value:r,pads:s}}return t},co=(e,t)=>{no(e.inputs);let n=uo(e.inputs,t);e.compute(lo(e.inputs,n),{inputs:[0]})}})),Pu=Re((()=>{it(),Hl(),Jl(),Zl(),po=e=>{if(ae.webgpu.validateInputContent&&(!e||1!==e.length))throw new Error("Pool ops requires 1 input.")},ho=(e,t,n)=>{let r="NHWC"===t.format,a=e.dims.slice();r&&a.splice(1,0,a.pop());let i=Object.hasOwnProperty.call(t,"dilations"),s=t.kernelShape.slice(),o=t.strides.slice(),l=i?t.dilations.slice():[],u=t.pads.slice();gn.adjustPoolAttributes(n,a,s,o,l,u);let d=gn.computePoolOutputShape(n,a,o,l,s,u,t.autoPad),c=Object.assign({},t);i?Object.assign(c,{kernelShape:s,strides:o,pads:u,dilations:l,cacheKey:t.cacheKey}):Object.assign(c,{kernelShape:s,strides:o,pads:u,cacheKey:t.cacheKey});let p=d.slice();return p.push(p.splice(1,1)[0]),[c,r?p:d]},fo=(e,t)=>{let n="NHWC"===t.format,r=[{type:12,data:mn.size(e)},{type:12,data:mn.size(t.kernelShape)}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let e=t.kernelShape[t.kernelShape.length-1],n=t.strides[t.strides.length-1],i=t.pads[t.pads.length/2-1],s=t.pads[t.pads.length-1],o=!!(i+s);r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:s}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let l=!1;if(2===t.kernelShape.length){let e=t.kernelShape[t.kernelShape.length-2],n=t.strides[t.strides.length-2],i=t.pads[t.pads.length/2-2],s=t.pads[t.pads.length-2];l=!!(i+s),r.push({type:12,data:e},{type:12,data:n},{type:12,data:i},{type:12,data:s}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[r,a,!0,o,l]}{if(n)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let e=mn.computeStrides(t.kernelShape);return r.push({type:12,data:e},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:e.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length}),[r,a,!!t.pads.reduce(((e,t)=>e+t)),!1,!1]}},mo=(e,t,n,r,a,i,s,o,l,u,d,c)=>{let p="NHWC"===a.format,h=t.type.value,f=On("output",t.type.tensor,r);if(a.kernelShape.length<=2){let r="",u="",m="",g=n-(p?2:1);if(r=d?`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${g}] < 0 || xIndices[${g}]\n                      >= uniforms.x_shape[${g}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`:`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${g}] = indices[${g}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${i}\n                }`,2===a.kernelShape.length){let e=n-(p?3:2);u=c?`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${e}] < 0 || xIndices[${e}] >= uniforms.x_shape[${e}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${e}] = indices[${e}] * uniforms.sh - uniforms.phStart + j;\n                `,m="\n              }\n            "}return`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var value = ${h}(${o});\n              var pad = 0;\n              ${u}\n              ${r}\n              ${m}\n              ${s}\n\n              output[global_idx] = value;\n            }`}{if(p)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let r=a.kernelShape.length,d=a.pads.length,c="";return c=u?`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${i}\n              }`:`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${i}\n            `,`\n            ${e.registerUniforms(l).declareVariables(t,f)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${f.offsetToIndices("global_idx")};\n              var xIndices = ${f.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${r}>;\n\n              var value = ${h}(${o});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${r-1}u; j++) {\n                  offsets[j] = offset / ${In("uniforms.kernelStrides","j",r)};\n                  offset -= offsets[j] * ${In("uniforms.kernelStrides","j",r)};\n                }\n                offsets[${r-1}] = offset;\n\n                isPad = false;\n                for (var j = ${n-r}u; j < ${n}u; j++) {\n                  xIndices[j] = indices[j] * ${In("uniforms.strides",`j - ${n-r}u`,r)}\n                    + offsets[j - ${n-r}u] - ${In("uniforms.pads","j - 2u",d)};\n                  ${c}\n              }\n              ${s}\n\n              output[global_idx] = value;\n            }`}},go=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,_o=e=>`${go(e)};${e.countIncludePad}`,yo=e=>`${go(e)};${e.storageOrder};${e.dilations}`,wo=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),bo=(e,t,n,r)=>{let[a,i]=ho(t,r,n),s=zn("x",t.dataType,t.dims.length),o=s.type.value,l="";a.countIncludePad?l+=`value /= ${o}(uniforms.kernelSize);`:l+=`value /= ${o}(i32(uniforms.kernelSize) - pad);`;let[u,d,c,p,h]=fo(i,a);return u.push(...kn(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${c};${p};${h}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(mn.size(i)/64)},programUniforms:u}),getShaderSource:e=>mo(e,s,t.dims.length,i.length,a,"value += x_val;",l,0,d,c,p,h)}},vo=e=>{let t=0!==e.count_include_pad,n=wo(e);if(0!==n.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let r={countIncludePad:t,...n,cacheKey:""};return{...r,cacheKey:_o(r)}},$o=(e,t)=>{po(e.inputs),e.compute(bo("AveragePool",e.inputs[0],!1,t))},xo={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},ko=e=>{let t=e.format;return{format:t,...xo,cacheKey:t}},So=(e,t)=>{po(e.inputs),e.compute(bo("GlobalAveragePool",e.inputs[0],!0,t))},Eo=(e,t,n,r)=>{let[a,i]=ho(t,r,n),s=zn("x",t.dataType,t.dims.length),[o,l,u,d,c]=fo(i,a);return o.push(...kn(t.dims,i)),{name:e,shaderCache:{hint:`${r.cacheKey};${u};${d};${c}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:i,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(mn.size(i)/64)},programUniforms:o}),getShaderSource:e=>mo(e,s,t.dims.length,i.length,a,"\n      value = max(x_val, value);\n    ","",10===t.dataType?-65504:-1e5,l,u,d,c)}},Co=(e,t)=>{po(e.inputs),e.compute(Eo("MaxPool",e.inputs[0],!1,t))},Ao=e=>{let t=e.storage_order,n=e.dilations,r=wo(e);if(0!==t)throw new Error("column major storage order is not yet supported for MaxPool");if(0!==r.ceilMode)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let a={storageOrder:t,dilations:n,...r,cacheKey:""};return{...a,cacheKey:yo(a)}},Io=e=>{let t=e.format;return{format:t,...xo,cacheKey:t}},To=(e,t)=>{po(e.inputs),e.compute(Eo("GlobalMaxPool",e.inputs[0],!0,t))}})),Bu=Re((()=>{it(),Hl(),Zl(),zo=(e,t,n)=>{if(e===t||e<t&&n<0||e>t&&n>0)throw new Error("Range these inputs' contents are invalid.")},Oo=(e,t,n,r)=>{let a=Math.abs(Math.ceil((t-e)/n)),i=[a],s=a,o=[{type:12,data:s},{type:r,data:e},{type:r,data:n},...kn(i)];return{name:"Range",shaderCache:{hint:`${r}`},getShaderSource:e=>{let t=On("output",r,i.length),n=t.type.value,a=[{name:"outputSize",type:"u32"},{name:"start",type:n},{name:"delta",type:n}];return`\n        ${e.registerUniforms(a).declareVariables(t)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${n}(global_idx) * uniforms.delta;\n      }`},getRunData:()=>({outputs:[{dims:i,dataType:r}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:o})}},Mo=e=>{let t=0,n=0,r=0;6===e.inputs[0].dataType?(t=e.inputs[0].getInt32Array()[0],n=e.inputs[1].getInt32Array()[0],r=e.inputs[2].getInt32Array()[0]):1===e.inputs[0].dataType&&(t=e.inputs[0].getFloat32Array()[0],n=e.inputs[1].getFloat32Array()[0],r=e.inputs[2].getFloat32Array()[0]),ae.webgpu.validateInputContent&&zo(t,n,r),e.compute(Oo(t,n,r,e.inputs[0].dataType),{inputs:[]})}})),Du=Re((()=>{Hl(),Jl(),Ql(),Zl(),Ro=(e,t)=>{if(e.every((e=>e>0||(()=>{throw new Error("Resize requires scales input values to be positive")}))),e.length>0)if("linear"===t.mode){if(!(2===e.length||3===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]||5===e.length&&1===e[0]&&1===e[1]))throw new Error("For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1")}else if("cubic"===t.mode&&!(2===e.length||4===e.length&&1===e[0]&&1===e[1]||4===e.length&&1===e[0]&&1===e[3]))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")},Po=(e,t,n)=>{t.every((e=>e>=0&&e<n||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")})));let r=new Array(n).fill(1);return t.forEach(((t,n)=>r[t]=e[n])),r},Bo=(e,t,n,r,a,i)=>{let[s,o,l]=n>10?[1,2,3]:[-1,e.length>1?1:-1,-1],u=e[0].dims.length;if(s>0&&e.length>s&&e[s].dims.length>0)e[s].getFloat32Array().forEach((e=>i.push(e)));else if("tf_crop_and_resize"===t.coordinateTransformMode)throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(o>0&&e.length>o&&e[o].dims.length>0){if(e[o].getFloat32Array().forEach((e=>r.push(e))),0!==r.length&&r.length!==u&&n>=18&&r.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ro(r,t),t.axes.length>0&&Po(r,t.axes,u).forEach(((e,t)=>r[t]=e))}if(l>0&&e.length>l&&(e[l].getBigInt64Array().forEach((e=>a.push(Number(e)))),a.length!==u||n>=18&&a.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(r.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(a.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof r<"u"&&typeof a<"u"&&r.length>0&&a.length>u)throw new Error("Resize requires only of scales or sizes to be specified")},Do=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",No=(e,t,n)=>`fn getNearestPixelFromOriginal(xOriginal: ${n}, isDownSample: bool) -> ${n} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Uo=(e,t,n)=>{let r=new Array(n).fill(0).concat(new Array(n).fill(1)),a=0===e.length?r:e.slice();return t.length>0?(t.forEach(((e,i)=>{r[e]=a[i],r[i+n]=a[t.length+i]})),r):a},Wo=(e,t,n,r)=>{let a=[];if(n.length>0)if(r.length>0){if(e.forEach((e=>a.push(e))),Math.max(...r)>e.length)throw new Error("axes is out of bound");r.forEach(((e,t)=>a[e]=n[t]))}else n.forEach((e=>a.push(e)));else{if(0===t.length)throw new Error("Resize requires either scales or sizes.");a=e.map(((e,n)=>Math.round(e*t[n])))}return a},Fo=(e,t,n)=>{let r=(()=>{switch(n.keepAspectRatioPolicy){case"not_larger":return n.axes.length>0?Math.min(...n.axes.map((e=>t[e])),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return n.axes.length>0?Math.max(...n.axes.map((e=>t[e])),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${n.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let a=e.slice();return n.axes.length>0?(n.axes.forEach((e=>t[e]=r)),n.axes.forEach((n=>a[n]=Math.round(e[n]*t[n])))):(t.fill(r,0,t.length),a.forEach(((e,n)=>a[n]=Math.round(e*t[n])))),a},Lo=(e,t,n,r,a)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${n.length}> {\n      var original_indices: array<${e.type.value}, ${n.length}>;\n      for (var i:u32 = 0; i < ${n.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${In("uniforms.scales","i",r)};\n        var roi_low = ${In("uniforms.roi","i",a)};\n        var roi_hi = ${In("uniforms.roi",`i + ${t.length}`,a)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${In("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${In("uniforms.output_shape","i",n.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Vo=(e,t,n,r,a,i,s)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${In("uniforms.scales","i",a)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${In("uniforms.roi","i",i)};\n          var roi_hi = ${In("uniforms.roi",`i + ${n.length}`,i)};\n          var input_shape_i = ${In("uniforms.input_shape","i",n.length)};\n          var output_shape_i = ${In("uniforms.output_shape","i",r.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${s} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Go=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${In("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Ho=(e,t,n,r)=>e.rank>r?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",n,"batch")};\n`:"",qo=(e,t,n,r,a)=>{let[i,s,o,l]=2===n.length?[-1,0,1,-1]:[0,2,3,1],u=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${u} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",s,`max(0, min(row, ${n[s]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(col, ${n[o]} - 1))`)};\n      ${Ho(e,l,i,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${u} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${u} = originalIndices[${s}];\n      var col:${u} = originalIndices[${o}];\n      ${r?`if (row < 0 || row > (${n[s]} - 1) || col < 0 || col > (${n[o]} - 1)) {\n        return ${a};\n      }`:""};\n      row = max(0, min(row, ${n[s]} - 1));\n      col = max(0, min(col, ${n[o]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${n.length>2?`u32(originalIndices[${l}])`:"0"};\n      var batch: u32 =  ${n.length>2?`u32(originalIndices[${i}])`:"0"};\n      var x11: ${u} = getInputValue(batch, channel, row1, col1);\n      var x12: ${u} = getInputValue(batch, channel, row1, col2);\n      var x21: ${u} = getInputValue(batch, channel, row2, col1);\n      var x22: ${u} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${u} = abs(row - ${u}(row1));\n      var dx2: ${u} = abs(${u}(row2) - row);\n      var dy1: ${u} = abs(col - ${u}(col1));\n      var dy2: ${u} = abs(${u}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},jo=(e,t,n,r,a,i,s,o,l,u)=>{let d=2===n.length,[c,p]=d?[0,1]:[2,3],h=e.type.value,f=s=>{let d=s===c?"row":"col";return`\n      fn ${d}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${h} {\n        var output_index = ${t.indicesGet("output_indices",s)};\n        var originalIdx: ${h} = getOriginalCoordinateFromResizedCoordinate(output_index, ${a[s]},\n        ${r[s]}, ${n[s]}, ${i[s]}, ${i[s]} + ${n.length});\n        var fractOriginalIdx: ${h} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${o} && (originalIdx < 0 || originalIdx > (${n[s]} - 1))) {\n          return ${l};\n        }\n        var data: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${d}: ${h} = originalIdx + ${h}(i);\n          if (${d} < 0 || ${d} >= ${n[s]}) {\n            ${u?"coefs[i + 1] = 0.0;\n                        continue;":o?`return ${l};`:`${d} = max(0, min(${d}, ${n[s]} - 1));`};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",s,`u32(${d})`)};\n          data[i + 1] = ${s===c?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${f(c)};\n    ${f(p)};\n  fn getCubicInterpolationCoefs(s: ${h}) -> array<${h}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${h}, 4> = array<${h}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${h} = 1.0 - absS;\n    var twoMinusAbsS: ${h} = 2.0 - absS;\n    var onePlusAbsS: ${h} = 1.0 + absS;\n    coeffs[0] = ((${s} * onePlusAbsS - 5 * ${s}) * onePlusAbsS + 8 * ${s}) * onePlusAbsS - 4 * ${s};\n    coeffs[1] = ((${s} + 2) * absS - (${s} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${s} + 2) * oneMinusAbsS - (${s} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${s} * twoMinusAbsS - 5 * ${s}) * twoMinusAbsS + 8 * ${s}) * twoMinusAbsS - 4 * ${s};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${h}, 4>, coefs: array<${h}, 4>) -> ${h} {\n    var coefsSum: ${h} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${h} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Ko=(e,t,n,r,a)=>{let[i,s,o,l,u]=3===n.length?[-1,0,1,2,-1]:[0,2,3,4,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",s,`max(0, min(depth, ${n[s]} - 1))`)};\n      ${e.indicesSet("input_indices",o,`max(0, min(height, ${n[o]} - 1))`)};\n      ${e.indicesSet("input_indices",l,`max(0, min(width, ${n[l]} - 1))`)};\n      ${Ho(e,u,i,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${d} = originalIndices[${s}];\n      var height:${d} = originalIndices[${o}];\n      var width:${d} = originalIndices[${l}];\n      ${r?`if (depth < 0 || depth > (${n[s]} - 1) || height < 0 || height > (${n[o]} - 1) || width < 0 || (width > ${n[l]} - 1)) {\n      return ${a};\n        }`:""};\n\n    depth = max(0, min(depth, ${n[s]} - 1));\n      height = max(0, min(height, ${n[o]} - 1));\n      width = max(0, min(width, ${n[l]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${n.length>3?`u32(originalIndices[${u}])`:"0"};\n      var batch: u32 =  ${n.length>3?`u32(originalIndices[${i}])`:"0"};\n\n      var x111: ${d} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${d} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${d} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${d} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${d} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${d} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${d} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${d} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${d} = abs(depth - ${d}(depth1));\n      var dx2: ${d} = abs(${d}(depth2) - depth);\n      var dy1: ${d} = abs(height - ${d}(height1));\n      var dy2: ${d} = abs(${d}(height2) - height);\n      var dz1: ${d} = abs(width - ${d}(width1));\n      var dz2: ${d} = abs(${d}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Yo=(e,t,n,r,a,i)=>{let s=e.dims,o=Uo(i,t.axes,s.length),l=Wo(s,r,a,t.axes),u=r.slice();0===r.length&&(u=s.map(((e,t)=>0===e?1:l[t]/e)),"stretch"!==t.keepAspectRatioPolicy&&(l=Fo(s,u,t)));let d=On("output",e.dataType,l.length),c=zn("input",e.dataType,s.length),p=mn.size(l),h=s.length===l.length&&s.every(((e,t)=>e===l[t])),f="tf_crop_and_resize"===t.coordinateTransformMode,m=t.extrapolationValue,g=c.type.value;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${n}|${u.length>0?u:""}|${a.length>0?a:""}|${o.length>0?o:""}|${h}|${s}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${h?"":`\n      ${Do(t.coordinateTransformMode,g)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Go(c,s)};\n              ${No(t.nearestMode,n,g)};\n              ${Vo(c,d,s,l,u.length,o.length,f)};\n              `;case"linear":return`\n              ${Lo(d,s,l,u.length,o.length)};\n              ${(()=>{if(2===s.length||4===s.length)return`${qo(c,d,s,f,m)}`;if(3===s.length||5===s.length)return`${Ko(c,d,s,f,m)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(2===s.length||4===s.length)return`${jo(c,d,s,l,u,o,t.cubicCoeffA,f,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${e.registerUniform("output_size","u32").registerUniform("scales","f32",u.length).registerUniform("roi","f32",o.length).declareVariables(c,d)}\n      ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${h?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${c.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${c.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${2===s.length||4===s.length?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},{type:1,data:u},{type:1,data:o},...kn(s,l)]})}},Xo=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Qo=(e,t)=>{let n=[],r=[],a=[],i=Xo(e);if(0!==t.antialias)throw Error("Only default value (0) for Antialias attribute is supported");Bo(e.inputs,t,i,n,r,a),e.compute(Yo(e.inputs[0],t,i,n,r,a),{inputs:[0]})},Jo=e=>{let t=e.antialias,n=e.axes,r=e.coordinateTransformMode,a=e.cubicCoeffA,i=0!==e.excludeOutside,s=e.extrapolationValue,o=e.keepAspectRatioPolicy,l=e.mode,u=""===e.nearestMode?"simple":e.nearestMode;return pn({antialias:t,axes:n,coordinateTransformMode:r,cubicCoeffA:a,excludeOutside:i,extrapolationValue:s,keepAspectRatioPolicy:o,mode:l,nearestMode:u})}})),Nu=Re((()=>{Hl(),Jl(),Ql(),Zl(),Zo=(e,t)=>{let[n,r,a,i]=e,{numHeads:s,rotaryEmbeddingDim:o}=t;if(3!==n.dims.length&&4!==n.dims.length)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${n.dims.length}`);if(!mn.areEqual(r.dims,[])&&!mn.areEqual(r.dims,[1])&&2!==r.dims.length)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${r.dims.length}`);if(2!==a.dims.length)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${a.dims.length}`);if(2!==i.dims.length)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!mn.areEqual(a.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(o>0&&0===s)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=n.dims[0],u=n.dims[n.dims.length-2],d=a.dims[0],c=mn.sizeFromDimension(n.dims,1)/u,p=0===o?2*a.dims[1]:c/s;if(o>p)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(2===r.dims.length){if(l!==r.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${r.dims[0]}`);if(u!==r.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${r.dims[1]}`)}if(p/2!==a.dims[1]&&o/2!==a.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${a.dims[1]}`);if(u>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},el=(e,t)=>{let{interleaved:n,numHeads:r,rotaryEmbeddingDim:a,scale:i}=t,s=e[0].dims[0],o=mn.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],u=o/l,d=e[2].dims[1],c=0===a?2*d:u/r,p=new Array(s,l,u/c,c-d),h=mn.computeStrides(p),f=[{type:1,data:i},{type:12,data:p},{type:12,data:h},...3===e[0].dims.length?new Array({type:12,data:[o,u,c,1]}):[],...4===e[0].dims.length?new Array({type:12,data:[o,c,l*c,1]}):[],...kn(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)];return{name:"RotaryEmbedding",shaderCache:{hint:pn({interleaved:n}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:t=>{let r=zn("input",e[0].dataType,e[0].dims.length),a=zn("position_ids",e[1].dataType,e[1].dims.length),i=zn("cos_cache",e[2].dataType,e[2].dims.length),s=zn("sin_cache",e[3].dataType,e[3].dims.length),o=On("output",e[0].dataType,e[0].dims.length);return t.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:p.length},{name:"global_strides",type:"u32",length:h.length},{name:"input_output_strides",type:"u32",length:h.length}]),`\n        ${t.declareVariables(r,a,i,s,o)}\n\n        ${t.mainStart(bn)}\n          let half_rotary_emb_dim = uniforms.${i.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${t.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${a.broadcastedIndicesToOffset("bsnh.xy",On("",a.type.tensor,2))};\n            let position_id =\n                u32(${a.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${n});\n            let j = i + select(half_rotary_emb_dim, 1, ${n});\n            let re = ${r.getByOffset("i")} * ${i.get("position_id","bsnh[3]")} -\n                ${r.getByOffset("j")} * ${s.get("position_id","bsnh[3]")};\n            ${o.setByOffset("i","re")}\n            let im = ${r.getByOffset("i")} * ${s.get("position_id","bsnh[3]")} +\n                ${r.getByOffset("j")} * ${i.get("position_id","bsnh[3]")};\n            ${o.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${o.setByOffset("k",r.getByOffset("k"))}\n          }\n        }`},getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(mn.size(p)/bn)},programUniforms:f})}},tl=(e,t)=>{Zo(e.inputs,t),e.compute(el(e.inputs,t))}})),Uu=Re((()=>{Hl(),Jl(),Zl(),nl=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],n=e[1],r=e[2];if(t.dataType!==n.dataType||t.dataType!==r.dataType)throw new Error("All inputs must have the same data type");if(3!==t.dims.length&&2!==t.dims.length)throw new Error("Input must be 2D or 3D");if(3!==n.dims.length&&2!==n.dims.length)throw new Error("Skip must be 2D or 3D");let a=t.dims[t.dims.length-1],i=t.dims[t.dims.length-2];if(n.dims[n.dims.length-1]!==a)throw new Error("Skip must have the same hidden size as input");if(n.dims[n.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(1!==r.dims.length)throw new Error("Gamma must be 1D");if(r.dims[r.dims.length-1]!==a)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let t=e[3];if(1!==t.dims.length)throw new Error("Beta must be 1D");if(t.dims[t.dims.length-1]!==a)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let t=e[4];if(1!==t.dims.length)throw new Error("Bias must be 1D");if(t.dims[t.dims.length-1]!==a)throw new Error("Bias must have the same hidden size as input")}},rl=(e,t,n,r)=>{let a=t.simplified,i=e[0].dims,s=mn.size(i),o=i,l=s,u=i.slice(-1)[0],d=r?i.slice(0,-1).concat(1):[],c=!a&&e.length>3,p=e.length>4,h=r&&n>1,f=r&&n>2,m=n>3,g=Sn(u),_=[{type:12,data:l},{type:12,data:g},{type:12,data:u},{type:1,data:t.epsilon}],y=[{dims:o,dataType:e[0].dataType}];return n>1&&y.push({dims:d,dataType:1}),n>2&&y.push({dims:d,dataType:1}),n>3&&y.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${g};${h};${f};${m}`,inputDependencies:e.map(((e,t)=>"type"))},getShaderSource:t=>{let n=[zn("x",e[0].dataType,e[0].dims,g),zn("skip",e[1].dataType,e[1].dims,g),zn("gamma",e[2].dataType,e[2].dims,g)];c&&n.push(zn("beta",e[3].dataType,e[3].dims,g)),p&&n.push(zn("bias",e[4].dataType,e[4].dims,g)),n.push(On("output",e[0].dataType,o,g)),h&&n.push(On("mean_output",1,d)),f&&n.push(On("inv_std_output",1,d)),m&&n.push(On("input_skip_bias_sum",e[0].dataType,o,g));let r=$n(e[0].dataType);return`\n\n      ${t.registerUniforms([{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}]).declareVariables(...n)}\n\n      ${t.mainStart()}\n        ${t.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${En("f32",g)};\n        var squareSum = ${En("f32",g)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${p?"bias[i]":r+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${m?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Cn(r,g,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${An("sum",g)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${An("squareSum",g)} / f32(uniforms.hidden_size) ${a?"":"- mean * mean"} + uniforms.epsilon);\n        ${h?"mean_output[global_idx] = mean;":""}\n        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] ${a?"":`- ${r}(mean)`}) * ${r}(inv_std_dev) * gamma[i] ${c?"+ beta[i]":""};\n        }\n      }`},getRunData:()=>({outputs:y,dispatchGroup:{x:Math.ceil(l/u/64)},programUniforms:_})}},al=(e,t)=>{nl(e.inputs);let n=[0];e.outputCount>1&&n.push(-3),e.outputCount>2&&n.push(-3),e.outputCount>3&&n.push(3),e.compute(rl(e.inputs,t,e.outputCount,!1),{outputs:n})}})),Wu=Re((()=>{Hl(),Jl(),Ql(),Zl(),il=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(0!==t.axes.length){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach(((t,n)=>{if(6!==e[n+1].dataType&&7!==e[n+1].dataType)throw new Error(`Input ${n} must be an array of int32 or int64`)}))},sl=(e,t)=>{let n=[];if(e.length>t)if(7===e[t].dataType)e[t].getBigInt64Array().forEach((e=>n.push(Number(e))));else{if(6!==e[t].dataType)throw new Error(`Input ${t} must be an array of int32 or int64`);e[t].getInt32Array().forEach((e=>n.push(Number(e))))}return n},ol=(e,t)=>{if(e.length>1){let t=sl(e,1),n=sl(e,2),r=sl(e,3);return 0===r.length&&(r=[...Array(e[0].dims.length).keys()]),pn({starts:t,ends:n,axes:r})}return t},ll=(e,t,n,r,a)=>{let i=e;return e<0&&(i+=n[r[t]]),a[t]<0?Math.max(0,Math.min(i,n[r[t]]-1)):Math.max(0,Math.min(i,n[r[t]]))},ul=(e,t,n)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${n.length}; i >= 0; i--) {\n            let input_shape_i = ${In("uniforms.input_shape","i",n.length)};\n            let steps_i = ${In("uniforms.steps","i",n.length)};\n            let signs_i = ${In("uniforms.signs","i",n.length)};\n            let starts_i = ${In("uniforms.starts","i",n.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,dl=(e,t)=>{let n=e[0].dims,r=mn.size(n),a=t.axes.length>0?mn.normalizeAxes(t.axes,n.length):[...Array(n.length).keys()],i=sl(e,4);i.forEach((e=>0!==e||(()=>{throw new Error("step cannot be 0")}))),0===i.length&&(i=Array(a.length).fill(1));let s=t.starts.map(((e,t)=>ll(e,t,n,a,i))),o=t.ends.map(((e,t)=>ll(e,t,n,a,i)));if(a.length!==s.length||a.length!==o.length)throw new Error("start, ends and axes should have the same number of elements");if(a.length!==n.length)for(let e=0;e<n.length;++e)a.includes(e)||(s.splice(e,0,0),o.splice(e,0,n[e]),i.splice(e,0,1));let l=i.map((e=>Math.sign(e)));i.forEach(((e,t,n)=>{if(e<0){let r=(o[t]-s[t])/e,a=s[t],l=a+r*i[t];s[t]=l,o[t]=a,n[t]=-e}}));let u=n.slice(0);a.forEach(((e,t)=>{u[e]=Math.ceil((o[e]-s[e])/i[e])}));let d={dims:u,dataType:e[0].dataType},c=On("output",e[0].dataType,u.length),p=zn("input",e[0].dataType,e[0].dims.length),h=mn.size(u),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:s.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],m=[{type:12,data:h},{type:12,data:s},{type:6,data:l},{type:12,data:i},...kn(e[0].dims,u)];return{name:"Slice",shaderCache:{hint:`${l.length}_${s.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:e=>`\n      ${e.registerUniforms(f).declareVariables(p,c)}\n        ${ul(p,c,n)}\n        ${e.mainStart()}\n          ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${c.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${c.setByOffset("global_idx",p.getByIndices("input_indices"))}\n      }`,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(r/64)},programUniforms:m})}},cl=(e,t)=>{il(e.inputs,t);let n=ol(e.inputs,t);e.compute(dl(e.inputs,n),{inputs:[0]})},pl=e=>{let t=e.starts,n=e.ends,r=e.axes;return pn({starts:t,ends:n,axes:r})}})),Fu=Re((()=>{Hl(),Jl(),Ql(),Zl(),hl=e=>{if(!e||1!==e.length)throw new Error("Softmax op requires 1 input.")},fl=(e,t)=>{let n=e.dims,r=mn.size(n),a=t.axis;if(a<0&&(a=n.length+a),a<n.length-1)throw new Error("softmax only supports last axis for now.");let i=n[a],s=r/i,o=Sn(i),l=i/o,u=zn("x",e.dataType,e.dims,o),d=On("result",e.dataType,e.dims,o),c=u.type.value,p="f32"===$n(e.dataType)?`var threadMax = ${c}(-3.402823e+38f);`:`var threadMax = ${c}(-65504.0h);`;return{name:"Softmax",shaderCache:{hint:`${o}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:n,dataType:e.dataType}],dispatchGroup:{x:s},programUniforms:[{type:6,data:l}]}),getShaderSource:e=>`\n      var<workgroup> rowMaxShared : ${c};\n      var<workgroup> rowSumShared : ${c};\n      var<workgroup> threadShared : array<${c}, 64>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${c} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${c}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${e.registerUniform("packedCols","i32").declareVariables(u,d)}\n      ${e.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = 64;\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${p}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${c}(${((e,t)=>4===t?`max(max(${e}.x, ${e}.y), max(${e}.z, ${e}.w))`:2===t?`max(${e}.x, ${e}.y)`:3===t?`max(max(${e}.x, ${e}.y), ${e}.z)`:e)("threadShared[0]",o)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${c}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${c}(${An("threadShared[0]",o)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`}},ml=(e,t)=>{hl(e.inputs),e.compute(fl(e.inputs[0],t))},gl=e=>pn({axis:e.axis})})),Lu=Re((()=>{Hl(),Jl(),Ql(),Zl(),_l=e=>{if(!e||e.length<1)throw new Error("too few inputs")},yl=(e,t)=>{let n=[],r=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach((e=>n.push(Number(e)))),r=n.length),pn({numOutputs:r,axis:t.axis,splitSizes:n})},wl=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${In("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,bl=e=>{let t=e.length,n=[];for(let r=0;r<t;++r){let a=e[r].setByIndices("indices","input[global_idx]");1===t?n.push(a):0===r?n.push(`if (output_number == ${r}u) { ${a} }`):r===t-1?n.push(`else { ${a} }`):n.push(`else if (output_number == ${r}) { ${a} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${n.join("\n")}\n      }`},vl=(e,t)=>{let n=e[0].dims,r=mn.size(n),a=e[0].dataType,i=mn.normalizeAxis(t.axis,n.length),s=new Array(t.numOutputs),o=zn("input",a,n.length),l=new Array(t.numOutputs),u=[],d=[],c=0,p=[{type:12,data:r}];for(let r=0;r<t.numOutputs;r++){c+=t.splitSizes[r],l[r]=c;let i=n.slice();i[t.axis]=t.splitSizes[r],d.push(i),s[r]=On(`output${r}`,a,i.length),u.push({dims:d[r],dataType:e[0].dataType})}return p.push({type:12,data:l},...kn(n,...d)),{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:e=>`\n  ${e.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(o,...s)}\n  ${wl(l.length)}\n  ${bl(s)}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${o.offsetToIndices("global_idx")};\n    var index = ${o.indicesGet("indices",i)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${In("uniforms.size_in_split_axis","output_number - 1u",l.length)};\n      ${o.indicesSet("indices",i,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`,getRunData:()=>({outputs:u,dispatchGroup:{x:Math.ceil(r/64)},programUniforms:p})}},$l=(e,t)=>{_l(e.inputs);let n=1===e.inputs.length?t:yl(e.inputs,t);e.compute(vl(e.inputs,n),{inputs:[0]})},xl=e=>{let t=e.axis,n=e.splitSizes,r=e.numOutputs<0?n.length:e.numOutputs;if(r!==n.length)throw new Error("numOutputs and splitSizes lengh must be equal");return pn({axis:t,numOutputs:r,splitSizes:n})}})),Vu=Re((()=>{Hl(),Jl(),Zl(),kl=e=>Array.from(e.getBigInt64Array(),Number),Sl=e=>{if(!e||2!==e.length)throw new Error("Tile requires 2 inputs.");if(1!==e[0].dataType&&6!==e[0].dataType&&12!==e[0].dataType)throw new Error("Tile only support float, int32, and uint32 data types");if(7!==e[1].dataType)throw new Error("Tile `repeats` input should be of int64 data type");if(1!==e[1].dims.length)throw new Error("Tile `repeats` input should be 1-D");if(kl(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},El=(e,t)=>{let n=[];for(let r=0;r<e.length;++r)n.push(e[r]*t[r]);return n},Cl=e=>{let t=e[0].dims,n=kl(e[1]),r=El(t,n),a=mn.size(r),i=e[0].dataType,s=zn("input",i,t.length),o=On("output",i,r.length);return{name:"Tile",shaderCache:{hint:`${n}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:[{type:12,data:a},...kn(e[0].dims,r)]}),getShaderSource:e=>`\n      const inputShape = ${s.indices(...t)};\n      ${e.registerUniform("output_size","u32").declareVariables(s,o)}\n      ${e.mainStart()}\n      ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${o.offsetToIndices("global_idx")};\n      var input_indices: ${s.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${s.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${o.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${s.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${o.setByOffset("global_idx",s.getByIndices("input_indices"))}\n    }`}},Al=e=>{Sl(e.inputs),e.compute(Cl(e.inputs),{inputs:[0]})}})),Gu=Re((()=>{Hl(),Jl(),Zl(),Il=(e,t,n,r,a)=>{let i,s=On("output_data",a,n.length,4),o=zn("a_data",t[1].dataType,t[1].dims.length,4),l=zn("b_data",t[2].dataType,t[2].dims.length,4),u=zn("c_data",t[0].dataType,t[0].dims.length,4),d=(e,t,n)=>`select(${t}, ${e}, ${n})`;if(r){let e=(e,t,n="")=>{let r=`a_data[index_a${t}][component_a${t}]`,a=`b_data[index_b${t}][component_b${t}]`,i=`bool(c_data[index_c${t}] & (0xffu << (component_c${t} * 8)))`;return`\n            let output_indices${t} = ${s.offsetToIndices(`global_idx * 4u + ${t}u`)};\n            let offset_a${t} = ${o.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let offset_b${t} = ${l.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let offset_c${t} = ${u.broadcastedIndicesToOffset(`output_indices${t}`,s)};\n            let index_a${t} = offset_a${t} / 4u;\n            let index_b${t} = offset_b${t} / 4u;\n            let index_c${t} = offset_c${t} / 4u;\n            let component_a${t} = offset_a${t} % 4u;\n            let component_b${t} = offset_b${t} % 4u;\n            let component_c${t} = offset_c${t} % 4u;\n            ${e}[${t}] = ${n}(${d(r,a,i)});\n          `};i=9===a?`\n            var data = vec4<u32>(0);\n            ${e("data",0,"u32")}\n            ${e("data",1,"u32")}\n            ${e("data",2,"u32")}\n            ${e("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:`\n            ${e("output_data[global_idx]",0)}\n            ${e("output_data[global_idx]",1)}\n            ${e("output_data[global_idx]",2)}\n            ${e("output_data[global_idx]",3)}\n          `}else i=s.setByOffset("global_idx",d(o.getByOffset("global_idx"),l.getByOffset("global_idx"),u.getByOffset("global_idx")));return`\n        ${e.registerUniform("vec_size","u32").declareVariables(u,o,l,s)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${i}\n      }`},Tl=e=>{let t=e[1].dims,n=e[2].dims,r=e[0].dims,a=e[1].dataType,i=!(mn.areEqual(t,n)&&mn.areEqual(n,r)),s=t,o=mn.size(t);if(i){let e=fn.calcShape(fn.calcShape(t,n,!1),r,!1);if(!e)throw new Error("Can't perform where op on the given tensors");s=e,o=mn.size(s)}let l=Math.ceil(o/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:t=>Il(t,e,s,i,a),getRunData:()=>({outputs:[{dims:s,dataType:a}],dispatchGroup:{x:Math.ceil(o/64/4)},programUniforms:[{type:12,data:l},...kn(r,t,n,s)]})}},zl=e=>{e.compute(Tl(e.inputs))}})),Hu=Re((()=>{ru(),iu(),su(),ou(),uu(),du(),au(),yu(),vu(),$u(),xu(),ku(),Su(),Eu(),Cu(),Au(),Iu(),Tu(),zu(),_u(),Ou(),Mu(),Ru(),Pu(),Bu(),nu(),Du(),Nu(),Uu(),Wu(),Fu(),Lu(),Vu(),eu(),lu(),Gu(),Ol=new Map([["Abs",[ua]],["Acos",[da]],["Acosh",[ca]],["Add",[ti]],["ArgMax",[Ur,Wr]],["ArgMin",[Nr,Wr]],["Asin",[pa]],["Asinh",[ha]],["Atan",[fa]],["Atanh",[ma]],["Attention",[Zr]],["AveragePool",[$o,vo]],["BatchNormalization",[ra]],["BiasAdd",[sa]],["BiasSplitGelu",[Qa]],["Cast",[_a,ga]],["Ceil",[ba]],["Clip",[wa]],["Concat",[Hr,qr]],["Conv",[Wi,Di]],["ConvTranspose",[es,Yi]],["Cos",[va]],["Cosh",[$a]],["CumSum",[ns,rs]],["DepthToSpace",[os,ls]],["Div",[ni]],["Einsum",[_s,ys]],["Elu",[ka,xa]],["Equal",[ri]],["Erf",[Ea]],["Exp",[Ca]],["Expand",[xs]],["FastGelu",[Ss]],["Floor",[Aa]],["FusedConv",[Wi,Di]],["Gather",[Is,As]],["GatherElements",[Ms,Os]],["Gelu",[Ia]],["Gemm",[Ds,Bs]],["GlobalAveragePool",[So,ko]],["GlobalMaxPool",[To,Io]],["Greater",[oi]],["GreaterOrEqual",[ui]],["HardSigmoid",[Da,Ba]],["InstanceNormalization",[Fs]],["LayerNormalization",[Gs]],["LeakyRelu",[Ta,xa]],["Less",[li]],["LessOrEqual",[di]],["Log",[Ka]],["MatMul",[Oi]],["MatMulNBits",[js,Ks]],["MaxPool",[Co,Ao]],["Mul",[ai]],["MultiHeadAttention",[to,Qs]],["Neg",[Oa]],["Not",[za]],["Pad",[co]],["Pow",[ii]],["Range",[Mo]],["Reciprocal",[Ma]],["ReduceMin",[Or]],["ReduceMean",[Cr]],["ReduceMax",[zr]],["ReduceSum",[Rr]],["ReduceProd",[Mr]],["ReduceL1",[Ar]],["ReduceL2",[Ir]],["ReduceLogSum",[Br]],["ReduceLogSumExp",[Tr]],["ReduceSumSquare",[Pr]],["Relu",[Ra]],["Resize",[Qo,Jo]],["RotaryEmbedding",[tl]],["Sigmoid",[Pa]],["Sin",[Na]],["Sinh",[Ua]],["Slice",[cl,pl]],["SkipLayerNormalization",[al]],["Split",[$l,xl]],["Sqrt",[Wa]],["Softmax",[ml,gl]],["Sub",[si]],["Tan",[Fa]],["Tanh",[Va]],["ThresholdedRelu",[ja,xa]],["Tile",[Al]],["Transpose",[Ln,Vn]],["Where",[zl]]])})),qu=Re((()=>{it(),jl(),Zl(),Ml=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,t){this.repo.set(e,t)}run(e,t,n,r,a){$e(e.programInfo.name);let i=this.backend.device,s=this.backend.getComputePassEncoder();this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber);let o=[];for(let e of t)o.push({binding:o.length,resource:{buffer:e.buffer}});for(let e of n)o.push({binding:o.length,resource:{buffer:e.buffer}});a&&o.push({binding:o.length,resource:a});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:o,label:e.programInfo.name});if("capturing"===this.backend.sessionStatus){let t={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:r};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(t)}s.setPipeline(e.computePipeline),s.setBindGroup(0,l),s.dispatchWorkgroups(...r),this.backend.writeTimestamp(2*this.backend.pendingDispatchNumber+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||"at-passes"===this.backend.queryType)&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),xe(e.programInfo.name)}dispose(){}build(e,t){$e(e.name);let n=this.backend.device,r=[];n.features.has("shader-f16")&&r.push("enable f16;");let a=Pn(t,this.backend.device.limits),i=e.getShaderSource(a),s=`${r.join("\n")}\n${a.additionalImplementations}\n${i}`,o=n.createShaderModule({code:s,label:e.name});Zt("verbose",(()=>`[WebGPU] ${e.name} shader code: ${s}`));let l=n.createComputePipeline({compute:{module:o,entryPoint:"main"},layout:"auto",label:e.name});return xe(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:a.variablesInfo}}normalizeDispatchGroupSize(e){let t="number"==typeof e?e:e.x,n="number"==typeof e?1:e.y||1,r="number"==typeof e?1:e.z||1,a=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=a&&n<=a&&r<=a)return[t,n,r];let i=t*n*r,s=Math.ceil(Math.sqrt(i));if(s>a){if(s=Math.ceil(Math.cbrt(i)),s>a)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[s,s,s]}return[s,s,1]}}})),ju=Re((()=>{it(),Hl(),jl(),Kl(),Xl(),Hu(),qu(),Rl=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let n=[];for(let r=0;r<e.length;++r){let a=e[r].dataType;switch(t[r]){case"none":n.push("");break;case"type":n.push(`${a}`);break;case"rank":{let t=e[r].dims.length;n.push(`${a};${t}`);break}case"dims":{let t=e[r].dims.join(",");n.push(`${a};${t}`);break}default:throw new Error(`unsupported input dependency: ${t[r]}`)}}return n.join("|")},Pl=(e,t,n)=>{let r=e.name;return e.shaderCache?.hint&&(r+="["+e.shaderCache.hint+"]"),r+=":"+n+`:${Rl(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,r},Bl=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},Dl=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(null===this.currentKernelId)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,t){this.env=e;let n=[],r={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:n};t.features.has("chromium-experimental-timestamp-query-inside-passes")?n.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("shader-f16")&&n.push("shader-f16"),this.device=await t.requestDevice(r),this.adapterInfo=new Bl(await t.requestAdapterInfo()),this.gpuDataManager=dn(this),this.programManager=new Ml(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Qt(e.logLevel,!!e.debug),this.device.onuncapturederror=e=>{e.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${e.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),t={};"at-passes"===this.queryType&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:2*this.pendingDispatchNumber,endOfPassWriteIndex:2*this.pendingDispatchNumber+1}),this.computePassEncoder=e.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;let e;$e(),this.endComputePass(),"none"!==this.queryType&&(this.commandEncoder.resolveQuerySet(this.querySet,0,2*this.pendingDispatchNumber,this.queryResolveBuffer,0),e=this.device.createBuffer({size:2*this.pendingDispatchNumber*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,2*this.pendingDispatchNumber*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,"none"!==this.queryType&&e.mapAsync(GPUMapMode.READ).then((()=>{let t=new BigUint64Array(e.getMappedRange()),n=this.pendingQueries.get(e);for(let e=0;e<t.length/2;e++){let r=n[e],a=r.kernelId,i=this.kernels.get(a),s=i.kernelType,o=i.kernelName,l=r.programName,u=r.inputTensorViews,d=r.outputTensorViews,c=t[2*e],p=t[2*e+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=c);let h=Number(c-this.queryTimeBase),f=Number(p-this.queryTimeBase);if(!Number.isSafeInteger(h)||!Number.isSafeInteger(f))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:u.map((e=>({dims:e.dims,dataType:Wt(e.dataType)}))),outputsMetadata:d.map((e=>({dims:e.dims,dataType:Wt(e.dataType)}))),kernelId:a,kernelType:s,kernelName:o,programName:l,startTime:h,endTime:f});else{let e="";u.forEach(((t,n)=>{e+=`input[${n}]: [${t.dims}] | ${Wt(t.dataType)}, `}));let t="";d.forEach(((e,n)=>{t+=`output[${n}]: [${e.dims}] | ${Wt(e.dataType)}, `})),console.log(`[profiling] kernel "${a}|${s}|${o}|${l}" ${e}${t}execution time: ${f-h} ns`)}be("GPU",`${l}::${c}::${p}`)}e.unmap(),this.pendingQueries.delete(e)})),xe()}run(e,t,n,r,a,i){$e(e.name);let s=[];for(let e=0;e<t.length;++e){let n=t[e].data;if(0===n)continue;let r=this.gpuDataManager.get(n);if(!r)throw new Error(`no GPU data for input: ${n}`);s.push(r)}let{outputs:o,dispatchGroup:l,programUniforms:u}=e.getRunData(t),d=0===n.length?o.map(((e,t)=>t)):n;if(d.length!==o.length)throw new Error(`Output size ${d.length} must be equal to ${o.length}.`);let c,p=[],h=[];for(let e=0;e<o.length;++e){if(!Number.isInteger(d[e])||d[e]<-3||d[e]>=i)throw new Error(`Invalid output index: ${d[e]}`);if(-3===d[e])continue;let t=-1===d[e],n=-2===d[e],s=t||n?a(o[e].dataType,o[e].dims):r(d[e],o[e].dataType,o[e].dims);if(p.push(s),0===s.data)continue;let l=this.gpuDataManager.get(s.data);if(!l)throw new Error(`no GPU data for output: ${s.data}`);if(t&&this.temporaryData.push(l),n){let e=this.kernelPersistentData.get(this.currentKernelId);e||(e=[],this.kernelPersistentData.set(this.currentKernelId,e)),e.push(l)}h.push(l)}if(s.length!==t.length||h.length!==p.length){if(0===h.length)return xe(e.name),p;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}if(u){let e=0,t=[];u.forEach((n=>{let r="number"==typeof n.data?[n.data]:n.data;if(0===r.length)return;let a,i,s=10===n.type?2:4;10===n.type?(i=r.length>4?16:r.length>2?8:r.length*s,a=r.length>4?16:s*r.length):(i=r.length<=2?r.length*s:16,a=16),e=Math.ceil(e/i)*i,t.push(e);let o=10===n.type?8:4;e+=r.length>4?Math.ceil(r.length/o)*a:r.length*s}));let n=16;e=Math.ceil(e/n)*n;let r=new ArrayBuffer(e);u.forEach(((e,n)=>{let a=t[n],i="number"==typeof e.data?[e.data]:e.data;if(6===e.type)new Int32Array(r,a,i.length).set(i);else if(12===e.type)new Uint32Array(r,a,i.length).set(i);else if(10===e.type)new Uint16Array(r,a,i.length).set(i);else{if(1!==e.type)throw new Error(`Unsupported uniform type: ${Wt(e.type)}`);new Float32Array(r,a,i.length).set(i)}}));let a=this.gpuDataManager.create(e,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(a.buffer,0,r,0,e),this.gpuDataManager.release(a.id),c={offset:0,size:e,buffer:a.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),m=1===f[1]&&1===f[2],g=Pl(e,t,m),_=this.programManager.getArtifact(g);if(_||(_=this.programManager.build(e,f),this.programManager.setArtifact(g,_),Zt("info",(()=>`[artifact] key: ${g}, programName: ${e.name}`))),u&&_.uniformVariablesInfo){if(u.length!==_.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${_.uniformVariablesInfo.length}, got ${u.length} in program "${_.programInfo.name}".`);for(let e=0;e<u.length;e++){let t=u[e],n=t.type,r="number"==typeof t.data?1:t.data.length,[a,i]=_.uniformVariablesInfo[e];if(n!==a||r!==i)throw new Error(`Uniform variable ${e} mismatch: expect type ${a} with size ${i}, got type ${n} with size ${r} in program "${_.programInfo.name}".`)}}if(Zt("info",(()=>`[ProgramManager] run "${e.name}" (key=${g}) with ${f[0]}x${f[1]}x${f[2]}`)),"none"!==this.queryType||"capturing"===this.sessionStatus){let e={kernelId:this.currentKernelId,programName:_.programInfo.name,inputTensorViews:t,outputTensorViews:p};this.pendingKernels.push(e),"capturing"===this.sessionStatus&&this.capturedPendingKernels.get(this.currentSessionId).push(e)}return this.programManager.run(_,s,h,f,c),xe(e.name),p}upload(e,t){this.gpuDataManager.upload(e,t)}memcpy(e,t){this.gpuDataManager.memcpy(e,t)}async download(e,t){await this.gpuDataManager.download(e,t)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,t,n,r){let a=Ol.get(e);if(!a)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:r,kernelEntry:a[0],attributes:[a[1],n]};this.kernels.set(t,i)}releaseKernel(e){let t=this.kernelPersistentData.get(e);if(t){for(let e of t)this.gpuDataManager.release(e.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,t,n){let r=this.kernels.get(e);if(!r)throw new Error(`kernel not created: ${e}`);let a=r.kernelType,i=r.kernelName,s=r.kernelEntry,o=r.attributes;if(null!==this.currentKernelId)throw new Error(`kernel "[${a}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,o[0]&&(o[1]=o[0](o[1]),o[0]=void 0),Zt("info",(()=>`[WebGPU] Start to run kernel "[${a}] ${i}"...`));let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),s(t,o[1]),0}catch(e){return n.push(Promise.resolve(`[WebGPU] Kernel "[${a}] ${i}" failed. ${e}`)),1}finally{l&&n.push(this.device.popErrorScope().then((e=>e?`GPU validation error for kernel "[${a}] ${i}": ${e.message}`:null)));for(let e of this.temporaryData)this.gpuDataManager.release(e.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,t,n,r){let a=this.sessionExternalDataMapping.get(e);a||(a=new Map,this.sessionExternalDataMapping.set(e,a));let i=a.get(t),s=this.gpuDataManager.registerExternalBuffer(n,r,i?.[1]);return a.set(t,[s,n]),s}unregisterBuffers(e){let t=this.sessionExternalDataMapping.get(e);t&&(t.forEach((e=>this.gpuDataManager.unregisterExternalBuffer(e[1]))),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let t=this.gpuDataManager.get(e);if(!t)throw new Error(`no GPU data for buffer: ${e}`);return t.buffer}createDownloader(e,t,n){return async()=>{let r=await ln(this,e,t);return en(r.buffer,n)}}writeTimestamp(e){"inside-passes"===this.queryType&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",("default"===this.env.webgpu.profiling?.mode||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),"none"!==this.queryType&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2*this.maxDispatchNumber}),this.queryResolveBuffer=this.device.createBuffer({size:2*this.maxDispatchNumber*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Zt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Zt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Zt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),n=e.length;this.pendingKernels=[];for(let r=0;r<n;r++){let n=this.getComputePassEncoder(),a=e[r];this.writeTimestamp(2*this.pendingDispatchNumber),n.setPipeline(a.computePipeline),n.setBindGroup(0,a.bindGroup),n.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(2*this.pendingDispatchNumber+1),this.pendingDispatchNumber++,"none"!==this.queryType&&this.pendingKernels.push(t[r]),(this.pendingDispatchNumber>=this.maxDispatchNumber||"at-passes"===this.queryType)&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}})),Ku={};Be(Ku,{init:()=>Qu});var Yu,Xu,Qu,Ju,Zu,ed,td,nd,rd,ad,id,sd,od,ld,ud,dd,cd,pd,hd,fd,md,gd,_d,yd,wd,bd,vd,$d,xd,kd,Sd,Ed,Cd,Ad,Id,Td,zd,Od,Md=Re((()=>{Hl(),ju(),jl(),Jl(),Yu=class e{constructor(e,t,n,r){this.module=e,this.dataType=t,this.data=n,this.dims=r}getFloat32Array(){if(1!==this.dataType)throw new Error("Invalid data type");let e=mn.size(this.dims);return 0===e?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,e)}getBigInt64Array(){if(7!==this.dataType)throw new Error("Invalid data type");let e=mn.size(this.dims);return 0===e?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,e)}getInt32Array(){if(6!==this.dataType)throw new Error("Invalid data type");let e=mn.size(this.dims);return 0===e?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,e)}reshape(t){if(mn.size(t)!==mn.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Xu=class{constructor(e,t,n){this.module=e,this.backend=t,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=t.adapterInfo;let r=e.HEAPU32,a=n>>>2;this.opKernelContext=r[a++];let i=r[a++];this.outputCount=r[a++],this.customDataOffset=r[a++],this.customDataSize=r[a++];let s=[];for(let t=0;t<i;t++){let t=r[a++],n=r[a++],i=r[a++],o=[];for(let e=0;e<i;e++)o.push(r[a++]);s.push(new Yu(e,t,n,o))}this.inputs=s}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(e,t){let n=t?.inputs?.map((e=>"number"==typeof e?this.inputs[e]:e))??this.inputs,r=t?.outputs??[];return this.backend.run(e,n,r,((e,t,n)=>new Yu(this.module,t,this.output(e,n),n)),((e,t)=>{let n=Ft(e);if(!n)throw new Error(`Unsupported data type: ${e}`);let r=n*mn.size(t),a=r>0?this.backend.gpuDataManager.create(r).id:0;return new Yu(this.module,e,a,t)}),this.outputCount)}output(e,t){let n=this.module.stackSave();try{let n=this.module.stackAlloc(4*(1+t.length)),r=n>>2;this.module.HEAPU32[r++]=t.length;for(let e=0;e<t.length;e++)this.module.HEAPU32[r++]=t[e];return this.module._JsepOutput(this.opKernelContext,e,n)}catch(n){throw new Error(`Failed to generate kernel's output[${e}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${n}`)}finally{this.module.stackRestore(n)}}},Qu=async(e,t,n,r)=>{let a=t.jsepInit;if(!a)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if("webgpu"===e){let e=new Dl;await e.initialize(n,r),a("webgpu",[e,t=>e.alloc(t),t=>e.free(t),(n,r,a,i=!1)=>{if(i)Zt("verbose",(()=>`[WebGPU] jsepCopyGpuToGpu: src=${n}, dst=${r}, size=${a}`)),e.memcpy(n,r);else{Zt("verbose",(()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${n}, gpuDataId=${r}, size=${a}`));let i=t.HEAPU8.subarray(n>>>0,(n>>>0)+a);e.upload(r,i)}},async(n,r,a)=>{Zt("verbose",(()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${n}, dataOffset=${r}, size=${a}`)),await e.download(n,(()=>t.HEAPU8.subarray(r>>>0,(r>>>0)+a)))},(n,r,a)=>e.createKernel(n,r,a,t.UTF8ToString(t._JsepGetNodeName(r))),t=>e.releaseKernel(t),(n,r,a,i)=>{Zt("verbose",(()=>`[WebGPU] jsepRun: sessionHandle=${a}, kernel=${n}, contextDataOffset=${r}`));let s=new Xu(t,e,r);return e.computeKernel(n,s,i)},()=>e.captureBegin(),()=>e.captureEnd(),()=>e.replay()])}else a("webnn")}})),Rd=Re((()=>{Vl(),Gl(),Hl(),Fl(),Ll(),ql(),Ju=(e,t)=>{0!==It()._OrtInit(e,t)&&Ot("Can't initialize onnxruntime.")},Zu=async e=>{Ju(e.wasm.numThreads,Vt(e.logLevel))},ed=async(e,t)=>{{let n=(Md(),De(Ku)).init;if("webgpu"===t){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu.adapter;if(t){if("object"!=typeof t.limits||"object"!=typeof t.features||"function"!=typeof t.requestDevice)throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(void 0!==n&&"low-power"!==n&&"high-performance"!==n)throw new Error(`Invalid powerPreference setting: "${n}"`);let r=e.webgpu.forceFallbackAdapter;if(void 0!==r&&"boolean"!=typeof r)throw new Error(`Invalid forceFallbackAdapter setting: "${r}"`);if(t=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:r}),!t)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await n("webgpu",It(),e,t)}if("webnn"===t){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await n("webnn",It(),e)}}},td=new Map,nd=e=>{let t=It(),n=t.stackSave();try{let n=t.stackAlloc(8);return 0!==t._OrtGetInputOutputCount(e,n,n+4)&&Ot("Can't get session input/output count."),[t.HEAP32[n/4],t.HEAP32[n/4+1]]}finally{t.stackRestore(n)}},rd=e=>{let t=It(),n=t._malloc(e.byteLength);if(0===n)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,n),[n,e.byteLength]},ad=async(e,t)=>{let n,r,a=It();Array.isArray(e)?[n,r]=e:e.buffer===a.HEAPU8.buffer?[n,r]=[e.byteOffset,e.byteLength]:[n,r]=rd(e);let i=0,s=0,o=0,l=[],u=[],d=[];try{if([s,l]=Nt(t),t?.externalData&&a.mountExternalData){let e=[];for(let n of t.externalData){let t="string"==typeof n?n:n.path;e.push(qt("string"==typeof n?n:n.data).then((e=>{a.mountExternalData(t,e)})))}await Promise.all(e)}i=await a._OrtCreateSession(n,r,s),0===i&&Ot("Can't create a session.");let[e,c]=nd(i),p=!!t?.enableGraphCapture,h=[],f=[],m=[];for(let t=0;t<e;t++){let e=a._OrtGetInputName(i,t);0===e&&Ot("Can't get an input name."),u.push(e),h.push(a.UTF8ToString(e))}for(let e=0;e<c;e++){let n=a._OrtGetOutputName(i,e);0===n&&Ot("Can't get an output name."),d.push(n);let r=a.UTF8ToString(n);f.push(r);{if(p&&void 0===t?.preferredOutputLocation){m.push("gpu-buffer");continue}let e="string"==typeof t?.preferredOutputLocation?t.preferredOutputLocation:t?.preferredOutputLocation?.[r]??"cpu";if("cpu"!==e&&"cpu-pinned"!==e&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}.`);if(p&&"gpu-buffer"!==e)throw new Error(`Not supported preferred output location: ${e}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);m.push(e)}}let g=null;return m.some((e=>"gpu-buffer"===e))&&(o=a._OrtCreateBinding(i),0===o&&Ot("Can't create IO binding."),g={handle:o,outputPreferredLocations:m,outputPreferredLocationsEncoded:m.map((e=>Ht(e)))}),td.set(i,[i,u,d,g,p,!1]),[i,h,f]}catch(e){throw u.forEach((e=>a._OrtFree(e))),d.forEach((e=>a._OrtFree(e))),0!==o&&a._OrtReleaseBinding(o),0!==i&&a._OrtReleaseSession(i),e}finally{a._free(n),0!==s&&a._OrtReleaseSessionOptions(s),l.forEach((e=>a._free(e))),a.unmountExternalData?.()}},id=e=>{let t=It(),n=td.get(e);if(!n)throw new Error(`cannot release session. invalid session id: ${e}`);let[r,a,i,s,o]=n;s&&(o&&t._OrtClearBoundOutputs(s.handle),t._OrtReleaseBinding(s.handle)),t.jsepOnReleaseSession?.(e),a.forEach((e=>t._OrtFree(e))),i.forEach((e=>t._OrtFree(e))),t._OrtReleaseSession(r),td.delete(e)},sd=(e,t,n,r,a,i=!1)=>{if(!e)return void t.push(0);let s,o,l=It(),u=e[0],d=e[1],c=e[3];if("string"===u&&"gpu-buffer"===c)throw new Error("String tensor is not supported on GPU.");if(i&&"gpu-buffer"!==c)throw new Error(`External buffer must be provided for input/output index ${a} when enableGraphCapture is true.`);if("gpu-buffer"===c){let t=e[2].gpuBuffer,n=Ft(Ut(u));o=d.reduce(((e,t)=>e*t),1)*n;let i=l.jsepRegisterBuffer;if(!i)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');s=i(r,a,t,o)}else{let t=e[2];if(Array.isArray(t)){o=4*t.length,s=l._malloc(o),n.push(s);let e=s/4;for(let r=0;r<t.length;r++){if("string"!=typeof t[r])throw new TypeError(`tensor data at index ${r} is not a string`);l.HEAPU32[e++]=Tt(t[r],n)}}else o=t.byteLength,s=l._malloc(o),n.push(s),l.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),s)}let p=l.stackSave(),h=l.stackAlloc(4*d.length);try{let e=h/4;d.forEach((t=>l.HEAP32[e++]=t));let n=l._OrtCreateTensor(Ut(u),s,o,h,d.length,Ht(c));0===n&&Ot(`Can't create tensor for input/output. session=${r}, index=${a}.`),t.push(n)}finally{l.stackRestore(p)}},od=async(e,t,n,r,a,i)=>{let s=It(),o=td.get(e);if(!o)throw new Error(`cannot run inference. invalid session id: ${e}`);let l=o[0],u=o[1],d=o[2],c=o[3],p=o[4],h=o[5],f=t.length,m=r.length,g=0,_=[],y=[],w=[],b=[],v=s.stackSave(),$=s.stackAlloc(4*f),x=s.stackAlloc(4*f),k=s.stackAlloc(4*m),S=s.stackAlloc(4*m);try{[g,_]=Mt(i);for(let r=0;r<f;r++)sd(n[r],y,b,e,t[r],p);for(let t=0;t<m;t++)sd(a[t],w,b,e,f+r[t],p);let o,v=$/4,E=x/4,C=k/4,A=S/4;for(let e=0;e<f;e++)s.HEAPU32[v++]=y[e],s.HEAPU32[E++]=u[t[e]];for(let e=0;e<m;e++)s.HEAPU32[C++]=w[e],s.HEAPU32[A++]=d[r[e]];if(c&&!h){let{handle:n,outputPreferredLocations:i,outputPreferredLocationsEncoded:o}=c;if(u.length!==f)throw new Error(`input count from feeds (${f}) is expected to be always equal to model's input count (${u.length}).`);for(let r=0;r<f;r++){let a=t[r];0!==await s._OrtBindInput(n,u[a],y[r])&&Ot(`Can't bind input[${r}] for session=${e}.`)}for(let t=0;t<m;t++){let l=r[t];a[t]?.[3]?0!==s._OrtBindOutput(n,d[l],w[t],0)&&Ot(`Can't bind pre-allocated output[${t}] for session=${e}.`):0!==s._OrtBindOutput(n,d[l],0,o[l])&&Ot(`Can't bind output[${t}] to ${i[t]} for session=${e}.`)}td.set(e,[l,u,d,c,p,!0])}s.jsepOnRunStart?.(l),o=c?await s._OrtRunWithBinding(l,c.handle,m,k,g):await s._OrtRun(l,x,$,f,S,m,k,g),0!==o&&Ot("failed to call OrtRun().");let I=[];for(let e=0;e<m;e++){let t=s.HEAPU32[k/4+e];if(t===w[e]){I.push(a[e]);continue}let n,i=s.stackSave(),o=s.stackAlloc(16),l=!1,u=0;try{0!==s._OrtGetTensorData(t,o,o+4,o+8,o+12)&&Ot(`Can't access output tensor data on index ${e}.`);let a=o/4,i=s.HEAPU32[a++];u=s.HEAPU32[a++];let d=s.HEAPU32[a++],p=s.HEAPU32[a++],h=[];for(let e=0;e<p;e++)h.push(s.HEAPU32[d/4+e]);s._OrtFree(d);let f=h.reduce(((e,t)=>e*t),1);n=Wt(i);let m=c?.outputPreferredLocations[r[e]];if("string"===n){if("gpu-buffer"===m)throw new Error("String tensor is not supported on GPU.");let e=[],t=u/4;for(let n=0;n<f;n++){let r=s.HEAPU32[t++],a=n===f-1?void 0:s.HEAPU32[t]-r;e.push(s.UTF8ToString(r,a))}I.push([n,h,e,"cpu"])}else if("gpu-buffer"===m&&f>0){let e=s.jsepGetBuffer;if(!e)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let r=e(u),a=Ft(i);if(void 0===a||!Gt(n))throw new Error(`Unsupported data type: ${n}`);l=!0,I.push([n,h,{gpuBuffer:r,download:s.jsepCreateDownloader(r,f*a,n),dispose:()=>{s._OrtReleaseTensor(t)}},"gpu-buffer"])}else{let e=new(Lt(n))(f);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(s.HEAPU8.subarray(u,u+e.byteLength)),I.push([n,h,e,"cpu"])}}finally{s.stackRestore(i),"string"===n&&u&&s._free(u),l||s._OrtReleaseTensor(t)}}return c&&!p&&(s._OrtClearBoundOutputs(c.handle),td.set(e,[l,u,d,c,p,!1])),I}finally{s.stackRestore(v),y.forEach((e=>s._OrtReleaseTensor(e))),w.forEach((e=>s._OrtReleaseTensor(e))),b.forEach((e=>s._free(e))),0!==g&&s._OrtReleaseRunOptions(g),_.forEach((e=>s._free(e)))}},ld=e=>{let t=It(),n=td.get(e);if(!n)throw new Error("invalid session id");let r=n[0],a=t._OrtEndProfiling(r);0===a&&Ot("Can't get an profile file name."),t._OrtFree(a)},ud=e=>{let t=[];for(let n of e){let e=n[2];!Array.isArray(e)&&"buffer"in e&&t.push(e.buffer)}return t}})),Pd=Pe(((e,t)=>{t.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var ao=Object.defineProperty;var nl=Object.getOwnPropertyDescriptor;var ol=Object.getOwnPropertyNames;var il=Object.prototype.hasOwnProperty;var Y=(e,t)=>()=>(e&&(t=e(e=0)),t);var Wr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),gn=(e,t)=>{for(var r in t)ao(e,r,{get:t[r],enumerable:!0})},al=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of ol(t))!il.call(e,i)&&i!==r&&ao(e,i,{get:()=>t[i],enumerable:!(o=nl(t,i))||o.enumerable});return e};var wr=e=>al(ao({},"__esModule",{value:!0}),e);var so={};gn(so,{createReadStream:()=>Ai,readFile:()=>sl,readFileSync:()=>ul});var sl,ul,Ai,uo=Y(()=>{sl=void 0,ul=void 0,Ai=void 0});var lo={};gn(lo,{join:()=>dl});var dl,co=Y(()=>{dl=void 0});var Ei=Wr((Ti,po)=>{"use strict";var Ii=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){var r=t,o,i,u=new Promise((s,m)=>{o=s,i=m});r.mountExternalData=(s,m)=>{(r.eb||(r.eb=new Map)).set(s,m)},r.unmountExternalData=()=>{delete r.eb};let a=()=>{let s=(g,$,T)=>(...B)=>{let H=dt,q=$?.();B=g(...B);let te=$?.();return q!==te&&(g=te,T(q),$=T=null),dt!=H?tn():B},m=g=>async(...$)=>{try{if(r.cb)throw Error("Session already started");let T=r.cb={xb:$[0],errors:[]},B=await g(...$);if(r.cb!==T)throw Error("Session mismatch");r.kb?.flush();let H=T.errors;if(0<H.length){let q=await Promise.all(H);if(q=q.filter(te=>te),0<q.length)throw Error(q.join(`\n`))}return B}finally{r.cb=null}};r._OrtCreateSession=s(r._OrtCreateSession,()=>r._OrtCreateSession,g=>r._OrtCreateSession=g),r._OrtRun=m(s(r._OrtRun,()=>r._OrtRun,g=>r._OrtRun=g)),r._OrtRunWithBinding=m(s(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,g=>r._OrtRunWithBinding=g)),r._OrtBindInput=s(r._OrtBindInput,()=>r._OrtBindInput,g=>r._OrtBindInput=g),a=void 0};r.jsepInit=(s,m)=>{if(a?.(),s==="webgpu"){[r.kb,r.pb,r.tb,r.lb,r.sb,r.Ra,r.ub,r.wb,r.qb,r.rb,r.vb]=m;let g=r.kb;r.jsepRegisterBuffer=($,T,B,H)=>g.registerBuffer($,T,B,H),r.jsepGetBuffer=$=>g.getBuffer($),r.jsepCreateDownloader=($,T,B)=>g.createDownloader($,T,B),r.jsepOnReleaseSession=$=>{g.onReleaseSession($)},r.jsepOnRunStart=$=>g.onRunStart($)}};var c=Object.assign({},r),p="./this.program",h=(s,m)=>{throw m},d=typeof window=="object",y=typeof importScripts=="function",w=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",_="",v,S,A;if(w){var I=(uo(),wr(so)),x=(co(),wr(lo));_=y?x.dirname(_)+"/":__dirname+"/",v=(s,m)=>(s=Ke(s)?new URL(s):x.normalize(s),I.readFileSync(s,m?void 0:"utf8")),A=s=>(s=v(s,!0),s.buffer||(s=new Uint8Array(s)),s),S=(s,m,g,$=!0)=>{s=Ke(s)?new URL(s):x.normalize(s),I.readFile(s,$?void 0:"utf8",(T,B)=>{T?g(T):m($?B.buffer:B)})},!r.thisProgram&&1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),h=(s,m)=>{throw process.exitCode=s,m}}else(d||y)&&(y?_=self.location.href:typeof document<"u"&&document.currentScript&&(_=document.currentScript.src),e&&(_=e),_.startsWith("blob:")?_="":_=_.substr(0,_.replace(/[?#].*/,"").lastIndexOf("/")+1),v=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.send(null),m.responseText},y&&(A=s=>{var m=new XMLHttpRequest;return m.open("GET",s,!1),m.responseType="arraybuffer",m.send(null),new Uint8Array(m.response)}),S=(s,m,g)=>{var $=new XMLHttpRequest;$.open("GET",s,!0),$.responseType="arraybuffer",$.onload=()=>{$.status==200||$.status==0&&$.response?m($.response):g()},$.onerror=g,$.send(null)});var E=console.log.bind(console),P=console.error.bind(console);Object.assign(r,c),c=null;var O,R=!1,L,N,K,Q,he,W,se,Ce,We,ee,ae;function Ae(){var s=O.buffer;r.HEAP8=N=new Int8Array(s),r.HEAP16=Q=new Int16Array(s),r.HEAPU8=K=new Uint8Array(s),r.HEAPU16=he=new Uint16Array(s),r.HEAP32=W=new Int32Array(s),r.HEAPU32=se=new Uint32Array(s),r.HEAPF32=Ce=new Float32Array(s),r.HEAPF64=ae=new Float64Array(s),r.HEAP64=We=new BigInt64Array(s),r.HEAPU64=ee=new BigUint64Array(s)}var me=[],ie=[],ue=[],le=0,qe=null,G=null;function ne(s){throw s="Aborted("+s+")",P(s),R=!0,L=1,s=new WebAssembly.RuntimeError(s+". Build with -sASSERTIONS for more info."),i(s),s}var xe=s=>s.startsWith("data:application/octet-stream;base64,"),Ke=s=>s.startsWith("file://"),Be;if(Be="ort-wasm-simd.wasm",!xe(Be)){var Ge=Be;Be=r.locateFile?r.locateFile(Ge,_):_+Ge}function Ut(s){if(A)return A(s);throw"both async and sync fetching of the wasm failed"}function Ne(s){if(d||y){if(typeof fetch=="function"&&!Ke(s))return fetch(s,{credentials:"same-origin"}).then(m=>{if(!m.ok)throw`failed to load wasm binary file at \'${s}\'`;return m.arrayBuffer()}).catch(()=>Ut(s));if(S)return new Promise((m,g)=>{S(s,$=>m(new Uint8Array($)),g)})}return Promise.resolve().then(()=>Ut(s))}function Ye(s,m,g){return Ne(s).then($=>WebAssembly.instantiate($,m)).then(g,$=>{P(`failed to asynchronously prepare wasm: ${$}`),ne($)})}function mt(s,m){var g=Be;return typeof WebAssembly.instantiateStreaming!="function"||xe(g)||Ke(g)||w||typeof fetch!="function"?Ye(g,s,m):fetch(g,{credentials:"same-origin"}).then($=>WebAssembly.instantiateStreaming($,s).then(m,function(T){return P(`wasm streaming compile failed: ${T}`),P("falling back to ArrayBuffer instantiation"),Ye(g,s,m)}))}var Rt={824920:(s,m,g,$)=>{if(typeof r>"u"||!r.eb)return 1;if(s=je(s>>>0),s.startsWith("./")&&(s=s.substring(2)),s=r.eb.get(s),!s)return 2;if(m>>>=0,g>>>=0,m+g>s.byteLength)return 3;try{return K.set(s.subarray(m,m+g),$>>>0>>>0),0}catch{return 4}},825421:()=>{r.qb()},825452:()=>{r.rb()},825481:()=>{r.vb()},825506:s=>r.pb(s),825539:s=>r.tb(s),825571:(s,m,g)=>{r.lb(s,m,g,!0)},825610:(s,m,g)=>{r.lb(s,m,g)},825643:s=>{r.Ra("Abs",s,void 0)},825694:s=>{r.Ra("Neg",s,void 0)},825745:s=>{r.Ra("Floor",s,void 0)},825798:s=>{r.Ra("Ceil",s,void 0)},825850:s=>{r.Ra("Reciprocal",s,void 0)},825908:s=>{r.Ra("Sqrt",s,void 0)},825960:s=>{r.Ra("Exp",s,void 0)},826011:s=>{r.Ra("Erf",s,void 0)},826062:s=>{r.Ra("Sigmoid",s,void 0)},826117:(s,m,g)=>{r.Ra("HardSigmoid",s,{alpha:m,beta:g})},826196:s=>{r.Ra("Log",s,void 0)},826247:s=>{r.Ra("Sin",s,void 0)},826298:s=>{r.Ra("Cos",s,void 0)},826349:s=>{r.Ra("Tan",s,void 0)},826400:s=>{r.Ra("Asin",s,void 0)},826452:s=>{r.Ra("Acos",s,void 0)},826504:s=>{r.Ra("Atan",s,void 0)},826556:s=>{r.Ra("Sinh",s,void 0)},826608:s=>{r.Ra("Cosh",s,void 0)},826660:s=>{r.Ra("Asinh",s,void 0)},826713:s=>{r.Ra("Acosh",s,void 0)},826766:s=>{r.Ra("Atanh",s,void 0)},826819:s=>{r.Ra("Tanh",s,void 0)},826871:s=>{r.Ra("Not",s,void 0)},826922:(s,m,g)=>{r.Ra("Clip",s,{min:m,max:g})},826991:s=>{r.Ra("Clip",s,void 0)},827043:(s,m)=>{r.Ra("Elu",s,{alpha:m})},827101:s=>{r.Ra("Relu",s,void 0)},827153:(s,m)=>{r.Ra("LeakyRelu",s,{alpha:m})},827217:(s,m)=>{r.Ra("ThresholdedRelu",s,{alpha:m})},827287:(s,m)=>{r.Ra("Cast",s,{to:m})},827345:s=>{r.Ra("Add",s,void 0)},827396:s=>{r.Ra("Sub",s,void 0)},827447:s=>{r.Ra("Mul",s,void 0)},827498:s=>{r.Ra("Div",s,void 0)},827549:s=>{r.Ra("Pow",s,void 0)},827600:s=>{r.Ra("Equal",s,void 0)},827653:s=>{r.Ra("Greater",s,void 0)},827708:s=>{r.Ra("GreaterOrEqual",s,void 0)},827770:s=>{r.Ra("Less",s,void 0)},827822:s=>{r.Ra("LessOrEqual",s,void 0)},827881:(s,m,g,$,T)=>{r.Ra("ReduceMean",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828040:(s,m,g,$,T)=>{r.Ra("ReduceMax",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828198:(s,m,g,$,T)=>{r.Ra("ReduceMin",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828356:(s,m,g,$,T)=>{r.Ra("ReduceProd",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828515:(s,m,g,$,T)=>{r.Ra("ReduceSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828673:(s,m,g,$,T)=>{r.Ra("ReduceL1",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828830:(s,m,g,$,T)=>{r.Ra("ReduceL2",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},828987:(s,m,g,$,T)=>{r.Ra("ReduceLogSum",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829148:(s,m,g,$,T)=>{r.Ra("ReduceSumSquare",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829312:(s,m,g,$,T)=>{r.Ra("ReduceLogSumExp",s,{keepDims:!!m,noopWithEmptyAxes:!!g,axes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},829476:s=>{r.Ra("Where",s,void 0)},829529:(s,m,g)=>{r.Ra("Transpose",s,{perm:m?Array.from(W.subarray(m>>>0,g>>>0)):[]})},829637:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829770:(s,m,g,$)=>{r.Ra("DepthToSpace",s,{blocksize:m,mode:je(g),format:$?"NHWC":"NCHW"})},829903:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},830304:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},830869:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be)=>{r.Ra("ConvTranspose",s,{format:te?"NHWC":"NCHW",autoPad:m,dilations:[g],group:$,kernelShape:[T],pads:[B,H],strides:[q],wIsConst:()=>!!N[X>>>0],outputPadding:de?Array.from(W.subarray(de>>>0,Ee>>>0)):[],outputShape:Oe?Array.from(W.subarray(Oe>>>0,D>>>0)):[],activation:je(be)})},831270:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D)=>{r.Ra("ConvTranspose",s,{format:q?"NHWC":"NCHW",autoPad:m,dilations:Array.from(W.subarray(g>>>0,(g>>>0)+2>>>0)),group:$,kernelShape:Array.from(W.subarray(T>>>0,(T>>>0)+2>>>0)),pads:Array.from(W.subarray(B>>>0,(B>>>0)+4>>>0)),strides:Array.from(W.subarray(H>>>0,(H>>>0)+2>>>0)),wIsConst:()=>!!N[te>>>0],outputPadding:X?Array.from(W.subarray(X>>>0,de>>>0)):[],outputShape:Ee?Array.from(W.subarray(Ee>>>0,Oe>>>0)):[],activation:je(D)})},831835:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},831926:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832210:(s,m)=>{r.Ra("GlobalAveragePool",s,{format:m?"NHWC":"NCHW"})},832301:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("AveragePool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832585:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},832672:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},832952:(s,m)=>{r.Ra("GlobalMaxPool",s,{format:m?"NHWC":"NCHW"})},833039:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("MaxPool",s,{format:Ie?"NHWC":"NCHW",auto_pad:m,ceil_mode:g,count_include_pad:$,storage_order:T,dilations:[B,H],kernel_shape:[q,te],pads:[X,de,Ee,Oe],strides:[D,be]})},833319:(s,m,g,$,T)=>{r.Ra("Gemm",s,{alpha:m,beta:g,transA:$,transB:T})},833423:s=>{r.Ra("MatMul",s,void 0)},833477:(s,m,g,$)=>{r.Ra("ArgMax",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833585:(s,m,g,$)=>{r.Ra("ArgMin",s,{keepDims:!!m,selectLastIndex:!!g,axis:$})},833693:(s,m)=>{r.Ra("Softmax",s,{axis:m})},833756:(s,m)=>{r.Ra("Concat",s,{axis:m})},833816:(s,m,g,$,T)=>{r.Ra("Split",s,{axis:m,numOutputs:g,splitSizes:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},833956:s=>{r.Ra("Expand",s,void 0)},834010:(s,m)=>{r.Ra("Gather",s,{axis:Number(m)})},834081:(s,m)=>{r.Ra("GatherElements",s,{axis:Number(m)})},834160:(s,m,g,$,T,B,H,q,te,X,de)=>{r.Ra("Resize",s,{antialias:m,axes:g?Array.from(W.subarray(g>>>0,$>>>0)):[],coordinateTransformMode:je(T),cubicCoeffA:B,excludeOutside:H,extrapolationValue:q,keepAspectRatioPolicy:je(te),mode:je(X),nearestMode:je(de)})},834506:(s,m,g,$,T,B,H)=>{r.Ra("Slice",s,{starts:m?Array.from(W.subarray(m>>>0,g>>>0)):[],ends:$?Array.from(W.subarray($>>>0,T>>>0)):[],axes:B?Array.from(W.subarray(B>>>0,H>>>0)):[]})},834722:s=>{r.Ra("Tile",s,void 0)},834774:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},834885:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},834999:(s,m,g)=>{r.Ra("InstanceNormalization",s,{epsilon:m,format:g?"NHWC":"NCHW"})},835113:s=>{r.Ra("Range",s,void 0)},835166:(s,m)=>{r.Ra("Einsum",s,{equation:je(m)})},835247:(s,m,g,$,T)=>{r.Ra("Pad",s,{mode:m,value:g,pads:$?Array.from(W.subarray($>>>0,T>>>0)):[]})},835374:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835543:(s,m,g,$,T,B)=>{r.Ra("BatchNormalization",s,{epsilon:m,momentum:g,spatial:!!T,trainingMode:!!$,format:B?"NHWC":"NCHW"})},835712:(s,m,g)=>{r.Ra("CumSum",s,{exclusive:Number(m),reverse:Number(g)})},835809:(s,m,g,$,T,B,H,q,te)=>{r.Ra("Attention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B,qkvHiddenSizes:H?Array.from(W.subarray(Number(q)>>>0,Number(q)+H>>>0)):[],pastPresentShareBuffer:!!te})},836081:s=>{r.Ra("BiasAdd",s,void 0)},836136:s=>{r.Ra("BiasSplitGelu",s,void 0)},836197:s=>{r.Ra("FastGelu",s,void 0)},836253:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe)=>{r.Ra("Conv",s,{format:te?"NHWC":"NCHW",auto_pad:m,dilations:[g],group:$,kernel_shape:[T],pads:B?Array.from(W.subarray(B>>>0,H>>>0)):[],strides:[q],w_is_const:()=>!!N[X>>>0],activation:je(de),activation_params:Ee?Array.from(Ce.subarray(Ee>>>0,Oe>>>0)):[]})},836623:(s,m,g,$,T,B,H,q,te,X,de,Ee,Oe,D,be,Ie)=>{r.Ra("Conv",s,{format:Ee?"NHWC":"NCHW",auto_pad:m,dilations:[g,$],group:T,kernel_shape:[B,H],pads:q?Array.from(W.subarray(q>>>0,te>>>0)):[],strides:[X,de],w_is_const:()=>!!N[Oe>>>0],activation:je(D),activation_params:be?Array.from(Ce.subarray(be>>>0,Ie>>>0)):[]})},837014:s=>{r.Ra("Gelu",s,void 0)},837066:(s,m,g,$,T,B)=>{r.Ra("MatMulNBits",s,{k:m,n:g,accuracyLevel:$,bits:T,blockSize:B})},837193:(s,m,g,$,T,B)=>{r.Ra("MultiHeadAttention",s,{numHeads:m,isUnidirectional:g,maskFilterValue:$,scale:T,doRotary:B})},837352:(s,m,g,$,T)=>{r.Ra("RotaryEmbedding",s,{interleaved:!!m,numHeads:g,rotaryEmbeddingDim:$,scale:T})},837491:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837593:(s,m,g)=>{r.Ra("SkipLayerNormalization",s,{epsilon:m,simplified:!!g})},837695:(s,m,g,$)=>{r.Ra("LayerNormalization",s,{axis:m,epsilon:g,simplified:!!$})},837806:s=>{r.ub(s)},837840:(s,m)=>r.wb(s,m,r.cb.xb,r.cb.errors)};function qt(s){this.name="ExitStatus",this.message=`Program terminated with exit(${s})`,this.status=s}class Vt{constructor(m){this.hb=m-24}}var sr=0,jt=0,xr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Kt=(s,m,g)=>{m>>>=0;var $=m+g;for(g=m;s[g]&&!(g>=$);)++g;if(16<g-m&&s.buffer&&xr)return xr.decode(s.subarray(m,g));for($="";m<g;){var T=s[m++];if(T&128){var B=s[m++]&63;if((T&224)==192)$+=String.fromCharCode((T&31)<<6|B);else{var H=s[m++]&63;T=(T&240)==224?(T&15)<<12|B<<6|H:(T&7)<<18|B<<12|H<<6|s[m++]&63,65536>T?$+=String.fromCharCode(T):(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023))}}else $+=String.fromCharCode(T)}return $},je=(s,m)=>(s>>>=0)?Kt(K,s,m):"",Wt=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);127>=$?m++:2047>=$?m+=2:55296<=$&&57343>=$?(m+=4,++g):m+=3}return m},at=(s,m,g,$)=>{if(g>>>=0,!(0<$))return 0;var T=g;$=g+$-1;for(var B=0;B<s.length;++B){var H=s.charCodeAt(B);if(55296<=H&&57343>=H){var q=s.charCodeAt(++B);H=65536+((H&1023)<<10)|q&1023}if(127>=H){if(g>=$)break;m[g++>>>0]=H}else{if(2047>=H){if(g+1>=$)break;m[g++>>>0]=192|H>>6}else{if(65535>=H){if(g+2>=$)break;m[g++>>>0]=224|H>>12}else{if(g+3>=$)break;m[g++>>>0]=240|H>>18,m[g++>>>0]=128|H>>12&63}m[g++>>>0]=128|H>>6&63}m[g++>>>0]=128|H&63}}return m[g>>>0]=0,g-T},Cr,ft=s=>{for(var m="";K[s>>>0];)m+=Cr[K[s++>>>0]];return m},ur={},Ar={},Ir={},st;function Tr(s,m,g={}){var $=m.name;if(!s)throw new st(`type "${$}" must have a positive integer typeid pointer`);if(Ar.hasOwnProperty(s)){if(g.nb)return;throw new st(`Cannot register type \'${$}\' twice`)}Ar[s]=m,delete Ir[s],ur.hasOwnProperty(s)&&(m=ur[s],delete ur[s],m.forEach(T=>T()))}function ht(s,m,g={}){if(!("argPackAdvance"in m))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Tr(s,m,g)}var bt=(s,m,g)=>{switch(m){case 1:return g?$=>N[$>>>0]:$=>K[$>>>0];case 2:return g?$=>Q[$>>>1>>>0]:$=>he[$>>>1>>>0];case 4:return g?$=>W[$>>>2>>>0]:$=>se[$>>>2>>>0];case 8:return g?$=>We[$>>>3]:$=>ee[$>>>3];default:throw new TypeError(`invalid integer width (${m}): ${s}`)}},Er=[],Te=[];function dr(s){s>>>=0,9<s&&--Te[s+1]===0&&(Te[s]=void 0,Er.push(s))}var Xe=s=>{if(!s)throw new st("Cannot use deleted val. handle = "+s);return Te[s]},ut=s=>{switch(s){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let m=Er.pop()||Te.length;return Te[m]=s,Te[m+1]=1,m}};function lr(s){return this.fromWireType(se[s>>>2>>>0])}var Fn={name:"emscripten::val",fromWireType:s=>{var m=Xe(s);return dr(s),m},toWireType:(s,m)=>ut(m),argPackAdvance:8,readValueFromPointer:lr,bb:null},ge=(s,m)=>{switch(m){case 4:return function(g){return this.fromWireType(Ce[g>>>2>>>0])};case 8:return function(g){return this.fromWireType(ae[g>>>3>>>0])};default:throw new TypeError(`invalid float width (${m}): ${s}`)}},Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,jr=(s,m)=>{for(var g=s>>1,$=g+m/2;!(g>=$)&&he[g>>>0];)++g;if(g<<=1,32<g-s&&Yt)return Yt.decode(K.subarray(s>>>0,g>>>0));for(g="",$=0;!($>=m/2);++$){var T=Q[s+2*$>>>1>>>0];if(T==0)break;g+=String.fromCharCode(T)}return g},qn=(s,m,g)=>{if(g??=2147483647,2>g)return 0;g-=2;var $=m;g=g<2*s.length?g/2:s.length;for(var T=0;T<g;++T)Q[m>>>1>>>0]=s.charCodeAt(T),m+=2;return Q[m>>>1>>>0]=0,m-$},Kr=s=>2*s.length,jn=(s,m)=>{for(var g=0,$="";!(g>=m/4);){var T=W[s+4*g>>>2>>>0];if(T==0)break;++g,65536<=T?(T-=65536,$+=String.fromCharCode(55296|T>>10,56320|T&1023)):$+=String.fromCharCode(T)}return $},Yr=(s,m,g)=>{if(m>>>=0,g??=2147483647,4>g)return 0;var $=m;g=$+g-4;for(var T=0;T<s.length;++T){var B=s.charCodeAt(T);if(55296<=B&&57343>=B){var H=s.charCodeAt(++T);B=65536+((B&1023)<<10)|H&1023}if(W[m>>>2>>>0]=B,m+=4,m+4>g)break}return W[m>>>2>>>0]=0,m-$},Zr=s=>{for(var m=0,g=0;g<s.length;++g){var $=s.charCodeAt(g);55296<=$&&57343>=$&&++g,m+=4}return m},cr=(s,m)=>{var g=Ar[s];if(g===void 0)throw s=Mr(s),g=ft(s),rt(s),new st(`${m} has unknown type ${g}`);return g},Pr=(s,m,g)=>{var $=[];return s=s.toWireType($,g),$.length&&(se[m>>>2>>>0]=ut($)),s},He=s=>{try{s()}catch(m){ne(m)}},Xr=s=>{if(!R)try{s();try{L=L=s=L,r.onExit?.(s),R=!0,h(s,new qt(s))}catch(m){m instanceof qt||m=="unwind"||h(1,m)}}catch(m){m instanceof qt||m=="unwind"||h(1,m)}};function Qr(){var s=pe,m={};for(let[g,$]of Object.entries(s))m[g]=typeof $=="function"?(...T)=>{Zt.push(g);try{return $(...T)}finally{R||(Zt.pop(),dt&&gt===1&&Zt.length===0&&(gt=0,He(dn),typeof Fibers<"u"&&Fibers.Db()))}}:$;return m}var gt=0,dt=null,Bt=0,Zt=[],kr={},Or={},Jr=0,pr=null,en=[];function tn(){return new Promise((s,m)=>{pr={resolve:s,reject:m}})}function rn(){var s=Nt(65548),m=s+12;se[s>>>2>>>0]=m,se[s+4>>>2>>>0]=m+65536,m=Zt[0];var g=kr[m];return g===void 0&&(g=Jr++,kr[m]=g,Or[g]=m),W[s+8>>>2>>>0]=g,s}function nn(s){if(!R){if(gt===0){var m=!1,g=!1;s(($=0)=>{if(!R&&(Bt=$,m=!0,g)){gt=2,He(()=>vt(dt)),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.resume(),$=!1;try{var T=(0,pe[Or[W[dt+8>>>2>>>0]]])()}catch(q){T=q,$=!0}var B=!1;if(!dt){var H=pr;H&&(pr=null,($?H.reject:H.resolve)(T),B=!0)}if($&&!B)throw T}}),g=!0,m||(gt=1,dt=rn(),typeof Browser<"u"&&Browser.ib.mb&&Browser.ib.pause(),He(()=>Jt(dt)))}else gt===2?(gt=0,He(ct),rt(dt),dt=null,en.forEach(Xr)):ne(`invalid state: ${gt}`);return Bt}}function Rr(s){return nn(m=>{s().then(m)})}var Xt=[],on={},nt=s=>{var m=on[s];return m===void 0?ft(s):m},mr=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Br=s=>{var m=Xt.length;return Xt.push(s),m},Kn=(s,m)=>{for(var g=Array(s),$=0;$<s;++$)g[$]=cr(se[m+4*$>>>2>>>0],"parameter "+$);return g},wt=(s,m)=>Object.defineProperty(m,"name",{value:s});function Yn(s){var m=Function;if(!(m instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof m} which is not a function`);var g=wt(m.name||"unknownFunctionName",function(){});return g.prototype=m.prototype,g=new g,s=m.apply(g,s),s instanceof Object?s:g}var Je=s=>s%4===0&&(s%100!==0||s%400===0),Dr=[0,31,60,91,121,152,182,213,244,274,305,335],fr=[0,31,59,90,120,151,181,212,243,273,304,334],lt=[],hr=(s,m)=>{lt.length=0;for(var g;g=K[s++>>>0];){var $=g!=105;$&=g!=112,m+=$&&m%8?4:0,lt.push(g==112?se[m>>>2>>>0]:g==106?We[m>>>3]:g==105?W[m>>>2>>>0]:ae[m>>>3>>>0]),m+=$?8:4}return lt},Qe={},ot=()=>{if(!Qt){var s={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:p||"./this.program"},m;for(m in Qe)Qe[m]===void 0?delete s[m]:s[m]=Qe[m];var g=[];for(m in s)g.push(`${m}=${s[m]}`);Qt=g}return Qt},Qt,Zn=[null,[],[]],an=[31,29,31,30,31,30,31,31,30,31,30,31],zr=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(s){var m=Array(Wt(s)+1);return at(s,m,0,m.length),m}function sn(s,m,g,$){function T(D,be,Ie){for(D=typeof D=="number"?D.toString():D||"";D.length<be;)D=Ie[0]+D;return D}function B(D,be){return T(D,be,"0")}function H(D,be){function Ie(Mt){return 0>Mt?-1:0<Mt?1:0}var zt;return(zt=Ie(D.getFullYear()-be.getFullYear()))===0&&(zt=Ie(D.getMonth()-be.getMonth()))===0&&(zt=Ie(D.getDate()-be.getDate())),zt}function q(D){switch(D.getDay()){case 0:return new Date(D.getFullYear()-1,11,29);case 1:return D;case 2:return new Date(D.getFullYear(),0,3);case 3:return new Date(D.getFullYear(),0,2);case 4:return new Date(D.getFullYear(),0,1);case 5:return new Date(D.getFullYear()-1,11,31);case 6:return new Date(D.getFullYear()-1,11,30)}}function te(D){var be=D.$a;for(D=new Date(new Date(D.ab+1900,0,1).getTime());0<be;){var Ie=D.getMonth(),zt=(Je(D.getFullYear())?an:zr)[Ie];if(be>zt-D.getDate())be-=zt-D.getDate()+1,D.setDate(1),11>Ie?D.setMonth(Ie+1):(D.setMonth(0),D.setFullYear(D.getFullYear()+1));else{D.setDate(D.getDate()+be);break}}return Ie=new Date(D.getFullYear()+1,0,4),be=q(new Date(D.getFullYear(),0,4)),Ie=q(Ie),0>=H(be,D)?0>=H(Ie,D)?D.getFullYear()+1:D.getFullYear():D.getFullYear()-1}s>>>=0,m>>>=0,g>>>=0,$>>>=0;var X=se[$+40>>>2>>>0];$={Ab:W[$>>>2>>>0],zb:W[$+4>>>2>>>0],fb:W[$+8>>>2>>>0],jb:W[$+12>>>2>>>0],gb:W[$+16>>>2>>>0],ab:W[$+20>>>2>>>0],Va:W[$+24>>>2>>>0],$a:W[$+28>>>2>>>0],Cb:W[$+32>>>2>>>0],yb:W[$+36>>>2>>>0],Bb:X?je(X):""},g=je(g),X={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var de in X)g=g.replace(new RegExp(de,"g"),X[de]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Oe="January February March April May June July August September October November December".split(" ");X={"%a":D=>Ee[D.Va].substring(0,3),"%A":D=>Ee[D.Va],"%b":D=>Oe[D.gb].substring(0,3),"%B":D=>Oe[D.gb],"%C":D=>B((D.ab+1900)/100|0,2),"%d":D=>B(D.jb,2),"%e":D=>T(D.jb,2," "),"%g":D=>te(D).toString().substring(2),"%G":te,"%H":D=>B(D.fb,2),"%I":D=>(D=D.fb,D==0?D=12:12<D&&(D-=12),B(D,2)),"%j":D=>{for(var be=0,Ie=0;Ie<=D.gb-1;be+=(Je(D.ab+1900)?an:zr)[Ie++]);return B(D.jb+be,3)},"%m":D=>B(D.gb+1,2),"%M":D=>B(D.zb,2),"%n":()=>`\n`,"%p":D=>0<=D.fb&&12>D.fb?"AM":"PM","%S":D=>B(D.Ab,2),"%t":()=>"\t","%u":D=>D.Va||7,"%U":D=>B(Math.floor((D.$a+7-D.Va)/7),2),"%V":D=>{var be=Math.floor((D.$a+7-(D.Va+6)%7)/7);if(2>=(D.Va+371-D.$a-2)%7&&be++,be)be==53&&(Ie=(D.Va+371-D.$a)%7,Ie==4||Ie==3&&Je(D.ab)||(be=1));else{be=52;var Ie=(D.Va+7-D.$a-1)%7;(Ie==4||Ie==5&&Je(D.ab%400-1))&&be++}return B(be,2)},"%w":D=>D.Va,"%W":D=>B(Math.floor((D.$a+7-(D.Va+6)%7)/7),2),"%y":D=>(D.ab+1900).toString().substring(2),"%Y":D=>D.ab+1900,"%z":D=>{D=D.yb;var be=0<=D;return D=Math.abs(D)/60,(be?"+":"-")+("0000"+(D/60*100+D%60)).slice(-4)},"%Z":D=>D.Bb,"%%":()=>"%"},g=g.replace(/%%/g,"\\0\\0");for(de in X)g.includes(de)&&(g=g.replace(new RegExp(de,"g"),X[de]($)));return g=g.replace(/\\0\\0/g,"%"),de=Xn(g),de.length>m?0:(N.set(de,s>>>0),de.length-1)}for(var un=Array(256),gr=0;256>gr;++gr)un[gr]=String.fromCharCode(gr);Cr=un,st=r.BindingError=class extends Error{constructor(s){super(s),this.name="BindingError"}},r.InternalError=class extends Error{constructor(s){super(s),this.name="InternalError"}},Te.push(0,1,void 0,1,null,1,!0,1,!1,1),r.count_emval_handles=()=>Te.length/2-5-Er.length;var Qn={ia:function(s,m,g){return Rr(async()=>{await r.sb(s,m,g)})},a:function(s,m,g){s>>>=0;var $=new Vt(s);throw se[$.hb+16>>>2>>>0]=0,se[$.hb+4>>>2>>>0]=m>>>0,se[$.hb+8>>>2>>>0]=g>>>0,sr=s,jt++,sr},y:function(){return 0},ea:function(){},R:function(){},T:function(){},ga:function(){return 0},ca:function(){},Z:function(){},ba:function(){},G:function(){},S:function(){},P:function(){},da:function(){},Q:function(){},C:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:function($,T){if(typeof T!="bigint"&&typeof T!="number")throw T===null?T="null":($=typeof T,T=$==="object"||$==="array"||$==="function"?T.toString():""+T),new TypeError(`Cannot convert "${T}" to ${this.name}`);return typeof T=="number"&&(T=BigInt(T)),T},argPackAdvance:8,readValueFromPointer:bt(m,g>>>0,m.indexOf("u")==-1),bb:null})},K:function(s,m,g,$){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:function(T){return!!T},toWireType:function(T,B){return B?g:$},argPackAdvance:8,readValueFromPointer:function(T){return this.fromWireType(K[T>>>0])},bb:null})},J:function(s){return ht(s>>>0,Fn)},B:function(s,m,g){m=ft(m>>>0),ht(s>>>0,{name:m,fromWireType:$=>$,toWireType:($,T)=>T,argPackAdvance:8,readValueFromPointer:ge(m,g>>>0),bb:null})},s:function(s,m,g,$,T){if(s>>>=0,g>>>=0,m=ft(m>>>0),T===-1&&(T=4294967295),T=q=>q,$===0){var B=32-8*g;T=q=>q<<B>>>B}var H=m.includes("unsigned")?function(q,te){return te>>>0}:function(q,te){return te};ht(s,{name:m,fromWireType:T,toWireType:H,argPackAdvance:8,readValueFromPointer:bt(m,g,$!==0),bb:null})},o:function(s,m,g){function $(B){return new T(N.buffer,se[B+4>>>2>>>0],se[B>>>2>>>0])}var T=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][m];g=ft(g>>>0),ht(s>>>0,{name:g,fromWireType:$,argPackAdvance:8,readValueFromPointer:$},{nb:!0})},D:function(s,m){m=ft(m>>>0);var g=m==="std::string";ht(s>>>0,{name:m,fromWireType:function($){var T=se[$>>>2>>>0],B=$+4;if(g)for(var H=B,q=0;q<=T;++q){var te=B+q;if(q==T||K[te>>>0]==0){if(H=je(H,te-H),X===void 0)var X=H;else X+=String.fromCharCode(0),X+=H;H=te+1}}else{for(X=Array(T),q=0;q<T;++q)X[q]=String.fromCharCode(K[B+q>>>0]);X=X.join("")}return rt($),X},toWireType:function($,T){T instanceof ArrayBuffer&&(T=new Uint8Array(T));var B=typeof T=="string";if(!(B||T instanceof Uint8Array||T instanceof Uint8ClampedArray||T instanceof Int8Array))throw new st("Cannot pass non-string to std::string");var H=g&&B?Wt(T):T.length,q=Nt(4+H+1),te=q+4;if(se[q>>>2>>>0]=H,g&&B)at(T,K,te,H+1);else if(B)for(B=0;B<H;++B){var X=T.charCodeAt(B);if(255<X)throw rt(te),new st("String has UTF-16 code units that do not fit in 8 bits");K[te+B>>>0]=X}else for(B=0;B<H;++B)K[te+B>>>0]=T[B];return $!==null&&$.push(rt,q),q},argPackAdvance:8,readValueFromPointer:lr,bb($){rt($)}})},x:function(s,m,g){if(m>>>=0,g>>>=0,g=ft(g),m===2)var $=jr,T=qn,B=Kr,H=q=>he[q>>>1>>>0];else m===4&&($=jn,T=Yr,B=Zr,H=q=>se[q>>>2>>>0]);ht(s>>>0,{name:g,fromWireType:q=>{for(var te=se[q>>>2>>>0],X,de=q+4,Ee=0;Ee<=te;++Ee){var Oe=q+4+Ee*m;(Ee==te||H(Oe)==0)&&(de=$(de,Oe-de),X===void 0?X=de:(X+=String.fromCharCode(0),X+=de),de=Oe+m)}return rt(q),X},toWireType:(q,te)=>{if(typeof te!="string")throw new st(`Cannot pass non-string to C++ string type ${g}`);var X=B(te),de=Nt(4+X+m);return se[de>>>2>>>0]=X/m,T(te,de+4,X+m),q!==null&&q.push(rt,de),de},argPackAdvance:8,readValueFromPointer:lr,bb(q){rt(q)}})},L:function(s,m){m=ft(m>>>0),ht(s>>>0,{ob:!0,name:m,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ha:()=>1,u:function(s,m,g){return m>>>=0,g>>>=0,s=Xe(s>>>0),m=cr(m,"emval::as"),Pr(m,g,s)},w:function(s){return s>>>=0,Rr(()=>(s=Xe(s),s.then(ut)))},n:function(s,m,g,$){return g>>>=0,$>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),s(null,m,g,$)},j:function(s,m,g,$,T){return g>>>=0,$>>>=0,T>>>=0,s=Xt[s>>>0],m=Xe(m>>>0),g=nt(g),s(m,m[g],$,T)},b:dr,A:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),s==m},m:function(s){return s>>>=0,s===0?ut(mr()):(s=nt(s),ut(mr()[s]))},i:function(s,m,g){m=Kn(s,m>>>0);var $=m.shift();s--;var T=`return function (obj, func, destructorsRef, args) {\n`,B=0,H=[];g===0&&H.push("obj");for(var q=["retType"],te=[$],X=0;X<s;++X)H.push("arg"+X),q.push("argType"+X),te.push(m[X]),T+=`  var arg${X} = argType${X}.readValueFromPointer(args${B?"+"+B:""});\n`,B+=m[X].argPackAdvance;return T+=`  var rv = ${g===1?"new func":"func.call"}(${H.join(", ")});\n`,$.ob||(q.push("emval_returnValue"),te.push(Pr),T+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),q.push(T+`};\n`),s=Yn(q)(...te),g=`methodCaller<(${m.map(de=>de.name).join(", ")}) => ${$.name}>`,Br(wt(g,s))},r:function(s,m){return m>>>=0,s=Xe(s>>>0),m=Xe(m),ut(s[m])},e:function(s){s>>>=0,9<s&&(Te[s+1]+=1)},t:function(){return ut([])},l:function(s){s=Xe(s>>>0);for(var m=Array(s.length),g=0;g<s.length;g++)m[g]=s[g];return ut(m)},f:function(s){return ut(nt(s>>>0))},k:function(){return ut({})},h:function(s){s>>>=0;for(var m=Xe(s);m.length;){var g=m.pop();m.pop()(g)}dr(s)},g:function(s,m,g){m>>>=0,g>>>=0,s=Xe(s>>>0),m=Xe(m),g=Xe(g),s[m]=g},c:function(s,m){return m>>>=0,s=cr(s>>>0,"_emval_take_value"),s=s.readValueFromPointer(m),ut(s)},W:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getUTCSeconds(),W[m+4>>>2>>>0]=s.getUTCMinutes(),W[m+8>>>2>>>0]=s.getUTCHours(),W[m+12>>>2>>>0]=s.getUTCDate(),W[m+16>>>2>>>0]=s.getUTCMonth(),W[m+20>>>2>>>0]=s.getUTCFullYear()-1900,W[m+24>>>2>>>0]=s.getUTCDay(),W[m+28>>>2>>>0]=(s.getTime()-Date.UTC(s.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},X:function(s,m){s=-9007199254740992>s||9007199254740992<s?NaN:Number(s),m>>>=0,s=new Date(1e3*s),W[m>>>2>>>0]=s.getSeconds(),W[m+4>>>2>>>0]=s.getMinutes(),W[m+8>>>2>>>0]=s.getHours(),W[m+12>>>2>>>0]=s.getDate(),W[m+16>>>2>>>0]=s.getMonth(),W[m+20>>>2>>>0]=s.getFullYear()-1900,W[m+24>>>2>>>0]=s.getDay(),W[m+28>>>2>>>0]=(Je(s.getFullYear())?Dr:fr)[s.getMonth()]+s.getDate()-1|0,W[m+36>>>2>>>0]=-(60*s.getTimezoneOffset());var g=new Date(s.getFullYear(),6,1).getTimezoneOffset(),$=new Date(s.getFullYear(),0,1).getTimezoneOffset();W[m+32>>>2>>>0]=(g!=$&&s.getTimezoneOffset()==Math.min($,g))|0},Y:function(s){s>>>=0;var m=new Date(W[s+20>>>2>>>0]+1900,W[s+16>>>2>>>0],W[s+12>>>2>>>0],W[s+8>>>2>>>0],W[s+4>>>2>>>0],W[s>>>2>>>0],0),g=W[s+32>>>2>>>0],$=m.getTimezoneOffset(),T=new Date(m.getFullYear(),6,1).getTimezoneOffset(),B=new Date(m.getFullYear(),0,1).getTimezoneOffset(),H=Math.min(B,T);return 0>g?W[s+32>>>2>>>0]=+(T!=B&&H==$):0<g!=(H==$)&&(T=Math.max(B,T),m.setTime(m.getTime()+6e4*((0<g?H:T)-$))),W[s+24>>>2>>>0]=m.getDay(),W[s+28>>>2>>>0]=(Je(m.getFullYear())?Dr:fr)[m.getMonth()]+m.getDate()-1|0,W[s>>>2>>>0]=m.getSeconds(),W[s+4>>>2>>>0]=m.getMinutes(),W[s+8>>>2>>>0]=m.getHours(),W[s+12>>>2>>>0]=m.getDate(),W[s+16>>>2>>>0]=m.getMonth(),W[s+20>>>2>>>0]=m.getYear(),s=m.getTime(),BigInt(isNaN(s)?-1:s/1e3)},U:function(){return-52},V:function(){},N:function(s,m,g,$){g>>>=0,$>>>=0;var T=new Date().getFullYear(),B=new Date(T,0,1),H=new Date(T,6,1);T=B.getTimezoneOffset();var q=H.getTimezoneOffset();se[s>>>0>>>2>>>0]=60*Math.max(T,q),W[m>>>0>>>2>>>0]=+(T!=q),s=te=>te.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],B=s(B),H=s(H),q<T?(at(B,K,g,17),at(H,K,$,17)):(at(B,K,$,17),at(H,K,g,17))},v:()=>{ne("")},d:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},I:function(s,m,g){return s>>>=0,m=hr(m>>>0,g>>>0),Rt[s](...m)},H:()=>Date.now(),O:function(){return 4294901760},q:()=>performance.now(),M:function(s){s>>>=0;var m=K.length;if(4294901760<s)return!1;for(var g=1;4>=g;g*=2){var $=m*(1+.2/g);$=Math.min($,s+100663296);var T=Math;$=Math.max(s,$);e:{T=(T.min.call(T,4294901760,$+(65536-$%65536)%65536)-O.buffer.byteLength+65535)/65536;try{O.grow(T),Ae();var B=1;break e}catch{}B=void 0}if(B)return!0}return!1},$:function(s,m){s>>>=0,m>>>=0;var g=0;return ot().forEach(($,T)=>{var B=m+g;for(T=se[s+4*T>>>2>>>0]=B,B=0;B<$.length;++B)N[T++>>>0]=$.charCodeAt(B);N[T>>>0]=0,g+=$.length+1}),0},aa:function(s,m){s>>>=0,m>>>=0;var g=ot();se[s>>>2>>>0]=g.length;var $=0;return g.forEach(T=>$+=T.length+1),se[m>>>2>>>0]=$,0},z:()=>52,F:function(){return 52},_:function(){return 70},E:function(s,m,g,$){m>>>=0,g>>>=0,$>>>=0;for(var T=0,B=0;B<g;B++){var H=se[m>>>2>>>0],q=se[m+4>>>2>>>0];m+=8;for(var te=0;te<q;te++){var X=K[H+te>>>0],de=Zn[s];X===0||X===10?((s===1?E:P)(Kt(de,0)),de.length=0):de.push(X)}T+=q}return se[$>>>2>>>0]=T,0},fa:sn,p:function(s,m,g,$){return sn(s>>>0,m>>>0,g>>>0,$>>>0)}},pe=function(){function s(g){return pe=g.exports,pe=Qr(),pe=ln(),O=pe.ja,Ae(),ie.unshift(pe.ka),le--,le==0&&(qe!==null&&(clearInterval(qe),qe=null),G&&(g=G,G=null,g())),pe}var m={a:Qn};if(le++,r.instantiateWasm)try{return r.instantiateWasm(m,s)}catch(g){P(`Module.instantiateWasm callback failed with error: ${g}`),i(g)}return mt(m,function(g){s(g.instance)}).catch(i),{}}(),Mr=s=>(Mr=pe.la)(s);r._OrtInit=(s,m)=>(r._OrtInit=pe.ma)(s,m),r._OrtGetLastError=(s,m)=>(r._OrtGetLastError=pe.na)(s,m),r._OrtCreateSessionOptions=(s,m,g,$,T,B,H,q,te,X)=>(r._OrtCreateSessionOptions=pe.oa)(s,m,g,$,T,B,H,q,te,X),r._OrtAppendExecutionProvider=(s,m)=>(r._OrtAppendExecutionProvider=pe.pa)(s,m),r._OrtAddFreeDimensionOverride=(s,m,g)=>(r._OrtAddFreeDimensionOverride=pe.qa)(s,m,g),r._OrtAddSessionConfigEntry=(s,m,g)=>(r._OrtAddSessionConfigEntry=pe.ra)(s,m,g),r._OrtReleaseSessionOptions=s=>(r._OrtReleaseSessionOptions=pe.sa)(s),r._OrtCreateSession=(s,m,g)=>(r._OrtCreateSession=pe.ta)(s,m,g),r._OrtReleaseSession=s=>(r._OrtReleaseSession=pe.ua)(s),r._OrtGetInputOutputCount=(s,m,g)=>(r._OrtGetInputOutputCount=pe.va)(s,m,g),r._OrtGetInputName=(s,m)=>(r._OrtGetInputName=pe.wa)(s,m),r._OrtGetOutputName=(s,m)=>(r._OrtGetOutputName=pe.xa)(s,m),r._OrtFree=s=>(r._OrtFree=pe.ya)(s),r._OrtCreateTensor=(s,m,g,$,T,B)=>(r._OrtCreateTensor=pe.za)(s,m,g,$,T,B),r._OrtGetTensorData=(s,m,g,$,T)=>(r._OrtGetTensorData=pe.Aa)(s,m,g,$,T),r._OrtReleaseTensor=s=>(r._OrtReleaseTensor=pe.Ba)(s),r._OrtCreateRunOptions=(s,m,g,$)=>(r._OrtCreateRunOptions=pe.Ca)(s,m,g,$),r._OrtAddRunConfigEntry=(s,m,g)=>(r._OrtAddRunConfigEntry=pe.Da)(s,m,g),r._OrtReleaseRunOptions=s=>(r._OrtReleaseRunOptions=pe.Ea)(s),r._OrtCreateBinding=s=>(r._OrtCreateBinding=pe.Fa)(s),r._OrtBindInput=(s,m,g)=>(r._OrtBindInput=pe.Ga)(s,m,g),r._OrtBindOutput=(s,m,g,$)=>(r._OrtBindOutput=pe.Ha)(s,m,g,$),r._OrtClearBoundOutputs=s=>(r._OrtClearBoundOutputs=pe.Ia)(s),r._OrtReleaseBinding=s=>(r._OrtReleaseBinding=pe.Ja)(s),r._OrtRunWithBinding=(s,m,g,$,T)=>(r._OrtRunWithBinding=pe.Ka)(s,m,g,$,T),r._OrtRun=(s,m,g,$,T,B,H,q)=>(r._OrtRun=pe.La)(s,m,g,$,T,B,H,q),r._OrtEndProfiling=s=>(r._OrtEndProfiling=pe.Ma)(s),r._JsepOutput=(s,m,g)=>(r._JsepOutput=pe.Na)(s,m,g),r._JsepGetNodeName=s=>(r._JsepGetNodeName=pe.Oa)(s);var Nt=r._malloc=s=>(Nt=r._malloc=pe.Pa)(s),rt=r._free=s=>(rt=r._free=pe.Qa)(s),yr=s=>(yr=pe.Sa)(s),br=s=>(br=pe.Ta)(s),Ur=()=>(Ur=pe.Ua)(),Jt=s=>(Jt=pe.Wa)(s),dn=()=>(dn=pe.Xa)(),vt=s=>(vt=pe.Ya)(s),ct=()=>(ct=pe.Za)();r.___start_em_js=837952,r.___stop_em_js=838113;function ln(){var s=pe;s=Object.assign({},s);var m=g=>$=>g($)>>>0;return s.la=m(s.la),s.Pa=m(s.Pa),s.Ta=m(s.Ta),s.Ua=(g=>()=>g()>>>0)(s.Ua),s}r.stackSave=()=>Ur(),r.stackRestore=s=>yr(s),r.stackAlloc=s=>br(s),r.UTF8ToString=je,r.stringToUTF8=(s,m,g)=>at(s,K,m,g),r.lengthBytesUTF8=Wt;var Dt;G=function s(){Dt||Vr(),Dt||(G=s)};function Vr(){if(!(0<le)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var s=r.preRun.shift();me.unshift(s)}for(;0<me.length;)me.shift()(r);if(!(0<le||Dt||(Dt=!0,r.calledRun=!0,R))){for(;0<ie.length;)ie.shift()(r);for(o(r);0<ue.length;)ue.shift()(r)}}}return Vr(),u}})();typeof Ti=="object"&&typeof po=="object"?po.exports=Ii:typeof define=="function"&&define.amd&&define([],()=>Ii)});var Pi=Wr(()=>{});var ki=Wr(()=>{});var Oi={};gn(Oi,{cpus:()=>ll});var ll,Ri=Y(()=>{ll=void 0});var zi=Wr((Di,mo)=>{"use strict";var Bi=(()=>{var e=typeof document<"u"?document.currentScript?.src:void 0;return typeof __filename<"u"&&(e||=__filename),function(t={}){function r(){return ae.buffer!=ue.buffer&&Ne(),ue}function o(){return ae.buffer!=ue.buffer&&Ne(),le}function i(){return ae.buffer!=ue.buffer&&Ne(),qe}function u(){return ae.buffer!=ue.buffer&&Ne(),G}function a(){return ae.buffer!=ue.buffer&&Ne(),ne}function c(){return ae.buffer!=ue.buffer&&Ne(),xe}function p(){return ae.buffer!=ue.buffer&&Ne(),Ke}function h(){return ae.buffer!=ue.buffer&&Ne(),Ut}var d=t,y,w,_=new Promise((n,l)=>{y=n,w=l});d.mountExternalData=(n,l)=>{(d.Db||(d.Db=new Map)).set(n,l)},d.unmountExternalData=()=>{delete d.Db};let v=()=>{let n=(f,b,C)=>(...k)=>{let V=ct,F=b?.();k=f(...k);let re=b?.();return F!==re&&(f=re,C(F),b=C=null),ct!=V?T():k},l=f=>async(...b)=>{try{if(d.Cb)throw Error("Session already started");let C=d.Cb={ec:b[0],errors:[]},k=await f(...b);if(d.Cb!==C)throw Error("Session mismatch");d.Kb?.flush();let V=C.errors;if(0<V.length){let F=await Promise.all(V);if(F=F.filter(re=>re),0<F.length)throw Error(F.join(`\n`))}return k}finally{d.Cb=null}};d._OrtCreateSession=n(d._OrtCreateSession,()=>d._OrtCreateSession,f=>d._OrtCreateSession=f),d._OrtRun=l(n(d._OrtRun,()=>d._OrtRun,f=>d._OrtRun=f)),d._OrtRunWithBinding=l(n(d._OrtRunWithBinding,()=>d._OrtRunWithBinding,f=>d._OrtRunWithBinding=f)),d._OrtBindInput=n(d._OrtBindInput,()=>d._OrtBindInput,f=>d._OrtBindInput=f),v=void 0};d.jsepInit=(n,l)=>{if(v?.(),n==="webgpu"){[d.Kb,d.Wb,d.$b,d.Lb,d.Zb,d.ob,d.ac,d.cc,d.Xb,d.Yb,d.bc]=l;let f=d.Kb;d.jsepRegisterBuffer=(b,C,k,V)=>f.registerBuffer(b,C,k,V),d.jsepGetBuffer=b=>f.getBuffer(b),d.jsepCreateDownloader=(b,C,k)=>f.createDownloader(b,C,k),d.jsepOnReleaseSession=b=>{f.onReleaseSession(b)},d.jsepOnRunStart=b=>f.onRunStart(b)}};var S=Object.assign({},d),A="./this.program",I=(n,l)=>{throw l},x=typeof window=="object",E=typeof importScripts=="function",P=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",O=d.ENVIRONMENT_IS_PTHREAD||!1,R="";function L(n){return d.locateFile?d.locateFile(n,R):R+n}var N,K,Q;if(P){var he=(uo(),wr(so)),W=(co(),wr(lo));R=E?W.dirname(R)+"/":__dirname+"/",N=(n,l)=>(n=Wt(n)?new URL(n):W.normalize(n),he.readFileSync(n,l?void 0:"utf8")),Q=n=>(n=N(n,!0),n.buffer||(n=new Uint8Array(n)),n),K=(n,l,f,b=!0)=>{n=Wt(n)?new URL(n):W.normalize(n),he.readFile(n,b?void 0:"utf8",(C,k)=>{C?f(C):l(b?k.buffer:k)})},!d.thisProgram&&1<process.argv.length&&(A=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),I=(n,l)=>{throw process.exitCode=n,l},global.Worker=Pi().Worker}else(x||E)&&(E?R=self.location.href:typeof document<"u"&&document.currentScript&&(R=document.currentScript.src),typeof e<"u"&&e&&(R=e),R.startsWith("blob:")?R="":R=R.substr(0,R.replace(/[?#].*/,"").lastIndexOf("/")+1),P||(N=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.send(null),l.responseText},E&&(Q=n=>{var l=new XMLHttpRequest;return l.open("GET",n,!1),l.responseType="arraybuffer",l.send(null),new Uint8Array(l.response)}),K=(n,l,f)=>{var b=new XMLHttpRequest;b.open("GET",n,!0),b.responseType="arraybuffer",b.onload=()=>{b.status==200||b.status==0&&b.response?l(b.response):f()},b.onerror=f,b.send(null)}));P&&typeof performance>"u"&&(global.performance=ki().performance);var se=console.log.bind(console),Ce=console.error.bind(console);P&&(se=(...n)=>he.writeSync(1,n.join(" ")+`\n`),Ce=(...n)=>he.writeSync(2,n.join(" ")+`\n`));var We=se,ee=Ce;Object.assign(d,S),S=null;var ae,Ae,me=!1,ie,ue,le,qe,G,ne,xe,Ke,Be,Ge,Ut;function Ne(){var n=ae.buffer;d.HEAP8=ue=new Int8Array(n),d.HEAP16=qe=new Int16Array(n),d.HEAPU8=le=new Uint8Array(n),d.HEAPU16=G=new Uint16Array(n),d.HEAP32=ne=new Int32Array(n),d.HEAPU32=xe=new Uint32Array(n),d.HEAPF32=Ke=new Float32Array(n),d.HEAPF64=Ut=new Float64Array(n),d.HEAP64=Be=new BigInt64Array(n),d.HEAPU64=Ge=new BigUint64Array(n)}var Ye=16777216;if(O)ae=d.wasmMemory;else if(d.wasmMemory)ae=d.wasmMemory;else if(ae=new WebAssembly.Memory({initial:Ye/65536,maximum:65536,shared:!0}),!(ae.buffer instanceof SharedArrayBuffer))throw ee("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),P&&ee("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");Ne(),Ye=ae.buffer.byteLength;var mt=[],Rt=[],qt=[],Vt=0,sr=null,jt=null;function xr(){if(Vt--,Vt==0&&(sr!==null&&(clearInterval(sr),sr=null),jt)){var n=jt;jt=null,n()}}function Kt(n){throw n="Aborted("+n+")",ee(n),me=!0,ie=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),w(n),n}var je=n=>n.startsWith("data:application/octet-stream;base64,"),Wt=n=>n.startsWith("file://"),at;at="ort-wasm-simd-threaded.wasm",je(at)||(at=L(at));function Cr(n){if(Q)return Q(n);throw"both async and sync fetching of the wasm failed"}function ft(n){if(x||E){if(typeof fetch=="function"&&!Wt(n))return fetch(n,{credentials:"same-origin"}).then(l=>{if(!l.ok)throw`failed to load wasm binary file at \'${n}\'`;return l.arrayBuffer()}).catch(()=>Cr(n));if(K)return new Promise((l,f)=>{K(n,b=>l(new Uint8Array(b)),f)})}return Promise.resolve().then(()=>Cr(n))}function ur(n,l,f){return ft(n).then(b=>WebAssembly.instantiate(b,l)).then(f,b=>{ee(`failed to asynchronously prepare wasm: ${b}`),Kt(b)})}function Ar(n,l){var f=at;return typeof WebAssembly.instantiateStreaming!="function"||je(f)||Wt(f)||P||typeof fetch!="function"?ur(f,n,l):fetch(f,{credentials:"same-origin"}).then(b=>WebAssembly.instantiateStreaming(b,n).then(l,function(C){return ee(`wasm streaming compile failed: ${C}`),ee("falling back to ArrayBuffer instantiation"),ur(f,n,l)}))}var Ir={826468:(n,l,f,b)=>{if(typeof d>"u"||!d.Db)return 1;if(n=He(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=d.Db.get(n),!n)return 2;if(l>>>=0,f>>>=0,b>>>=0,l+f>n.byteLength)return 3;try{return o().set(n.subarray(l,l+f),b>>>0),0}catch{return 4}},826969:()=>{d.Xb()},827e3:()=>{d.Yb()},827029:()=>{d.bc()},827054:n=>d.Wb(n),827087:n=>d.$b(n),827119:(n,l,f)=>{d.Lb(n,l,f,!0)},827158:(n,l,f)=>{d.Lb(n,l,f)},827191:n=>{d.ob("Abs",n,void 0)},827242:n=>{d.ob("Neg",n,void 0)},827293:n=>{d.ob("Floor",n,void 0)},827346:n=>{d.ob("Ceil",n,void 0)},827398:n=>{d.ob("Reciprocal",n,void 0)},827456:n=>{d.ob("Sqrt",n,void 0)},827508:n=>{d.ob("Exp",n,void 0)},827559:n=>{d.ob("Erf",n,void 0)},827610:n=>{d.ob("Sigmoid",n,void 0)},827665:(n,l,f)=>{d.ob("HardSigmoid",n,{alpha:l,beta:f})},827744:n=>{d.ob("Log",n,void 0)},827795:n=>{d.ob("Sin",n,void 0)},827846:n=>{d.ob("Cos",n,void 0)},827897:n=>{d.ob("Tan",n,void 0)},827948:n=>{d.ob("Asin",n,void 0)},828e3:n=>{d.ob("Acos",n,void 0)},828052:n=>{d.ob("Atan",n,void 0)},828104:n=>{d.ob("Sinh",n,void 0)},828156:n=>{d.ob("Cosh",n,void 0)},828208:n=>{d.ob("Asinh",n,void 0)},828261:n=>{d.ob("Acosh",n,void 0)},828314:n=>{d.ob("Atanh",n,void 0)},828367:n=>{d.ob("Tanh",n,void 0)},828419:n=>{d.ob("Not",n,void 0)},828470:(n,l,f)=>{d.ob("Clip",n,{min:l,max:f})},828539:n=>{d.ob("Clip",n,void 0)},828591:(n,l)=>{d.ob("Elu",n,{alpha:l})},828649:n=>{d.ob("Relu",n,void 0)},828701:(n,l)=>{d.ob("LeakyRelu",n,{alpha:l})},828765:(n,l)=>{d.ob("ThresholdedRelu",n,{alpha:l})},828835:(n,l)=>{d.ob("Cast",n,{to:l})},828893:n=>{d.ob("Add",n,void 0)},828944:n=>{d.ob("Sub",n,void 0)},828995:n=>{d.ob("Mul",n,void 0)},829046:n=>{d.ob("Div",n,void 0)},829097:n=>{d.ob("Pow",n,void 0)},829148:n=>{d.ob("Equal",n,void 0)},829201:n=>{d.ob("Greater",n,void 0)},829256:n=>{d.ob("GreaterOrEqual",n,void 0)},829318:n=>{d.ob("Less",n,void 0)},829370:n=>{d.ob("LessOrEqual",n,void 0)},829429:(n,l,f,b,C)=>{d.ob("ReduceMean",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829588:(n,l,f,b,C)=>{d.ob("ReduceMax",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829746:(n,l,f,b,C)=>{d.ob("ReduceMin",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},829904:(n,l,f,b,C)=>{d.ob("ReduceProd",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830063:(n,l,f,b,C)=>{d.ob("ReduceSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830221:(n,l,f,b,C)=>{d.ob("ReduceL1",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830378:(n,l,f,b,C)=>{d.ob("ReduceL2",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830535:(n,l,f,b,C)=>{d.ob("ReduceLogSum",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830696:(n,l,f,b,C)=>{d.ob("ReduceSumSquare",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},830860:(n,l,f,b,C)=>{d.ob("ReduceLogSumExp",n,{keepDims:!!l,noopWithEmptyAxes:!!f,axes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},831024:n=>{d.ob("Where",n,void 0)},831077:(n,l,f)=>{d.ob("Transpose",n,{perm:l?Array.from(a().subarray(l>>>0,f>>>0)):[]})},831185:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831318:(n,l,f,b)=>{d.ob("DepthToSpace",n,{blocksize:l,mode:He(f),format:b?"NHWC":"NCHW"})},831451:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},831852:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},832417:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we)=>{d.ob("ConvTranspose",n,{format:re?"NHWC":"NCHW",autoPad:l,dilations:[f],group:b,kernelShape:[C],pads:[k,V],strides:[F],wIsConst:()=>!!r()[J>>>0],outputPadding:ce?Array.from(a().subarray(ce>>>0,Re>>>0)):[],outputShape:ze?Array.from(a().subarray(ze>>>0,z>>>0)):[],activation:He(we)})},832818:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z)=>{d.ob("ConvTranspose",n,{format:F?"NHWC":"NCHW",autoPad:l,dilations:Array.from(a().subarray(f>>>0,(f>>>0)+2>>>0)),group:b,kernelShape:Array.from(a().subarray(C>>>0,(C>>>0)+2>>>0)),pads:Array.from(a().subarray(k>>>0,(k>>>0)+4>>>0)),strides:Array.from(a().subarray(V>>>0,(V>>>0)+2>>>0)),wIsConst:()=>!!r()[re>>>0],outputPadding:J?Array.from(a().subarray(J>>>0,ce>>>0)):[],outputShape:Re?Array.from(a().subarray(Re>>>0,ze>>>0)):[],activation:He(z)})},833383:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833474:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},833758:(n,l)=>{d.ob("GlobalAveragePool",n,{format:l?"NHWC":"NCHW"})},833849:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("AveragePool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834133:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834220:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834500:(n,l)=>{d.ob("GlobalMaxPool",n,{format:l?"NHWC":"NCHW"})},834587:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("MaxPool",n,{format:Pe?"NHWC":"NCHW",auto_pad:l,ceil_mode:f,count_include_pad:b,storage_order:C,dilations:[k,V],kernel_shape:[F,re],pads:[J,ce,Re,ze],strides:[z,we]})},834867:(n,l,f,b,C)=>{d.ob("Gemm",n,{alpha:l,beta:f,transA:b,transB:C})},834971:n=>{d.ob("MatMul",n,void 0)},835025:(n,l,f,b)=>{d.ob("ArgMax",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835133:(n,l,f,b)=>{d.ob("ArgMin",n,{keepDims:!!l,selectLastIndex:!!f,axis:b})},835241:(n,l)=>{d.ob("Softmax",n,{axis:l})},835304:(n,l)=>{d.ob("Concat",n,{axis:l})},835364:(n,l,f,b,C)=>{d.ob("Split",n,{axis:l,numOutputs:f,splitSizes:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},835504:n=>{d.ob("Expand",n,void 0)},835558:(n,l)=>{d.ob("Gather",n,{axis:Number(l)})},835629:(n,l)=>{d.ob("GatherElements",n,{axis:Number(l)})},835708:(n,l,f,b,C,k,V,F,re,J,ce)=>{d.ob("Resize",n,{antialias:l,axes:f?Array.from(a().subarray(f>>>0,b>>>0)):[],coordinateTransformMode:He(C),cubicCoeffA:k,excludeOutside:V,extrapolationValue:F,keepAspectRatioPolicy:He(re),mode:He(J),nearestMode:He(ce)})},836054:(n,l,f,b,C,k,V)=>{d.ob("Slice",n,{starts:l?Array.from(a().subarray(l>>>0,f>>>0)):[],ends:b?Array.from(a().subarray(b>>>0,C>>>0)):[],axes:k?Array.from(a().subarray(k>>>0,V>>>0)):[]})},836270:n=>{d.ob("Tile",n,void 0)},836322:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},836433:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836547:(n,l,f)=>{d.ob("InstanceNormalization",n,{epsilon:l,format:f?"NHWC":"NCHW"})},836661:n=>{d.ob("Range",n,void 0)},836714:(n,l)=>{d.ob("Einsum",n,{equation:He(l)})},836795:(n,l,f,b,C)=>{d.ob("Pad",n,{mode:l,value:f,pads:b?Array.from(a().subarray(b>>>0,C>>>0)):[]})},836922:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837091:(n,l,f,b,C,k)=>{d.ob("BatchNormalization",n,{epsilon:l,momentum:f,spatial:!!C,trainingMode:!!b,format:k?"NHWC":"NCHW"})},837260:(n,l,f)=>{d.ob("CumSum",n,{exclusive:Number(l),reverse:Number(f)})},837357:(n,l,f,b,C,k,V,F,re)=>{d.ob("Attention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k,qkvHiddenSizes:V?Array.from(a().subarray(Number(F)>>>0,Number(F)+V>>>0)):[],pastPresentShareBuffer:!!re})},837629:n=>{d.ob("BiasAdd",n,void 0)},837684:n=>{d.ob("BiasSplitGelu",n,void 0)},837745:n=>{d.ob("FastGelu",n,void 0)},837801:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze)=>{d.ob("Conv",n,{format:re?"NHWC":"NCHW",auto_pad:l,dilations:[f],group:b,kernel_shape:[C],pads:k?Array.from(a().subarray(k>>>0,V>>>0)):[],strides:[F],w_is_const:()=>!!r()[J>>>0],activation:He(ce),activation_params:Re?Array.from(p().subarray(Re>>>0,ze>>>0)):[]})},838171:(n,l,f,b,C,k,V,F,re,J,ce,Re,ze,z,we,Pe)=>{d.ob("Conv",n,{format:Re?"NHWC":"NCHW",auto_pad:l,dilations:[f,b],group:C,kernel_shape:[k,V],pads:F?Array.from(a().subarray(F>>>0,re>>>0)):[],strides:[J,ce],w_is_const:()=>!!r()[ze>>>0],activation:He(z),activation_params:we?Array.from(p().subarray(we>>>0,Pe>>>0)):[]})},838562:n=>{d.ob("Gelu",n,void 0)},838614:(n,l,f,b,C,k)=>{d.ob("MatMulNBits",n,{k:l,n:f,accuracyLevel:b,bits:C,blockSize:k})},838741:(n,l,f,b,C,k)=>{d.ob("MultiHeadAttention",n,{numHeads:l,isUnidirectional:f,maskFilterValue:b,scale:C,doRotary:k})},838900:(n,l,f,b,C)=>{d.ob("RotaryEmbedding",n,{interleaved:!!l,numHeads:f,rotaryEmbeddingDim:b,scale:C})},839039:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839141:(n,l,f)=>{d.ob("SkipLayerNormalization",n,{epsilon:l,simplified:!!f})},839243:(n,l,f,b)=>{d.ob("LayerNormalization",n,{axis:l,epsilon:f,simplified:!!b})},839354:n=>{d.ac(n)},839388:(n,l)=>d.cc(n,l,d.Cb.ec,d.Cb.errors)};function st(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var Tr=n=>{n.terminate(),n.onmessage=()=>{}},ht=n=>{ge.xb.length==0&&(lr(),ge.Mb(ge.xb[0]));var l=ge.xb.pop();if(!l)return 6;ge.yb.push(l),ge.ub[n.wb]=l,l.wb=n.wb;var f={cmd:"run",start_routine:n.fc,arg:n.Rb,pthread_ptr:n.wb};return P&&l.unref(),l.postMessage(f,n.mc),0},bt=0,Er=n=>{var l=io();return n=n(),fn(l),n},Te=(n,l,...f)=>Er(()=>{for(var b=2*f.length,C=oo(8*b),k=C>>>3,V=0;V<f.length;V++){var F=f[V];typeof F=="bigint"?(Be[k+2*V]=1n,Be[k+2*V+1]=F):(Be[k+2*V]=0n,h()[k+2*V+1>>>0]=F)}return gi(n,0,b,C,l)});function dr(n){if(O)return Te(0,1,n);ie=n,0<bt||(ge.hc(),d.onExit?.(n),me=!0),I(n,new st(n))}var Xe=n=>{if(ie=n,O)throw jr(n),"unwind";dr(n)};function ut(){for(var n=d.numThreads;n--;)lr();mt.unshift(()=>{Vt++,Fn(()=>xr())})}function lr(){var n=L("ort-wasm-simd-threaded.worker.js");n=new Worker(n),ge.xb.push(n)}function Fn(n){O?n():Promise.all(ge.xb.map(ge.Mb)).then(n)}var ge={xb:[],yb:[],Qb:[],ub:{},Gb(){O?(ge.receiveObjectTransfer=ge.dc,ge.threadInitTLS=ge.Pb,ge.setExitStatus=ge.Ob):ut()},Ob:n=>ie=n,pc:["$terminateWorker"],hc:()=>{for(var n of ge.yb)Tr(n);for(n of ge.xb)Tr(n);ge.xb=[],ge.yb=[],ge.ub=[]},Nb:n=>{var l=n.wb;delete ge.ub[l],ge.xb.push(n),ge.yb.splice(ge.yb.indexOf(n),1),n.wb=0,ro(l)},dc(){},Pb(){ge.Qb.forEach(n=>n())},Mb:n=>new Promise(l=>{n.onmessage=k=>{k=k.data;var V=k.cmd;if(k.targetThread&&k.targetThread!=pn()){var F=ge.ub[k.targetThread];F?F.postMessage(k,k.transferList):ee(`Internal error! Worker sent a message "${V}" to target pthread ${k.targetThread}, but that thread no longer exists!`)}else V==="checkMailbox"?rt():V==="spawnThread"?ht(k):V==="cleanupThread"?ge.Nb(ge.ub[k.thread]):V==="killThread"?(k=k.thread,V=ge.ub[k],delete ge.ub[k],Tr(V),ro(k),ge.yb.splice(ge.yb.indexOf(V),1),V.wb=0):V==="cancelThread"?ge.ub[k.thread].postMessage({cmd:"cancel"}):V==="loaded"?(n.loaded=!0,P&&!n.wb&&n.unref(),l(n)):V==="alert"?alert(`Thread ${k.threadId}: ${k.text}`):k.target==="setimmediate"?n.postMessage(k):V==="callHandler"?d[k.handler](...k.args):V&&ee(`worker sent an unknown command ${V}`)},n.onerror=k=>{throw ee(`worker sent an error! ${k.filename}:${k.lineno}: ${k.message}`),k},P&&(n.on("message",k=>n.onmessage({data:k})),n.on("error",k=>n.onerror(k)));var f=[],b=["onExit"],C;for(C of b)d.hasOwnProperty(C)&&f.push(C);n.postMessage({cmd:"load",handlers:f,urlOrBlob:d.mainScriptUrlOrBlob||e,wasmMemory:ae,wasmModule:Ae})})};d.PThread=ge;var Yt=n=>{for(;0<n.length;)n.shift()(d)};d.establishStackSpace=()=>{var n=pn(),l=c()[n+52>>>2>>>0];n=c()[n+56>>>2>>>0],bi(l,l-n),fn(l)};function jr(n){if(O)return Te(1,0,n);Xe(n)}d.invokeEntryPoint=(n,l)=>{bt=0,n=wi(n,l),0<bt?ge.Ob(n):no(n)};class qn{constructor(l){this.Ib=l-24}Gb(l,f){c()[this.Ib+16>>>2>>>0]=0,c()[this.Ib+4>>>2>>>0]=l,c()[this.Ib+8>>>2>>>0]=f}}var Kr=0,jn=0;function Yr(n,l,f,b){return O?Te(2,1,n,l,f,b):Zr(n,l,f,b)}function Zr(n,l,f,b){if(n>>>=0,l>>>=0,f>>>=0,b>>>=0,typeof SharedArrayBuffer>"u")return ee("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var C=[];return O&&C.length===0?Yr(n,l,f,b):(n={fc:f,wb:n,Rb:b,mc:C},O?(n.oc="spawnThread",postMessage(n,C),0):ht(n))}var cr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Pr=(n,l,f)=>{l>>>=0;var b=l+f;for(f=l;n[f]&&!(f>=b);)++f;if(16<f-l&&n.buffer&&cr)return cr.decode(n.buffer instanceof SharedArrayBuffer?n.slice(l,f):n.subarray(l,f));for(b="";l<f;){var C=n[l++];if(C&128){var k=n[l++]&63;if((C&224)==192)b+=String.fromCharCode((C&31)<<6|k);else{var V=n[l++]&63;C=(C&240)==224?(C&15)<<12|k<<6|V:(C&7)<<18|k<<12|V<<6|n[l++]&63,65536>C?b+=String.fromCharCode(C):(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023))}}else b+=String.fromCharCode(C)}return b},He=(n,l)=>(n>>>=0)?Pr(o(),n,l):"";function Xr(n,l,f){return O?Te(3,1,n,l,f):0}function Qr(n,l){if(O)return Te(4,1,n,l)}var gt=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);127>=b?l++:2047>=b?l+=2:55296<=b&&57343>=b?(l+=4,++f):l+=3}return l},dt=(n,l,f,b)=>{if(f>>>=0,!(0<b))return 0;var C=f;b=f+b-1;for(var k=0;k<n.length;++k){var V=n.charCodeAt(k);if(55296<=V&&57343>=V){var F=n.charCodeAt(++k);V=65536+((V&1023)<<10)|F&1023}if(127>=V){if(f>=b)break;l[f++>>>0]=V}else{if(2047>=V){if(f+1>=b)break;l[f++>>>0]=192|V>>6}else{if(65535>=V){if(f+2>=b)break;l[f++>>>0]=224|V>>12}else{if(f+3>=b)break;l[f++>>>0]=240|V>>18,l[f++>>>0]=128|V>>12&63}l[f++>>>0]=128|V>>6&63}l[f++>>>0]=128|V&63}}return l[f>>>0]=0,f-C},Bt=(n,l,f)=>dt(n,o(),l,f);function Zt(n,l){if(O)return Te(5,1,n,l)}function kr(n,l,f){if(O)return Te(6,1,n,l,f)}function Or(n,l,f){return O?Te(7,1,n,l,f):0}function Jr(n,l){if(O)return Te(8,1,n,l)}function pr(n,l,f){if(O)return Te(9,1,n,l,f)}function en(n,l,f,b){if(O)return Te(10,1,n,l,f,b)}function tn(n,l,f,b){if(O)return Te(11,1,n,l,f,b)}function rn(n,l,f,b){if(O)return Te(12,1,n,l,f,b)}function nn(n){if(O)return Te(13,1,n)}function Rr(n,l){if(O)return Te(14,1,n,l)}function Xt(n,l,f){if(O)return Te(15,1,n,l,f)}var on,nt=n=>{for(var l="";o()[n>>>0];)l+=on[o()[n++>>>0]];return l},mr={},Br={},Kn={},wt;function Yn(n,l,f={}){var b=l.name;if(!n)throw new wt(`type "${b}" must have a positive integer typeid pointer`);if(Br.hasOwnProperty(n)){if(f.Ub)return;throw new wt(`Cannot register type \'${b}\' twice`)}Br[n]=l,delete Kn[n],mr.hasOwnProperty(n)&&(l=mr[n],delete mr[n],l.forEach(C=>C()))}function Je(n,l,f={}){if(!("argPackAdvance"in l))throw new TypeError("registerType registeredInstance requires argPackAdvance");return Yn(n,l,f)}var Dr=(n,l,f)=>{switch(l){case 1:return f?b=>r()[b>>>0]:b=>o()[b>>>0];case 2:return f?b=>i()[b>>>1>>>0]:b=>u()[b>>>1>>>0];case 4:return f?b=>a()[b>>>2>>>0]:b=>c()[b>>>2>>>0];case 8:return f?b=>Be[b>>>3]:b=>Ge[b>>>3];default:throw new TypeError(`invalid integer width (${l}): ${n}`)}},fr=[],lt=[];function hr(n){n>>>=0,9<n&&--lt[n+1]===0&&(lt[n]=void 0,fr.push(n))}var Qe=n=>{if(!n)throw new wt("Cannot use deleted val. handle = "+n);return lt[n]},ot=n=>{switch(n){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let l=fr.pop()||lt.length;return lt[l]=n,lt[l+1]=1,l}};function Qt(n){return this.fromWireType(c()[n>>>2>>>0])}var Zn={name:"emscripten::val",fromWireType:n=>{var l=Qe(n);return hr(n),l},toWireType:(n,l)=>ot(l),argPackAdvance:8,readValueFromPointer:Qt,Bb:null},an=(n,l)=>{switch(l){case 4:return function(f){return this.fromWireType(p()[f>>>2>>>0])};case 8:return function(f){return this.fromWireType(h()[f>>>3>>>0])};default:throw new TypeError(`invalid float width (${l}): ${n}`)}},zr=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Xn=(n,l)=>{for(var f=n>>1,b=f+l/2;!(f>=b)&&u()[f>>>0];)++f;if(f<<=1,32<f-n&&zr)return zr.decode(o().slice(n,f));for(f="",b=0;!(b>=l/2);++b){var C=i()[n+2*b>>>1>>>0];if(C==0)break;f+=String.fromCharCode(C)}return f},sn=(n,l,f)=>{if(f??=2147483647,2>f)return 0;f-=2;var b=l;f=f<2*n.length?f/2:n.length;for(var C=0;C<f;++C){var k=n.charCodeAt(C);i()[l>>>1>>>0]=k,l+=2}return i()[l>>>1>>>0]=0,l-b},un=n=>2*n.length,gr=(n,l)=>{for(var f=0,b="";!(f>=l/4);){var C=a()[n+4*f>>>2>>>0];if(C==0)break;++f,65536<=C?(C-=65536,b+=String.fromCharCode(55296|C>>10,56320|C&1023)):b+=String.fromCharCode(C)}return b},Qn=(n,l,f)=>{if(l>>>=0,f??=2147483647,4>f)return 0;var b=l;f=b+f-4;for(var C=0;C<n.length;++C){var k=n.charCodeAt(C);if(55296<=k&&57343>=k){var V=n.charCodeAt(++C);k=65536+((k&1023)<<10)|V&1023}if(a()[l>>>2>>>0]=k,l+=4,l+4>f)break}return a()[l>>>2>>>0]=0,l-b},pe=n=>{for(var l=0,f=0;f<n.length;++f){var b=n.charCodeAt(f);55296<=b&&57343>=b&&++f,l+=4}return l},Mr=n=>{if(!me)try{if(n(),!(0<bt))try{O?no(ie):Xe(ie)}catch(l){l instanceof st||l=="unwind"||I(1,l)}}catch(l){l instanceof st||l=="unwind"||I(1,l)}};function Nt(n){n>>>=0,typeof Atomics.nc=="function"&&(Atomics.nc(a(),n>>>2,n).value.then(rt),n+=128,Atomics.store(a(),n>>>2,1))}d.__emscripten_thread_mailbox_await=Nt;var rt=()=>{var n=pn();n&&(Nt(n),Mr(yi))};d.checkMailbox=rt;var yr=[],br=(n,l)=>{var f=Br[n];if(f===void 0)throw n=fi(n),f=nt(n),At(n),new wt(`${l} has unknown type ${f}`);return f},Ur=(n,l,f)=>{var b=[];return n=n.toWireType(b,f),b.length&&(c()[l>>>2>>>0]=ot(b)),n},Jt=n=>{try{n()}catch(l){Kt(l)}};function dn(){var n=oe,l={};for(let[f,b]of Object.entries(n))l[f]=typeof b=="function"?(...C)=>{Dt.push(f);try{return b(...C)}finally{me||(Dt.pop(),ct&&vt===1&&Dt.length===0&&(vt=0,bt+=1,Jt($i),typeof Fibers<"u"&&Fibers.rc()))}}:b;return l}var vt=0,ct=null,ln=0,Dt=[],Vr={},s={},m=0,g=null,$=[];function T(){return new Promise((n,l)=>{g={resolve:n,reject:l}})}function B(){var n=mn(65548),l=n+12;c()[n>>>2>>>0]=l,c()[n+4>>>2>>>0]=l+65536,l=Dt[0];var f=Vr[l];return f===void 0&&(f=m++,Vr[l]=f,s[f]=l),l=f,a()[n+8>>>2>>>0]=l,n}function H(){var n=a()[ct+8>>>2>>>0];return n=oe[s[n]],--bt,n()}function q(n){if(!me){if(vt===0){var l=!1,f=!1;n((b=0)=>{if(!me&&(ln=b,l=!0,f)){vt=2,Jt(()=>_i(ct)),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.resume(),b=!1;try{var C=H()}catch(F){C=F,b=!0}var k=!1;if(!ct){var V=g;V&&(g=null,(b?V.reject:V.resolve)(C),k=!0)}if(b&&!k)throw C}}),f=!0,l||(vt=1,ct=B(),typeof Browser<"u"&&Browser.Hb.Tb&&Browser.Hb.pause(),Jt(()=>vi(ct)))}else vt===2?(vt=0,Jt(Si),At(ct),ct=null,$.forEach(Mr)):Kt(`invalid state: ${vt}`);return ln}}function te(n){return q(l=>{n().then(l)})}var X=[],de={},Ee=n=>{var l=de[n];return l===void 0?nt(n):l},Oe=()=>typeof globalThis=="object"?globalThis:Function("return this")(),D=n=>{var l=X.length;return X.push(n),l},be=(n,l)=>{for(var f=Array(n),b=0;b<n;++b)f[b]=br(c()[l+4*b>>>2>>>0],"parameter "+b);return f},Ie=(n,l)=>Object.defineProperty(l,"name",{value:n});function zt(n){var l=Function;if(!(l instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof l} which is not a function`);var f=Ie(l.name||"unknownFunctionName",function(){});return f.prototype=l.prototype,f=new f,n=l.apply(f,n),n instanceof Object?n:f}var Mt=n=>n%4===0&&(n%100!==0||n%400===0),Qo=[0,31,60,91,121,152,182,213,244,274,305,335],Jo=[0,31,59,90,120,151,181,212,243,273,304,334];function ei(n,l,f,b,C,k,V){return O?Te(16,1,n,l,f,b,C,k,V):-52}function ti(n,l,f,b,C,k){if(O)return Te(17,1,n,l,f,b,C,k)}var Jn=[],ri=(n,l)=>{Jn.length=0;for(var f;f=o()[n++>>>0];){var b=f!=105;b&=f!=112,l+=b&&l%8?4:0,Jn.push(f==112?c()[l>>>2>>>0]:f==106?Be[l>>>3]:f==105?a()[l>>>2>>>0]:h()[l>>>3>>>0]),l+=b?8:4}return Jn},eo={},ni=()=>{if(!to){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:A||"./this.program"},l;for(l in eo)eo[l]===void 0?delete n[l]:n[l]=eo[l];var f=[];for(l in n)f.push(`${l}=${n[l]}`);to=f}return to},to;function oi(n,l){if(O)return Te(18,1,n,l);n>>>=0,l>>>=0;var f=0;return ni().forEach((b,C)=>{var k=l+f;for(C=c()[n+4*C>>>2>>>0]=k,k=0;k<b.length;++k)r()[C++>>>0]=b.charCodeAt(k);r()[C>>>0]=0,f+=b.length+1}),0}function ii(n,l){if(O)return Te(19,1,n,l);n>>>=0,l>>>=0;var f=ni();c()[n>>>2>>>0]=f.length;var b=0;return f.forEach(C=>b+=C.length+1),c()[l>>>2>>>0]=b,0}function ai(n){return O?Te(20,1,n):52}function si(n,l,f,b){return O?Te(21,1,n,l,f,b):52}function ui(n,l,f,b){return O?Te(22,1,n,l,f,b):70}var Xd=[null,[],[]];function di(n,l,f,b){if(O)return Te(23,1,n,l,f,b);l>>>=0,f>>>=0,b>>>=0;for(var C=0,k=0;k<f;k++){var V=c()[l>>>2>>>0],F=c()[l+4>>>2>>>0];l+=8;for(var re=0;re<F;re++){var J=o()[V+re>>>0],ce=Xd[n];J===0||J===10?((n===1?We:ee)(Pr(ce,0)),ce.length=0):ce.push(J)}C+=F}return c()[b>>>2>>>0]=C,0}var li=[31,29,31,30,31,30,31,31,30,31,30,31],ci=[31,28,31,30,31,30,31,31,30,31,30,31];function Qd(n){var l=Array(gt(n)+1);return dt(n,l,0,l.length),l}var Jd=(n,l)=>{r().set(n,l>>>0)};function pi(n,l,f,b){function C(z,we,Pe){for(z=typeof z=="number"?z.toString():z||"";z.length<we;)z=Pe[0]+z;return z}function k(z,we){return C(z,we,"0")}function V(z,we){function Pe(Ci){return 0>Ci?-1:0<Ci?1:0}var er;return(er=Pe(z.getFullYear()-we.getFullYear()))===0&&(er=Pe(z.getMonth()-we.getMonth()))===0&&(er=Pe(z.getDate()-we.getDate())),er}function F(z){switch(z.getDay()){case 0:return new Date(z.getFullYear()-1,11,29);case 1:return z;case 2:return new Date(z.getFullYear(),0,3);case 3:return new Date(z.getFullYear(),0,2);case 4:return new Date(z.getFullYear(),0,1);case 5:return new Date(z.getFullYear()-1,11,31);case 6:return new Date(z.getFullYear()-1,11,30)}}function re(z){var we=z.zb;for(z=new Date(new Date(z.Ab+1900,0,1).getTime());0<we;){var Pe=z.getMonth(),er=(Mt(z.getFullYear())?li:ci)[Pe];if(we>er-z.getDate())we-=er-z.getDate()+1,z.setDate(1),11>Pe?z.setMonth(Pe+1):(z.setMonth(0),z.setFullYear(z.getFullYear()+1));else{z.setDate(z.getDate()+we);break}}return Pe=new Date(z.getFullYear()+1,0,4),we=F(new Date(z.getFullYear(),0,4)),Pe=F(Pe),0>=V(we,z)?0>=V(Pe,z)?z.getFullYear()+1:z.getFullYear():z.getFullYear()-1}n>>>=0,l>>>=0,f>>>=0,b>>>=0;var J=c()[b+40>>>2>>>0];b={kc:a()[b>>>2>>>0],jc:a()[b+4>>>2>>>0],Eb:a()[b+8>>>2>>>0],Jb:a()[b+12>>>2>>>0],Fb:a()[b+16>>>2>>>0],Ab:a()[b+20>>>2>>>0],vb:a()[b+24>>>2>>>0],zb:a()[b+28>>>2>>>0],qc:a()[b+32>>>2>>>0],ic:a()[b+36>>>2>>>0],lc:J?He(J):""},f=He(f),J={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ce in J)f=f.replace(new RegExp(ce,"g"),J[ce]);var Re="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),ze="January February March April May June July August September October November December".split(" ");J={"%a":z=>Re[z.vb].substring(0,3),"%A":z=>Re[z.vb],"%b":z=>ze[z.Fb].substring(0,3),"%B":z=>ze[z.Fb],"%C":z=>k((z.Ab+1900)/100|0,2),"%d":z=>k(z.Jb,2),"%e":z=>C(z.Jb,2," "),"%g":z=>re(z).toString().substring(2),"%G":re,"%H":z=>k(z.Eb,2),"%I":z=>(z=z.Eb,z==0?z=12:12<z&&(z-=12),k(z,2)),"%j":z=>{for(var we=0,Pe=0;Pe<=z.Fb-1;we+=(Mt(z.Ab+1900)?li:ci)[Pe++]);return k(z.Jb+we,3)},"%m":z=>k(z.Fb+1,2),"%M":z=>k(z.jc,2),"%n":()=>`\n`,"%p":z=>0<=z.Eb&&12>z.Eb?"AM":"PM","%S":z=>k(z.kc,2),"%t":()=>"\t","%u":z=>z.vb||7,"%U":z=>k(Math.floor((z.zb+7-z.vb)/7),2),"%V":z=>{var we=Math.floor((z.zb+7-(z.vb+6)%7)/7);if(2>=(z.vb+371-z.zb-2)%7&&we++,we)we==53&&(Pe=(z.vb+371-z.zb)%7,Pe==4||Pe==3&&Mt(z.Ab)||(we=1));else{we=52;var Pe=(z.vb+7-z.zb-1)%7;(Pe==4||Pe==5&&Mt(z.Ab%400-1))&&we++}return k(we,2)},"%w":z=>z.vb,"%W":z=>k(Math.floor((z.zb+7-(z.vb+6)%7)/7),2),"%y":z=>(z.Ab+1900).toString().substring(2),"%Y":z=>z.Ab+1900,"%z":z=>{z=z.ic;var we=0<=z;return z=Math.abs(z)/60,(we?"+":"-")+("0000"+(z/60*100+z%60)).slice(-4)},"%Z":z=>z.lc,"%%":()=>"%"},f=f.replace(/%%/g,"\\0\\0");for(ce in J)f.includes(ce)&&(f=f.replace(new RegExp(ce,"g"),J[ce](b)));return f=f.replace(/\\0\\0/g,"%"),ce=Qd(f),ce.length>l?0:(Jd(ce,n),ce.length-1)}ge.Gb();for(var mi=Array(256),cn=0;256>cn;++cn)mi[cn]=String.fromCharCode(cn);on=mi,wt=d.BindingError=class extends Error{constructor(n){super(n),this.name="BindingError"}},d.InternalError=class extends Error{constructor(n){super(n),this.name="InternalError"}},lt.push(0,1,void 0,1,null,1,!0,1,!1,1),d.count_emval_handles=()=>lt.length/2-5-fr.length;var el=[dr,jr,Yr,Xr,Qr,Zt,kr,Or,Jr,pr,en,tn,rn,nn,Rr,Xt,ei,ti,oi,ii,ai,si,ui,di],tl={ua:function(n,l,f){return te(async()=>{await d.Zb(n,l,f)})},b:function(n,l,f){throw n>>>=0,new qn(n).Gb(l>>>0,f>>>0),Kr=n,jn++,Kr},ia:function(n){hi(n>>>0,!E,1,!x,131072,!1),ge.Pb()},G:function(n){n>>>=0,O?postMessage({cmd:"cleanupThread",thread:n}):ge.Nb(ge.ub[n])},_:Zr,A:Xr,pa:Qr,W:Zt,Y:kr,qa:Or,na:Jr,fa:pr,ma:en,K:tn,X:rn,U:nn,oa:Rr,V:Xt,E:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:function(b,C){if(typeof C!="bigint"&&typeof C!="number")throw C===null?C="null":(b=typeof C,C=b==="object"||b==="array"||b==="function"?C.toString():""+C),new TypeError(`Cannot convert "${C}" to ${this.name}`);return typeof C=="number"&&(C=BigInt(C)),C},argPackAdvance:8,readValueFromPointer:Dr(l,f,l.indexOf("u")==-1),Bb:null})},O:function(n,l,f,b){n>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:function(C){return!!C},toWireType:function(C,k){return k?f:b},argPackAdvance:8,readValueFromPointer:function(C){return this.fromWireType(o()[C>>>0])},Bb:null})},N:function(n){return Je(n>>>0,Zn)},D:function(n,l,f){n>>>=0,f>>>=0,l=nt(l>>>0),Je(n,{name:l,fromWireType:b=>b,toWireType:(b,C)=>C,argPackAdvance:8,readValueFromPointer:an(l,f),Bb:null})},t:function(n,l,f,b,C){if(n>>>=0,f>>>=0,l=nt(l>>>0),C===-1&&(C=4294967295),C=F=>F,b===0){var k=32-8*f;C=F=>F<<k>>>k}var V=l.includes("unsigned")?function(F,re){return re>>>0}:function(F,re){return re};Je(n,{name:l,fromWireType:C,toWireType:V,argPackAdvance:8,readValueFromPointer:Dr(l,f,b!==0),Bb:null})},p:function(n,l,f){function b(k){var V=c()[k>>>2>>>0];return k=c()[k+4>>>2>>>0],new C(r().buffer,k,V)}n>>>=0;var C=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][l];f=nt(f>>>0),Je(n,{name:f,fromWireType:b,argPackAdvance:8,readValueFromPointer:b},{Ub:!0})},F:function(n,l){n>>>=0,l=nt(l>>>0);var f=l==="std::string";Je(n,{name:l,fromWireType:function(b){var C=c()[b>>>2>>>0],k=b+4;if(f)for(var V=k,F=0;F<=C;++F){var re=k+F;if(F==C||o()[re>>>0]==0){if(V=He(V,re-V),J===void 0)var J=V;else J+=String.fromCharCode(0),J+=V;V=re+1}}else{for(J=Array(C),F=0;F<C;++F)J[F]=String.fromCharCode(o()[k+F>>>0]);J=J.join("")}return At(b),J},toWireType:function(b,C){C instanceof ArrayBuffer&&(C=new Uint8Array(C));var k=typeof C=="string";if(!(k||C instanceof Uint8Array||C instanceof Uint8ClampedArray||C instanceof Int8Array))throw new wt("Cannot pass non-string to std::string");var V=f&&k?gt(C):C.length,F=mn(4+V+1),re=F+4;if(c()[F>>>2>>>0]=V,f&&k)Bt(C,re,V+1);else if(k)for(k=0;k<V;++k){var J=C.charCodeAt(k);if(255<J)throw At(re),new wt("String has UTF-16 code units that do not fit in 8 bits");o()[re+k>>>0]=J}else for(k=0;k<V;++k)o()[re+k>>>0]=C[k];return b!==null&&b.push(At,F),F},argPackAdvance:8,readValueFromPointer:Qt,Bb(b){At(b)}})},z:function(n,l,f){if(n>>>=0,l>>>=0,f>>>=0,f=nt(f),l===2)var b=Xn,C=sn,k=un,V=F=>u()[F>>>1>>>0];else l===4&&(b=gr,C=Qn,k=pe,V=F=>c()[F>>>2>>>0]);Je(n,{name:f,fromWireType:F=>{for(var re=c()[F>>>2>>>0],J,ce=F+4,Re=0;Re<=re;++Re){var ze=F+4+Re*l;(Re==re||V(ze)==0)&&(ce=b(ce,ze-ce),J===void 0?J=ce:(J+=String.fromCharCode(0),J+=ce),ce=ze+l)}return At(F),J},toWireType:(F,re)=>{if(typeof re!="string")throw new wt(`Cannot pass non-string to C++ string type ${f}`);var J=k(re),ce=mn(4+J+l);return c()[ce>>>2>>>0]=J/l,C(re,ce+4,J+l),F!==null&&F.push(At,ce),ce},argPackAdvance:8,readValueFromPointer:Qt,Bb(F){At(F)}})},P:function(n,l){n>>>=0,l=nt(l>>>0),Je(n,{Vb:!0,name:l,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},ta:()=>1,S:function(n,l){n>>>=0,n==l>>>0?setTimeout(rt):O?postMessage({targetThread:n,cmd:"checkMailbox"}):(n=ge.ub[n])&&n.postMessage({cmd:"checkMailbox"})},$:function(n,l,f,b,C){l>>>=0,f>>>=0,b/=2,yr.length=b,C=C>>>0>>>3;for(var k=0;k<b;k++)yr[k]=Be[C+2*k]?Be[C+2*k+1]:h()[C+2*k+1>>>0];return n=l?Ir[l]:el[n],ge.Sb=f,f=n(...yr),ge.Sb=0,f},ha:Nt,sa:function(n){P&&ge.ub[n>>>0].ref()},w:function(n,l,f){return l>>>=0,f>>>=0,n=Qe(n>>>0),l=br(l,"emval::as"),Ur(l,f,n)},y:function(n){return n>>>=0,te(()=>(n=Qe(n),n.then(ot)))},o:function(n,l,f,b){return f>>>=0,b>>>=0,n=X[n>>>0],l=Qe(l>>>0),n(null,l,f,b)},k:function(n,l,f,b,C){return f>>>=0,b>>>=0,C>>>=0,n=X[n>>>0],l=Qe(l>>>0),f=Ee(f),n(l,l[f],b,C)},c:hr,C:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),n==l},n:function(n){return n>>>=0,n===0?ot(Oe()):(n=Ee(n),ot(Oe()[n]))},j:function(n,l,f){l=be(n,l>>>0);var b=l.shift();n--;var C=`return function (obj, func, destructorsRef, args) {\n`,k=0,V=[];f===0&&V.push("obj");for(var F=["retType"],re=[b],J=0;J<n;++J)V.push("arg"+J),F.push("argType"+J),re.push(l[J]),C+=`  var arg${J} = argType${J}.readValueFromPointer(args${k?"+"+k:""});\n`,k+=l[J].argPackAdvance;return C+=`  var rv = ${f===1?"new func":"func.call"}(${V.join(", ")});\n`,b.Vb||(F.push("emval_returnValue"),re.push(Ur),C+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),F.push(C+`};\n`),n=zt(F)(...re),f=`methodCaller<(${l.map(ce=>ce.name).join(", ")}) => ${b.name}>`,D(Ie(f,n))},s:function(n,l){return l>>>=0,n=Qe(n>>>0),l=Qe(l),ot(n[l])},d:function(n){n>>>=0,9<n&&(lt[n+1]+=1)},v:function(){return ot([])},m:function(n){n=Qe(n>>>0);for(var l=Array(n.length),f=0;f<n.length;f++)l[f]=n[f];return ot(l)},g:function(n){return ot(Ee(n>>>0))},l:function(){return ot({})},i:function(n){n>>>=0;for(var l=Qe(n);l.length;){var f=l.pop();l.pop()(f)}hr(n)},h:function(n,l,f){l>>>=0,f>>>=0,n=Qe(n>>>0),l=Qe(l),f=Qe(f),n[l]=f},e:function(n,l){return l>>>=0,n=br(n>>>0,"_emval_take_value"),n=n.readValueFromPointer(l),ot(n)},ca:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getUTCSeconds(),a()[l+4>>>2>>>0]=n.getUTCMinutes(),a()[l+8>>>2>>>0]=n.getUTCHours(),a()[l+12>>>2>>>0]=n.getUTCDate(),a()[l+16>>>2>>>0]=n.getUTCMonth(),a()[l+20>>>2>>>0]=n.getUTCFullYear()-1900,a()[l+24>>>2>>>0]=n.getUTCDay(),n=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,a()[l+28>>>2>>>0]=n},da:function(n,l){n=-9007199254740992>n||9007199254740992<n?NaN:Number(n),l>>>=0,n=new Date(1e3*n),a()[l>>>2>>>0]=n.getSeconds(),a()[l+4>>>2>>>0]=n.getMinutes(),a()[l+8>>>2>>>0]=n.getHours(),a()[l+12>>>2>>>0]=n.getDate(),a()[l+16>>>2>>>0]=n.getMonth(),a()[l+20>>>2>>>0]=n.getFullYear()-1900,a()[l+24>>>2>>>0]=n.getDay();var f=(Mt(n.getFullYear())?Qo:Jo)[n.getMonth()]+n.getDate()-1|0;a()[l+28>>>2>>>0]=f,a()[l+36>>>2>>>0]=-(60*n.getTimezoneOffset()),f=new Date(n.getFullYear(),6,1).getTimezoneOffset();var b=new Date(n.getFullYear(),0,1).getTimezoneOffset();n=(f!=b&&n.getTimezoneOffset()==Math.min(b,f))|0,a()[l+32>>>2>>>0]=n},ea:function(n){n>>>=0;var l=new Date(a()[n+20>>>2>>>0]+1900,a()[n+16>>>2>>>0],a()[n+12>>>2>>>0],a()[n+8>>>2>>>0],a()[n+4>>>2>>>0],a()[n>>>2>>>0],0),f=a()[n+32>>>2>>>0],b=l.getTimezoneOffset(),C=new Date(l.getFullYear(),6,1).getTimezoneOffset(),k=new Date(l.getFullYear(),0,1).getTimezoneOffset(),V=Math.min(k,C);return 0>f?a()[n+32>>>2>>>0]=+(C!=k&&V==b):0<f!=(V==b)&&(C=Math.max(k,C),l.setTime(l.getTime()+6e4*((0<f?V:C)-b))),a()[n+24>>>2>>>0]=l.getDay(),f=(Mt(l.getFullYear())?Qo:Jo)[l.getMonth()]+l.getDate()-1|0,a()[n+28>>>2>>>0]=f,a()[n>>>2>>>0]=l.getSeconds(),a()[n+4>>>2>>>0]=l.getMinutes(),a()[n+8>>>2>>>0]=l.getHours(),a()[n+12>>>2>>>0]=l.getDate(),a()[n+16>>>2>>>0]=l.getMonth(),a()[n+20>>>2>>>0]=l.getYear(),n=l.getTime(),BigInt(isNaN(n)?-1:n/1e3)},aa:ei,ba:ti,R:function(n,l,f,b){n>>>=0,l>>>=0,f>>>=0,b>>>=0;var C=new Date().getFullYear(),k=new Date(C,0,1),V=new Date(C,6,1);C=k.getTimezoneOffset();var F=V.getTimezoneOffset(),re=Math.max(C,F);c()[n>>>2>>>0]=60*re,a()[l>>>2>>>0]=+(C!=F),n=J=>J.toLocaleTimeString(void 0,{hour12:!1,timeZoneName:"short"}).split(" ")[1],k=n(k),V=n(V),F<C?(Bt(k,f,17),Bt(V,b,17)):(Bt(k,b,17),Bt(V,f,17))},q:()=>{Kt("")},f:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},M:function(n,l,f){return n>>>=0,l=ri(l>>>0,f>>>0),Ir[n](...l)},H:()=>{},L:()=>Date.now(),ra:()=>{throw bt+=1,"unwind"},T:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>P?(Ri(),wr(Oi)).cpus().length:navigator.hardwareConcurrency,Q:function(n){n>>>=0;var l=o().length;if(n<=l||4294901760<n)return!1;for(var f=1;4>=f;f*=2){var b=l*(1+.2/f);b=Math.min(b,n+100663296);var C=Math;b=Math.max(n,b);e:{C=(C.min.call(C,4294901760,b+(65536-b%65536)%65536)-ae.buffer.byteLength+65535)/65536;try{ae.grow(C),Ne();var k=1;break e}catch{}k=void 0}if(k)return!0}return!1},ja:oi,la:ii,Z:Xe,B:ai,J:si,ga:ui,I:di,a:ae||d.wasmMemory,ka:pi,r:function(n,l,f,b){return pi(n>>>0,l>>>0,f>>>0,b>>>0)}},oe=function(){function n(f,b){return oe=f.exports,oe=dn(),oe=rl(),ge.Qb.push(oe.cb),Rt.unshift(oe.va),Ae=b,xr(),oe}var l={a:tl};if(Vt++,d.instantiateWasm)try{return d.instantiateWasm(l,n)}catch(f){ee(`Module.instantiateWasm callback failed with error: ${f}`),w(f)}return Ar(l,function(f){n(f.instance,f.module)}).catch(w),{}}(),fi=n=>(fi=oe.wa)(n);d.__embind_initialize_bindings=()=>(d.__embind_initialize_bindings=oe.xa)(),d._OrtInit=(n,l)=>(d._OrtInit=oe.ya)(n,l),d._OrtGetLastError=(n,l)=>(d._OrtGetLastError=oe.za)(n,l),d._OrtCreateSessionOptions=(n,l,f,b,C,k,V,F,re,J)=>(d._OrtCreateSessionOptions=oe.Aa)(n,l,f,b,C,k,V,F,re,J),d._OrtAppendExecutionProvider=(n,l)=>(d._OrtAppendExecutionProvider=oe.Ba)(n,l),d._OrtAddFreeDimensionOverride=(n,l,f)=>(d._OrtAddFreeDimensionOverride=oe.Ca)(n,l,f),d._OrtAddSessionConfigEntry=(n,l,f)=>(d._OrtAddSessionConfigEntry=oe.Da)(n,l,f),d._OrtReleaseSessionOptions=n=>(d._OrtReleaseSessionOptions=oe.Ea)(n),d._OrtCreateSession=(n,l,f)=>(d._OrtCreateSession=oe.Fa)(n,l,f),d._OrtReleaseSession=n=>(d._OrtReleaseSession=oe.Ga)(n),d._OrtGetInputOutputCount=(n,l,f)=>(d._OrtGetInputOutputCount=oe.Ha)(n,l,f),d._OrtGetInputName=(n,l)=>(d._OrtGetInputName=oe.Ia)(n,l),d._OrtGetOutputName=(n,l)=>(d._OrtGetOutputName=oe.Ja)(n,l),d._OrtFree=n=>(d._OrtFree=oe.Ka)(n),d._OrtCreateTensor=(n,l,f,b,C,k)=>(d._OrtCreateTensor=oe.La)(n,l,f,b,C,k),d._OrtGetTensorData=(n,l,f,b,C)=>(d._OrtGetTensorData=oe.Ma)(n,l,f,b,C),d._OrtReleaseTensor=n=>(d._OrtReleaseTensor=oe.Na)(n),d._OrtCreateRunOptions=(n,l,f,b)=>(d._OrtCreateRunOptions=oe.Oa)(n,l,f,b),d._OrtAddRunConfigEntry=(n,l,f)=>(d._OrtAddRunConfigEntry=oe.Pa)(n,l,f),d._OrtReleaseRunOptions=n=>(d._OrtReleaseRunOptions=oe.Qa)(n),d._OrtCreateBinding=n=>(d._OrtCreateBinding=oe.Ra)(n),d._OrtBindInput=(n,l,f)=>(d._OrtBindInput=oe.Sa)(n,l,f),d._OrtBindOutput=(n,l,f,b)=>(d._OrtBindOutput=oe.Ta)(n,l,f,b),d._OrtClearBoundOutputs=n=>(d._OrtClearBoundOutputs=oe.Ua)(n),d._OrtReleaseBinding=n=>(d._OrtReleaseBinding=oe.Va)(n),d._OrtRunWithBinding=(n,l,f,b,C)=>(d._OrtRunWithBinding=oe.Wa)(n,l,f,b,C),d._OrtRun=(n,l,f,b,C,k,V,F)=>(d._OrtRun=oe.Xa)(n,l,f,b,C,k,V,F),d._OrtEndProfiling=n=>(d._OrtEndProfiling=oe.Ya)(n),d._JsepOutput=(n,l,f)=>(d._JsepOutput=oe.Za)(n,l,f),d._JsepGetNodeName=n=>(d._JsepGetNodeName=oe._a)(n);var pn=d._pthread_self=()=>(pn=d._pthread_self=oe.$a)(),mn=d._malloc=n=>(mn=d._malloc=oe.ab)(n),At=d._free=n=>(At=d._free=oe.bb)(n);d.__emscripten_tls_init=()=>(d.__emscripten_tls_init=oe.cb)();var hi=d.__emscripten_thread_init=(n,l,f,b,C,k)=>(hi=d.__emscripten_thread_init=oe.eb)(n,l,f,b,C,k);d.__emscripten_thread_crashed=()=>(d.__emscripten_thread_crashed=oe.fb)();var gi=(n,l,f,b,C)=>(gi=oe.gb)(n,l,f,b,C),ro=n=>(ro=oe.hb)(n),no=d.__emscripten_thread_exit=n=>(no=d.__emscripten_thread_exit=oe.ib)(n),yi=()=>(yi=oe.jb)(),bi=(n,l)=>(bi=oe.kb)(n,l),fn=n=>(fn=oe.lb)(n),oo=n=>(oo=oe.mb)(n),io=()=>(io=oe.nb)(),wi=d.dynCall_ii=(n,l)=>(wi=d.dynCall_ii=oe.pb)(n,l),vi=n=>(vi=oe.qb)(n),$i=()=>($i=oe.rb)(),_i=n=>(_i=oe.sb)(n),Si=()=>(Si=oe.tb)();d.___start_em_js=839500,d.___stop_em_js=839661;function rl(){var n=oe;n=Object.assign({},n);var l=b=>C=>b(C)>>>0,f=b=>()=>b()>>>0;return n.wa=l(n.wa),n.$a=f(n.$a),n.ab=l(n.ab),n.emscripten_main_runtime_thread_id=f(n.emscripten_main_runtime_thread_id),n.mb=l(n.mb),n.nb=f(n.nb),n}d.wasmMemory=ae,d.stackSave=()=>io(),d.stackRestore=n=>fn(n),d.stackAlloc=n=>oo(n),d.keepRuntimeAlive=()=>0<bt,d.UTF8ToString=He,d.stringToUTF8=Bt,d.lengthBytesUTF8=gt,d.ExitStatus=st,d.PThread=ge;var hn;jt=function n(){hn||xi(),hn||(jt=n)};function xi(){if(!(0<Vt))if(O)y(d),O||Yt(Rt),startWorker(d);else{if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)mt.unshift(d.preRun.shift());Yt(mt),0<Vt||hn||(hn=!0,d.calledRun=!0,me||(O||Yt(Rt),y(d),O||Yt(qt)))}}return xi(),_}})();typeof Di=="object"&&typeof mo=="object"?mo.exports=Bi:typeof define=="function"&&define.amd&&define([],()=>Bi)});var Mi=Wr((gm,cl)=>{cl.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(...e){var a=e.join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,a+`\\n`);return}console.error(a)}function threadAlert(...e){var a=e.join(" ");postMessage({cmd:"alert",text:a,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,a)=>{var r=Module.wasmModule;Module.wasmModule=null;var t=new WebAssembly.Instance(r,e);return a(t)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let r=[];self.onmessage=t=>r.push(t),self.startWorker=t=>{Module=t,postMessage({cmd:"loaded"});for(let s of r)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const t of e.data.handlers)Module[t]=(...s)=>{postMessage({cmd:"callHandler",handler:t,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var a=URL.createObjectURL(e.data.urlOrBlob);importScripts(a),URL.revokeObjectURL(a)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(r){if(r!="unwind")throw r}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(r){throw Module.__emscripten_thread_crashed?.(),r}}self.onmessage=handleMessage;\\n\'});var go,Gt,tr,bn,Gr,Hi,yo,ye=Y(()=>{"use strict";go=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},Gt=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],bn=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Gr=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},Hi=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",yo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var wn=Y(()=>{"use strict"});var Fi=Y(()=>{"use strict";wn()});var qi,ji=Y(()=>{"use strict";qi="1.18.0"});var Ki,pt,bo=Y(()=>{"use strict";ji();Ki="warning",pt={wasm:{},webgl:{},webgpu:{},versions:{common:qi},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ki=e}},get logLevel(){return Ki}};Object.defineProperty(pt,"logLevel",{enumerable:!0})});var vr,Yi=Y(()=>{"use strict";bo();vr=pt});var Zi=Y(()=>{"use strict"});var Xi=Y(()=>{"use strict";vn()});var Ji=Y(()=>{"use strict"});var ea=Y(()=>{"use strict";vn()});var vn=Y(()=>{"use strict";Zi();Xi();Ji();ea()});var $n=Y(()=>{"use strict";vn()});var wo,ta,rr,Ht,vo=Y(()=>{"use strict";bo();wo=(e,t)=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},ta=(e,t)=>{let r=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],o=!1;for(let i=0;i<r.length;i++){if(o&&!r[i].includes("TRACE_FUNC")){let u=`FUNC_${e}::${r[i].trim().split(" ")[1]}`;t&&(u+=`::${t}`),wo("CPU",u);return}r[i].includes("TRACE_FUNC")&&(o=!0)}},rr=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("BEGIN",e)},Ht=e=>{(typeof pt.trace>"u"?!pt.wasm.trace:!pt.trace)||ta("END",e)}});var ra=Y(()=>{"use strict";wn();$n();vo()});var na=Y(()=>{"use strict";ra()});var oa=Y(()=>{"use strict"});var ia=Y(()=>{"use strict"});var aa=Y(()=>{"use strict"});var sa=Y(()=>{"use strict"});var ua=Y(()=>{"use strict";wn();$n()});var da=Y(()=>{"use strict";ua()});var $r=Y(()=>{"use strict";Fi();Yi();na();$n();oa();ia();vo();aa();sa();da()});var _l,Sl,la,ca,pa,xl,Ve,Lt=Y(()=>{"use strict";ye();_l=["V","I","W","E","F"],Sl=(e,t)=>{console.log(`[${_l[e]},${new Date().toISOString()}]${t}`)},pa=(e,t)=>{la=e,ca=t},xl=(e,t)=>{let r=Gr(e),o=Gr(la);r>=o&&Sl(r,typeof t=="function"?t():t)},Ve=(...e)=>{ca&&xl(...e)}});var ma,fa=Y(()=>{"use strict";ye();ma=(e,t)=>new(bn(t))(e)});var _n=Y(()=>{"use strict"});var ha,$o,_o,Cl,Al,ga,xo,So,ba,wa=Y(()=>{"use strict";Lt();_n();ha=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),$o=[],_o=e=>Math.ceil(e/16)*16,Cl=e=>{for(let t=0;t<$o.length;t++){let r=$o[t];if(e<=r)return r}return Math.ceil(e/16)*16},Al=1,ga=()=>Al++,xo=async(e,t,r,o)=>{let i=_o(r),u=e.device.createBuffer({size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let a=e.getCommandEncoder();e.endComputePass(),a.copyBufferToBuffer(t,0,u,0,i),e.flush(),await u.mapAsync(GPUMapMode.READ);let c=u.getMappedRange();if(o){let p=o();return p.set(new Uint8Array(c,0,r)),p}else return new Uint8Array(c.slice(0,r))}finally{u.destroy()}},So=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map;for(let[r]of ha)$o.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[])}upload(t,r){let o=r.buffer,i=r.byteOffset,u=r.byteLength,a=_o(u),c=this.storageCache.get(t);if(!c)throw new Error("gpu data for uploading does not exist");if(c.originalSize!==u)throw new Error(`inconsistent data size. gpu data size=${c.originalSize}, data size=${u}`);let p=this.backend.device.createBuffer({mappedAtCreation:!0,size:a,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),h=p.getMappedRange();new Uint8Array(h).set(new Uint8Array(o,i,u)),p.unmap();let d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(p,0,c.gpuData.buffer,0,a),Ve("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(p)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let i=this.storageCache.get(r);if(!i)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==i.originalSize)throw new Error("inconsistent source and destination gpu data size");let u=_o(o.originalSize),a=this.backend.getCommandEncoder();this.backend.endComputePass(),a.copyBufferToBuffer(o.gpuData.buffer,0,i.gpuData.buffer,0,u)}registerExternalBuffer(t,r,o){let i;if(o){if(i=this.externalBuffers.get(o),i===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, buffer is the same, skip.`),i;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else i=ga();return this.storageCache.set(i,{gpuData:{id:i,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,i),Ve("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${i}, registered.`),i}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ve("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=Cl(t),i,u=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,a=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(u||a){let h=(u?this.freeBuffers:this.freeUniformBuffers).get(o);h?h.length>0?i=h.pop():i=this.backend.device.createBuffer({size:o,usage:r}):i=this.backend.device.createBuffer({size:o,usage:r})}else i=this.backend.device.createBuffer({size:o,usage:r});let c={id:ga(),type:0,buffer:i};return this.storageCache.set(c.id,{gpuData:c,originalSize:t}),Ve("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${c.id}`),c}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ve("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await xo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending){let r=ha.get(t.size);if((t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let o=this.freeBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else if((t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let o=this.freeUniformBuffers.get(t.size)||[];r===void 0||o.length>=r?t.destroy():o.push(t)}else t.destroy()}this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ba=(...e)=>new So(...e)});var Co,ve,Ze=Y(()=>{"use strict";Co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},ve=e=>new Co(e)});var Ao,It,M,nr,Sn,xn,Cn,Se=Y(()=>{"use strict";Ao=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},It=class{static calcShape(t,r,o=!1){let i=t.length,u=r.length;if(i===0)return r;if(u===0)return t;let a=Math.max(t.length,r.length),c=new Array(a);if(o){if(i<2||u<2)return;let p=Ao.calcMatMulShape([t[i-2],t[i-1]],[r[u-2],r[u-1]]);if(p===void 0)return;[c[a-2],c[a-1]]=p}for(let p=o?3:1;p<=a;p++){let h=i-p<0?1:t[i-p],d=u-p<0?1:r[u-p];if(h!==d&&h>1&&d>1)return;let y=Math.max(h,d);if(h&&d)c[a-p]=Math.max(h,d);else{if(y>1)return;c[a-p]=0}}return c}static isValidBroadcast(t,r){let o=t.length,i=r.length;if(o>i)return!1;for(let u=1;u<=o;u++)if(t[o-u]!==1&&t[o-u]!==r[i-u])return!1;return!0}},M=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let i=new Array(o),u=o-1;for(;u>=0;){if(t[u]%r===0){i[u]=t[u]/r;break}if(r%t[u]!==0)throw new Error("cannot convert shape");i[u]=1,r/=t[u],u--}for(u--;u>=0;u--)i[u]=t[u];return i}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let i=1;for(let u=r;u<o;u++){if(t[u]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");i*=t[u]}return i}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let i=r-3;i>=0;--i)o[i]=o[i+1]*t[i+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((i,u)=>i+r[u]+r[u+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,i)=>o===r[i])}},nr=class e{static adjustPoolAttributes(t,r,o,i,u,a){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let c=0;c<r.length-2;c++)c>=o.length?o.push(r[c+2]):o[c]=r[c+2];for(let c=0;c<o.length;c++)if(c<i.length){if(i[c]<0)throw new Error("strides should be greater than or equal to 1")}else i.push(1);for(let c=0;c<o.length;c++)if(c<u.length){if(u[c]<0)throw new Error("dilations should be greater than or equal to 1")}else u.push(1);for(let c=0;c<o.length*2;c++)if(c<a.length){if(a[c]<0)throw new Error("pad should be greater than or equal to 1")}else a.push(0);for(let c=0;c<o.length;c++){if(o[c]<=0)throw new Error("kernel shapes need to be greater than 0");if(a[c]>=o[c]||a[c+o.length]>=o[c])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,i,u,a,c){if(c){if(u.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(i.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let p=0;p<t.length-2;p++)e.adjustPadAndReturnShape(t[p+(a?1:2)],r[p],o[p],i[p],u,p,p+t.length-2,c)}}static computePoolOutputShape(t,r,o,i,u,a,c){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let p=[r[0],r[1]];return e.computeShapeHelper(t,r,p,o,i,u,a,c),p}static computeConvOutputShape(t,r,o,i,u,a,c){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let p=[t[0],r[0]];return e.computeShapeHelper(!1,t,p,o,i,u,a,c),p}static computeShapeHelper(t,r,o,i,u,a,c,p){if(t)for(let h=0;h<r.length-2;h++)o.push(1);else for(let h=0;h<r.length-2;h++)o.push(e.adjustPadAndReturnShape(r[h+2],i[h],u[h],a[h],c,h,h+r.length-2,p))}static adjustPadAndReturnShape(t,r,o,i,u,a,c,p){let h=o*(i-1)+1;if(p&&p!=="NOTSET")switch(p){case"VALID":return u[a]=0,u[c]=0,Math.floor((t-h)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let y=((t+r-1)/r-1)*r+i-t;return u[a]=Math.floor(p==="SAME_LOWER"?(y+1)/2:y/2),u[c]=y-u[a],Math.floor((t+y-i)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+u[a]+u[c]-h)/r+1)}},Sn=class{static getShapeOfGemmResult(t,r,o,i,u){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let a,c,p;r?(a=t[1],c=t[0]):(a=t[0],c=t[1]);let h=-1;if(i?(p=o[0],h=1):(p=o[1],h=0),o[h]!==c)throw new Error("dimension mismatch");if(a<=0||p<=0||c<=0)throw new Error("invalid shape specified");if(u&&!It.isValidBroadcast(u,[a,p]))throw new Error("gemm: invalid bias shape for broadcast");return[a,p,c]}},xn=-34028234663852886e22,Cn=34028234663852886e22});var or,To,De,et,Z,Me,$t,ir,_t,fe,Eo,U,j,An,Io,va,_r,_e=Y(()=>{"use strict";ye();Se();or=64,To=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},De=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[0]},et=(e,t=1)=>{let r=To(e,t);return typeof r=="string"?r:r[1]},Z=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:M.computeStrides(r)})}),t},Me=e=>e%4===0?4:e%2===0?2:1,$t=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,ir=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}<f32>(${r})`,_t=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,fe=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,Eo=(e,t,r,o,i)=>{let u=typeof r=="number",a=u?r:r.length,c=[...new Array(a).keys()],p=a<2?"u32":a<=4?`vec${a}<u32>`:`array<u32, ${a}>`,h=To(t,i),d=typeof h=="string"?h:h[1],y=typeof h=="string"?h:h[0],w={indices:p,value:d,storage:y,tensor:t},_=G=>typeof G=="string"?G:`${G}u`,v={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},S=u?"uniforms.":"",A=`${S}${e}_shape`,I=`${S}${e}_strides`,x="";for(let G=0;G<a-1;G++)x+=`\n    let dim${G} = current / ${fe(I,G,a)};\n    let rest${G} = current % ${fe(I,G,a)};\n    indices[${G}] = dim${G};\n    current = rest${G};\n    `;x+=`indices[${a-1}] = current;`;let E=a<2?"":`\n  fn o2i_${e}(offset: u32) -> ${w.indices} {\n    var indices: ${w.indices};\n    var current = offset;\n    ${x}\n    return indices;\n  }`,P=G=>(v.offsetToIndices=!0,a<2?G:`o2i_${e}(${G})`),O=[];if(a>=2)for(let G=a-1;G>=0;G--)O.push(`${fe(I,G,a)} * (indices[${G}])`);let R=a<2?"":`\n  fn i2o_${e}(indices: ${w.indices}) -> u32 {\n    return ${O.join("+")};\n  }`,L=G=>(v.indicesToOffset=!0,a<2?G:`i2o_${e}(${G})`),N=(...G)=>a===0?"0u":`${w.indices}(${G.map(_).join(",")})`,K=(G,ne)=>a<2?`${G}`:`${fe(G,ne,a)}`,Q=(G,ne,xe)=>a<2?`${G}=${xe};`:`${fe(G,ne,a)}=${xe};`,he={},W=(G,ne)=>{v.broadcastedIndicesToOffset=!0;let xe=`${ne.name}broadcastedIndicesTo${e}Offset`;if(xe in he)return`${xe}(${G})`;let Ke=[];for(let Be=a-1;Be>=0;Be--){let Ge=ne.indicesGet("outputIndices",Be+ne.rank-a);Ke.push(`${K(I,Be)} * (${Ge} % ${K(A,Be)})`)}return he[xe]=`fn ${xe}(outputIndices: ${ne.type.indices}) -> u32 {\n             return ${Ke.length>0?Ke.join("+"):"0u"};\n           }`,`${xe}(${G})`},se=(G,ne)=>(()=>{if(w.storage===w.value)return`${e}[${G}]=${ne};`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`${e}[${G}]=vec2<u32>(u32(${ne}), select(0u, 0xFFFFFFFFu, ${ne} < 0));`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`${e}[${G}]=vec2<u32>(u32(${ne}), 0u);`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`${e}[${G}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ne}));`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),Ce=G=>(()=>{if(w.storage===w.value)return`${e}[${G}]`;if(w.storage==="vec2<u32>"&&w.value==="i32")return`i32(${e}[${G}].x)`;if(w.storage==="vec2<u32>"&&w.value==="u32")return`u32(${e}[${G}].x)`;if(w.storage==="u32"&&w.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${G}] & 0xFFu), bool(${e}[${G}] & 0xFF00u), bool(${e}[${G}] & 0xFF0000u), bool(${e}[${G}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${w.storage} and value type ${w.value} yet`)})(),We=a<2?"":`\n  fn get_${e}ByIndices(indices: ${w.indices}) -> ${d} {\n    return ${Ce(`i2o_${e}(indices)`)};\n  }`,ee=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn get_${e}(${G}) -> ${d} {\n    return get_${e}ByIndices(${N(ne)});\n  }`})(),ae=(...G)=>{if(G.length!==a)throw new Error(`indices length must be ${a}`);let ne=G.map(_).join(",");return a===0?Ce("0u"):a===1?Ce(ne[0]):(v.get=!0,v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}(${ne})`)},Ae=G=>a<2?Ce(G):(v.getByIndices=!0,v.indicesToOffset=!0,`get_${e}ByIndices(${G})`),me=a<2?"":`\n  fn set_${e}ByIndices(indices: ${w.indices}, value: ${d}) {\n    ${se(`i2o_${e}(indices)`,"value")}\n  }`,ie=a<2?"":(()=>{let G=c.map(xe=>`d${xe}: u32`).join(", "),ne=c.map(xe=>`d${xe}`).join(", ");return`\n  fn set_${e}(${G}, value: ${d}) {\n    set_${e}ByIndices(${N(ne)}, value);\n  }`})();return{impl:()=>{let G=[],ne=!1;return v.offsetToIndices&&(G.push(E),ne=!0),v.indicesToOffset&&(G.push(R),ne=!0),v.broadcastedIndicesToOffset&&(Object.values(he).forEach(xe=>G.push(xe)),ne=!0),v.set&&(G.push(ie),ne=!0),v.setByIndices&&(G.push(me),ne=!0),v.get&&(G.push(ee),ne=!0),v.getByIndices&&(G.push(We),ne=!0),!u&&ne&&G.unshift(`const ${A} = ${w.indices}(${r.join(",")});`,`const ${I} = ${w.indices}(${M.computeStrides(r).join(",")});`),G.join(`\n`)},type:w,offsetToIndices:P,indicesToOffset:L,broadcastedIndicesToOffset:W,indices:N,indicesGet:K,indicesSet:Q,set:(...G)=>{if(G.length!==a+1)throw new Error(`indices length must be ${a}`);let ne=G[a];if(typeof ne!="string")throw new Error("value must be string");let xe=G.slice(0,a).map(_).join(",");return a===0?se("0u",ne):a===1?se(xe[0],ne):(v.set=!0,v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}(${xe}, ${ne})`)},setByOffset:se,setByIndices:(G,ne)=>a<2?se(G,ne):(v.setByIndices=!0,v.indicesToOffset=!0,`set_${e}ByIndices(${G}, ${ne});`),get:ae,getByOffset:Ce,getByIndices:Ae,usage:o,name:e,strides:I,shape:A,rank:a}},U=(e,t,r,o=1)=>Eo(e,t,r,"input",o),j=(e,t,r,o=1)=>Eo(e,t,r,"output",o),An=(e,t,r,o=1)=>Eo(e,t,r,"internal",o),Io=class{constructor(t,r){this.normalizedDispatchGroup=t;this.limits=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=or){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],i=typeof t=="number"?1:t[2];if(r>this.limits.maxComputeWorkgroupSizeX||o>this.limits.maxComputeWorkgroupSizeY||i>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*o*i>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${o}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let u=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,a=u?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,\n                                             @builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,c=u?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*i}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${i})\n  fn main(${a}) {\n    ${c}\n  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",i=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${i}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`\n`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:i}of this.uniforms)if(i&&i>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(i/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(i/4)}>`);else{let u=i==null||i===1?o:`vec${i}<${o}>`;t.push(`${r}:${u}`)}return`\n      struct Uniforms { ${t.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`\n`)+this.internalVariables.map(t=>t.impl()).join(`\n`)}get variablesInfo(){if(this.uniforms.length===0)return;let t=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[t(r.type),r.length??1])}},va=(e,t)=>new Io(e,t),_r=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;i++){let u=r-1-i,a=e[u]||1;(t[t.length-1-i]||1)>1&&a===1&&o.unshift(u)}return o}});var Il,$a,Tl,El,yt,_a,Sa,Sr=Y(()=>{"use strict";ye();Se();Ze();_e();Il=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},$a=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,Tl=(e,t)=>M.sortBasedOnPerm(e,$a(e.length,t)),El=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},yt=(e,t)=>{let r=e.dataType,o=e.dims.length,i=$a(o,t),u=Tl(e.dims,i),a=j("output",r,u.length),c=U("a",r,o),p=h=>`\n  ${h.registerUniform("output_size","u32").declareVariables(c,a)}\n\n  ${El(i,o,c,a)}\n\n  ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${a.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${a.setByOffset("global_idx",c.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:h=>{let d=M.size(u);return{outputs:[{dims:u,dataType:h[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:[{type:12,data:d},...Z(h[0].dims,u)]}},getShaderSource:p}},_a=(e,t)=>{Il(e.inputs),e.compute(yt(e.inputs[0],t.perm))},Sa=e=>ve({perm:e.perm})});var Pl,kl,Ol,Rl,Bl,Dl,zl,Ml,Ul,Vl,Tt,xa,Ca,Aa,Ia,Ta,Ea,Pa,ka,Oa,Ra,Ba=Y(()=>{"use strict";ye();Se();_e();In();Sr();Pl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},kl={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},Ol={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},Rl={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Bl=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},Dl=(e,t)=>{let r=[],o=e.length;for(let u=0;u<o;u++)t.indexOf(u)===-1&&r.push(e[u]);let i=t.map(u=>e[u]);return[r,i]},zl=(e,t)=>{let r=e.length+t.length,o=[],i=0;for(let u=0;u<r;u++)t.indexOf(u)===-1?o.push(e[i++]):o.push(1);return o},Ml=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},Ul=(e,t)=>{let r=[];if(!Ml(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},Vl=(e,t,r,o,i,u,a)=>{let c=r[0].dims,p=M.size(u),h=M.size(a),d=U("_A",r[0].dataType,c),y=j("output",i,u),w=32,_=`\n          var<workgroup> aBestValues : array<f32, ${w}>;\n       `;return{name:e,shaderCache:t,getShaderSource:S=>`\n        ${S.registerUniform("reduceSize","u32").declareVariables(d,y)}\n        ${_}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${S.mainStart(w)}\n\n          let outputIndex = global_idx / ${w};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${Ol[o]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${w}) {\n           let candidate = f32(${d.getByOffset("offset + k")});\n           bestValue = ${Pl[o]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${w}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${kl[o]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${y.setByOffset("outputIndex",`${o==="mean"?`${y.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${y.type.storage}(${Rl[o]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:u,dataType:i}],dispatchGroup:{x:p},programUniforms:[{type:12,data:h}]})}},Tt=(e,t,r,o)=>{let i=e.inputs.length===1?r:Po(e.inputs,r),u=i.axes;u.length===0&&!i.noopWithEmptyAxes&&(u=e.inputs[0].dims.map((_,v)=>v));let a=M.normalizeAxes(u,e.inputs[0].dims.length),c=a,p=e.inputs[0],h=Ul(c,e.inputs[0].dims.length);h.length>0&&(p=e.compute(yt(e.inputs[0],h),{inputs:[0],outputs:[-1]})[0],c=Bl(c.length,p.dims.length));let[d,y]=Dl(p.dims,c),w=d;i.keepDims&&(w=zl(d,a)),e.compute(Vl(t,{hint:i.cacheKey,inputDependencies:["type"]},[p],o,e.inputs[0].dataType,w,y),{inputs:[p]})},xa=(e,t)=>{Tt(e,"ReduceMeanShared",t,"mean")},Ca=(e,t)=>{Tt(e,"ReduceL1Shared",t,"l1")},Aa=(e,t)=>{Tt(e,"ReduceL2Shared",t,"l2")},Ia=(e,t)=>{Tt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ta=(e,t)=>{Tt(e,"ReduceMaxShared",t,"max")},Ea=(e,t)=>{Tt(e,"ReduceMinShared",t,"min")},Pa=(e,t)=>{Tt(e,"ReduceProdShared",t,"prod")},ka=(e,t)=>{Tt(e,"ReduceSumShared",t,"sum")},Oa=(e,t)=>{Tt(e,"ReduceSumSquareShared",t,"sumSquare")},Ra=(e,t)=>{Tt(e,"ReduceLogSumShared",t,"logSum")}});var Et,Wl,Tn,Po,Pt,Nl,Gl,Hl,Ll,Fl,ql,jl,Kl,Yl,Zl,kt,Da,za,Ma,Ua,Va,Wa,Na,Ga,Ha,La,In=Y(()=>{"use strict";ye();Se();Ze();_e();Ba();Et=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Wl=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Tn=(e,t,r,o,i,u,a=!1,c=!1)=>{let p=[],h=r[0].dims,d=h.length,y=M.normalizeAxes(i,d),w=!c&&y.length===0;h.forEach((A,I)=>{w||y.indexOf(I)>=0?a&&p.push(1):p.push(A)});let _=p.length,v=M.size(p);return{name:e,shaderCache:t,getShaderSource:A=>{let I=[],x=U("_A",r[0].dataType,d),E=j("output",u,_),P=o(x,E,y),O=P[2];for(let R=0,L=0;R<d;R++)w||y.indexOf(R)>=0?(a&&L++,O=`for(var j${R}: u32 = 0; j${R} < ${h[R]}; j${R}++) {\n                  ${P[2].includes("last_index")?`let last_index = j${R};`:""}\n                  ${x.indicesSet("input_indices",R,`j${R}`)}\n                  ${O}\n                }`):(I.push(`${x.indicesSet("input_indices",R,E.indicesGet("output_indices",L))};`),L++);return`\n\n        ${A.registerUniform("output_size","u32").declareVariables(x,E)}\n\n        ${A.mainStart()}\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${x.type.indices};\n          let output_indices = ${E.offsetToIndices("global_idx")};\n\n          ${I.join(`\n`)}\n          ${P[0]}       // init ops for reduce max/min\n          ${P[1]}\n          ${O}\n          ${P[3]}\n          ${P.length===4?E.setByOffset("global_idx","value"):P.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:p,dataType:u}],dispatchGroup:{x:Math.ceil(v/64)},programUniforms:[{type:12,data:v},...Z(h,p)]})}},Po=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),ve({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Pt=(e,t,r,o)=>{let i=e.inputs,u=i.length===1?r:Po(i,r);e.compute(Tn(t,{hint:u.cacheKey,inputDependencies:["rank"]},[i[0]],u.noopWithEmptyAxes&&u.axes.length===0?Wl:o,u.axes,i[0].dataType,u.keepDims,u.noopWithEmptyAxes),{inputs:[0]})},Nl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},Gl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL1",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Hl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceL2",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ll=(e,t)=>{Et(e.inputs),Pt(e,"ReduceLogSumExp",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Fl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMax",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(o.indicesSet("input_indices",c,0));return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},ql=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMean",t,(o,i,u)=>{let a=1;for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&(a*=e.inputs[0].dims[c]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${i.type.value}(sum / ${a});`]})},jl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceMin",t,(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Kl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceProd",t,(o,i)=>[`var value = ${i.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Yl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSum",t,(o,i)=>[`var value = ${i.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Zl=(e,t)=>{Et(e.inputs),Pt(e,"ReduceSumSquare",t,(o,i)=>[`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},kt=(e,t,r)=>{if(t.length===0)return r;let o=1,i=1;for(let u=0;u<t.length;u++)t.indexOf(u)===-1?o*=e[u]:i*=e[u];return i<32&&o>1024},Da=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?ql(e,t):xa(e,t)},za=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Gl(e,t):Ca(e,t)},Ma=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Hl(e,t):Aa(e,t)},Ua=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ll(e,t):Ia(e,t)},Va=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Fl(e,t):Ta(e,t)},Wa=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?jl(e,t):Ea(e,t)},Na=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Kl(e,t):Pa(e,t)},Ga=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Yl(e,t):ka(e,t)},Ha=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Zl(e,t):Oa(e,t)},La=(e,t)=>{kt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Nl(e,t):Ra(e,t)}});var Fa,qa,ja,ko,Ka=Y(()=>{"use strict";ye();Ze();In();Fa=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},qa=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ja=(e,t)=>{Fa(e.inputs);let r=(o,i,u)=>{let a=[];for(let c=0;c<o.rank;c++)(u.indexOf(c)>=0||u.length===0)&&a.push(`input_indices[${c}] = 0;`);return[`${a.join(`\n`)}`,`var value = ${o.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {\n         value = ${o.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",i.setByOffset("global_idx","best_index")]};e.compute(Tn("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ko=e=>ve(e)});var Xl,Ql,Jl,En,Ya,Za,Oo=Y(()=>{"use strict";ye();Se();Ze();_e();Xl=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],i=o.dataType,u=o.dims.length;e.forEach((a,c)=>{if(c!==r){if(a.dataType!==i)throw new Error("input tensors should be one type");if(a.dims.length!==u)throw new Error("input tensors should have the same shape");a.dims.forEach((p,h)=>{if(h!==t&&p!==o.dims[h])throw new Error("non concat dimensions must match")})}})},Ql=(e,t)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${t});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Jl=(e,t)=>{let r=e.length,o=[];for(let i=0;i<r;++i){let u=t.setByOffset("global_idx",e[i].getByIndices("indices"));r===1?o.push(u):i===0?o.push(`if (inputIndex == ${i}u) { ${u} }`):i===r-1?o.push(`else { ${u} }`):o.push(`else if (inputIndex == ${i}) { ${u} }`)}return o.join(`\n`)},En=(e,t,r,o)=>{let i=M.size(r),u=new Array(e.length),a=new Array(e.length),c=0,p=[],h=[],d=[{type:12,data:i}];for(let S=0;S<e.length;++S)c+=e[S].dims[t],u[S]=c,h.push(e[S].dims.length),a[S]=U(`input${S}`,o,h[S]),p.push("rank"),d.push({type:12,data:u[S]});for(let S=0;S<e.length;++S)d.push(...Z(e[S].dims));d.push(...Z(r));let y=j("output",o,r.length),w=y.indicesGet("indices",t),_=Array.from(Array(u.length).keys()).map(S=>`uniforms.sizeInConcatAxis${S}`).join(","),v=S=>`\n\n  ${(()=>{S.registerUniform("outputSize","u32");for(let A=0;A<e.length;A++)S.registerUniform(`sizeInConcatAxis${A}`,"u32");return S.declareVariables(...a,y)})()}\n\n  ${Ql(u.length,_)}\n\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${w});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${u.length}u>(${_});\n      ${w} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Jl(a,y)}\n  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:p},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:d}),getShaderSource:v}},Ya=(e,t)=>{let r=e.inputs,o=r[0].dims,i=M.normalizeAxis(t.axis,o.length);Xl(r,i);let u=o.slice();u[i]=r.reduce((c,p)=>c+(p.dims.length>i?p.dims[i]:0),0);let a=r.filter(c=>M.size(c.dims)>0);e.compute(En(a,i,u,r[0].dataType),{inputs:a})},Za=e=>ve({axis:e.axis})});var ec,tc,rc,nc,Pn,oc,Xa,Ro=Y(()=>{"use strict";ye();_n();_e();Oo();ec=(e,t)=>{let r=e[0],o=e[1],i=e[2],u=e[3],a=e[4],c=e[5];if(a&&c)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let p=r.dims[0],h=r.dims[1],d=r.dims[2];if(i.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(o.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(o.dims[0]!==d)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(i.dims[0]!==o.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let y=i.dims[0]/3,w=y,_=w;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let E of t.qkvHiddenSizes)if(E%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");y=t.qkvHiddenSizes[0],w=t.qkvHiddenSizes[1],_=t.qkvHiddenSizes[2]}let v=h;if(y!==w)throw new Error("qkv_hidden_sizes first element should be same as the second");if(i.dims[0]!==y+w+_)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let S=0;if(a){if(w!==_)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(a.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(a.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(a.dims[1]!==p)throw new Error(\'Input "past" second dimension must be batch_size\');if(a.dims[2]!==t.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(a.dims[4]!==w/t.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');t.pastPresentShareBuffer||(S=a.dims[3])}let A=v+S,I=-1,x=0;if(u)throw new Error("Mask not supported");if(a)throw new Error("past is not supported");return{batchSize:p,sequenceLength:h,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:A,maxSequenceLength:I,inputHiddenSize:d,hiddenSize:y,vHiddenSize:_,headSize:Math.floor(y/t.numHeads),vHeadSize:Math.floor(_/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:x,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},tc=(e,t,r,o)=>{let i=Me(o),u=64,a=o/i;a<u?u=1:a/8<64&&(u=Math.ceil(a/8));let c=Math.ceil(o/i/u),p=[{type:t.dataType,data:1/o},{type:12,data:a},{type:12,data:c}],h=De(t.dataType,i),d=et(1,i),y=w=>{let _=j("x",t.dataType,t.dims,i),S=[{name:"d_inv",type:et(t.dataType)},{name:"d_comp",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`\n  var<workgroup> thread_max: array<f32, ${u}>;\n  var<workgroup> thread_sum: array<f32, ${u}>;\n  ${w.registerUniforms(S).declareVariables(_)}\n  ${w.mainStart([u,1,1])}\n    let local_offset = local_idx * uniforms.elements_per_thread;\n    let offset = workgroup_id.x * uniforms.d_comp + local_offset;\n\n    var thread_max_vector = ${d}(-3.402823e+38f);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${d}(x[offset + i]), thread_max_vector);\n    }\n    thread_max[local_idx] = ${(()=>{switch(i){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var max_value =  f32(-3.402823e+38f);\n    for (var i = 0u; i < ${u}; i++) {\n      max_value = max(thread_max[i], max_value);\n    }\n\n    var sum_vector = ${d}(0);\n    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n      sum_vector += exp(${d}(x[offset + i]) - max_value);\n    }\n    thread_sum[local_idx] = ${(()=>{switch(i){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${i}`)}})()};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${u}; i++) {\n      sum += thread_sum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        x[offset + i] = ${_.type.value}(uniforms.d_inv);\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < uniforms.d_comp; i++) {\n        var f32input = ${d}(x[offset + i]);\n        x[offset + i] = ${_.type.value}(exp(f32input - max_value) / sum);\n      }\n    }\n  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${u};${h};${i}`},getShaderSource:y,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:p})}},rc=(e,t,r,o,i,u,a)=>{let c=a+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],h=u.scale===0?1/Math.sqrt(i.headSize):u.scale,d=Me(i.headSize),y=i.headSize/d,w=12,_={x:Math.ceil(c/w),y:Math.ceil(i.sequenceLength/w),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:y},{type:12,data:c},{type:12,data:i.numHeads},{type:1,data:h}],S=o?["type","type","type"]:["type","type"],A=I=>{let x=U("q",t.dataType,t.dims,d),E=U("key",r.dataType,r.dims,d),P=[x,E];o&&P.push(U("relative_position_bias",o.dataType,o.dims));let O=j("output",t.dataType,p),R=et(1,d),L=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"alpha",type:"f32"}];return`\n  const TILE_SIZE = ${w}u;\n\n  var<workgroup> tileQ: array<${x.type.storage}, ${w*w}>;\n  var<workgroup> tileK: array<${x.type.storage}, ${w*w}>;\n  ${I.registerUniforms(L).declareVariables(...P,O)}\n  ${I.mainStart([w,w,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.N * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${R}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n        value += ${R}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (global_id.y < uniforms.M && global_id.x < uniforms.N) {\n      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;\n      var sum: f32 = ${(()=>{switch(d){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${d}`)}})()};\n        output[outputIdx] = ${O.type.value} (sum * uniforms.alpha) + ${o?"relative_position_bias[outputIdx]":"0.0"};\n    }\n  }`};return{name:"AttentionProbs",shaderCache:{hint:`${d}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType,gpuDataType:0}],dispatchGroup:_,programUniforms:v}),getShaderSource:A}},nc=(e,t,r,o,i)=>{let u=i+o.kvSequenceLength,a=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,p={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:u},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}];return{name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:t.dataType,gpuDataType:0}],dispatchGroup:p,programUniforms:h}),getShaderSource:w=>{let _=U("probs",t.dataType,t.dims),v=U("v",r.dataType,r.dims),S=j("output",t.dataType,a),A=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${c}u;\n  var<workgroup> tileQ: array<${_.type.value}, ${c*c}>;\n  var<workgroup> tileK: array<${_.type.value}, ${c*c}>;\n  ${w.registerUniforms(A).declareVariables(_,v,S)}\n  ${w.mainStart([c,c,1])}\n   let headIdx = workgroup_id.z;\n   let m = global_id.y;\n   let n = global_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${_.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`}}},Pn=(e,t,r,o,i,u,a,c,p,h,d)=>{let y=e.outputCount>1,w=e.outputCount>2,_=y&&w?h.pastSequenceLength:0,v=_+h.kvSequenceLength,S=[h.batchSize,h.numHeads,v,h.headSize],A=a?[a,r]:[r],I=y?e.compute(En(A,2,S,r.dataType),{inputs:A,outputs:[1]})[0]:r,x=[h.batchSize,h.numHeads,v,h.headSize],E=c?[c,o]:[o],P=w?e.compute(En(E,2,x,o.dataType),{inputs:E,outputs:[2]})[0]:o,O=[t,I];p&&O.push(p);let R=e.compute(rc(e,t,I,p,h,d,_),{inputs:O,outputs:[-1]})[0];e.compute(tc(e,R,h.batchSize*h.numHeads*h.sequenceLength,v),{inputs:[R],outputs:[]});let L=[R,P];e.compute(nc(e,R,P,h,_),{inputs:L,outputs:[0]})},oc=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,i=t.inputHiddenSize,u=t.headSize,a=12,c={x:Math.ceil(t.headSize/a),y:Math.ceil(t.sequenceLength/a),z:t.batchSize*t.numHeads},p=[e.inputs[0],e.inputs[1],e.inputs[2]],h=[{type:12,data:o},{type:12,data:i},{type:12,data:u},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],d=y=>{let w=j("output_q",p[0].dataType,r),_=j("output_k",p[0].dataType,r),v=j("output_v",p[0].dataType,r),S=U("input",p[0].dataType,p[0].dims),A=U("weight",p[1].dataType,p[1].dims),I=U("bias",p[2].dataType,p[2].dims),x=S.type.storage,E=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${a}u;\n  var<workgroup> tileInput: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightQ: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightK: array<${x}, ${a*a}>;\n  var<workgroup> tileWeightV: array<${x}, ${a*a}>;\n  ${y.registerUniforms(E).declareVariables(S,A,I,w,_,v)}\n  ${y.mainStart([a,a,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = global_id.y;\n    let n = global_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${x}(0);\n    var valueK = ${x}(0);\n    var valueV = ${x}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:c,programUniforms:h}),getShaderSource:d},{inputs:p,outputs:[-1,-1,-1]})},Xa=(e,t)=>{let r=ec(e.inputs,t),[o,i,u]=oc(e,r);return Pn(e,o,i,u,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var ic,ac,sc,Qa,Ja=Y(()=>{"use strict";$r();ye();Se();Ze();_e();ic=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,i,u)=>{let a=i.length;if(a!==o.length)throw new Error(`${u}: num dimensions != ${a}`);i.forEach((c,p)=>{if(c!==o[p])throw new Error(`${u}: dim[${p}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},ac=(e,t)=>{let{epsilon:r,spatial:o,format:i}=t,u=e[0].dims,a=o?Me(u[u.length-1]):1,c=i==="NHWC"&&u.length>1?a:1,p=M.size(u)/a,h=o,d=h?u.length:u,y=U("x",e[0].dataType,e[0].dims,a),w=U("scale",e[1].dataType,e[1].dims,c),_=U("bias",e[2].dataType,e[2].dims,c),v=U("inputMean",e[3].dataType,e[3].dims,c),S=U("inputVar",e[4].dataType,e[4].dims,c),A=j("y",e[0].dataType,d,a),I=()=>{let E="";if(o)E=`let cOffset = ${u.length===1?"0u":i==="NHWC"?`outputIndices[${u.length-1}] / ${a}`:"outputIndices[1]"};`;else if(i==="NCHW")E=`\n            ${A.indicesSet("outputIndices","0","0")}\n            let cOffset = ${A.indicesToOffset("outputIndices")};`;else{E=`var cIndices = ${w.type.indices}(0);\n                       cIndices[0] = outputIndices[${u.length-1}];`;for(let P=1;P<w.rank;P++)E+=`cIndices[${P}] = outputIndices[${P}];`;E+=`let cOffset = ${w.indicesToOffset("cIndices")};`}return E},x=E=>`\n  const epsilon = ${r};\n  ${E.registerUniform("outputSize","u32").declareVariables(y,w,_,v,S,A)}\n  ${E.mainStart()}\n  ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${A.offsetToIndices(`global_idx * ${a}`)};\n    ${I()}\n    let scale = ${w.getByOffset("cOffset")};\n    let bias = ${_.getByOffset("cOffset")};\n    let inputMean = ${v.getByOffset("cOffset")};\n    let inputVar = ${S.getByOffset("cOffset")};\n    let x = ${y.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${A.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${a}`,inputDependencies:h?["rank","type","type","type","type"]:void 0},getShaderSource:x,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h?[{type:12,data:p},...Z(u)]:[{type:12,data:p}]})}},sc=e=>ve(e),Qa=(e,t)=>{let{inputs:r,outputCount:o}=e,i=sc({...t,outputCount:o});if(vr.webgpu.validateInputContent&&ic(r,i),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(ac(r,i))}});var uc,dc,es,ts=Y(()=>{"use strict";Se();_e();uc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},dc=e=>{let t=e[0].dims,r=e[0].dims[2],o=M.size(t)/4,i=e[0].dataType,u=U("input",i,t,4),a=U("bias",i,[r],4),c=U("residual",i,t,4),p=j("output",i,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:d=>`\n  const channels = ${r}u / 4;\n  ${d.declareVariables(u,a,c,p)}\n\n  ${d.mainStart()}\n    ${d.guardAgainstOutOfBoundsWorkgroupSizes(o)}\n    let value = ${u.getByOffset("global_idx")}\n      + ${a.getByOffset("global_idx % channels")} + ${c.getByOffset("global_idx")};\n    ${p.setByOffset("global_idx","value")}\n  }`}},es=e=>{uc(e.inputs),e.compute(dc(e.inputs))}});var lc,ke,rs,ns,os,is,as,ss,us,ds,ls,cc,cs,ps,ms,fs,kn,hs,On,gs,ys,bs,ws,vs,$s,_s,Ss,xs,Cs,As,Is,Ts,Es,Ps,ks,Os,Rs,Bo,Do,Bs,Ds,zs,Rn=Y(()=>{"use strict";ye();Se();Ze();_e();lc=(e,t,r,o,i,u)=>{let a=Math.ceil(t/4),c="";typeof i=="string"?c=`${i}(a)`:c=i("a");let p=U("inputData",r,[a],4),h=j("outputData",o,[a],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(p,h)}\n\n  ${u??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${p.getByOffset("global_idx")};\n    ${h.setByOffset("global_idx",c)}\n  }`},ke=(e,t,r,o,i,u=e.dataType)=>({name:t,shaderCache:{hint:i,inputDependencies:["type"]},getShaderSource:a=>lc(a,M.size(e.dims),e.dataType,u,r,o),getRunData:a=>({outputs:[{dims:e.dims,dataType:u}],dispatchGroup:{x:Math.ceil(M.size(a[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(e.dims)/4)}]})}),rs=e=>{e.compute(ke(e.inputs[0],"Abs","abs"))},ns=e=>{e.compute(ke(e.inputs[0],"Acos","acos"))},os=e=>{e.compute(ke(e.inputs[0],"Acosh","acosh"))},is=e=>{e.compute(ke(e.inputs[0],"Asin","asin"))},as=e=>{e.compute(ke(e.inputs[0],"Asinh","asinh"))},ss=e=>{e.compute(ke(e.inputs[0],"Atan","atan"))},us=e=>{e.compute(ke(e.inputs[0],"Atanh","atanh"))},ds=e=>ve(e),ls=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${t.to}`)}e.compute(ke(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},cc=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:xn,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Cn;return ve({min:t,max:r})},cs=(e,t)=>{let r=e.inputs.length===1?t:cc(e.inputs),o=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Clip",i=>`clamp(${i}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));\n    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));\n`,r.cacheKey),{inputs:[0]})},ps=e=>{e.compute(ke(e.inputs[0],"Ceil","ceil"))},ms=e=>{e.compute(ke(e.inputs[0],"Cos","cos"))},fs=e=>{e.compute(ke(e.inputs[0],"Cosh","cosh"))},kn=e=>ve(e),hs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`\n  const elu_alpha_ = ${r}(${t.alpha});\n\n  fn elu_f32(a: ${r}) -> ${r} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,t.cacheKey))},On=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,gs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,On(t)))},ys=e=>{e.compute(ke(e.inputs[0],"Exp","exp"))},bs=e=>{e.compute(ke(e.inputs[0],"Floor","floor"))},ws=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,On(t)))},vs=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},$s=e=>{e.compute(ke(e.inputs[0],"Not",t=>`!${t}`))},_s=e=>{e.compute(ke(e.inputs[0],"Neg",t=>`-${t}`))},Ss=e=>{e.compute(ke(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},xs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Cs=e=>{e.compute(ke(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},As=e=>ve(e),Is=(e,t)=>{let r=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Ts=e=>{e.compute(ke(e.inputs[0],"Sin","sin"))},Es=e=>{e.compute(ke(e.inputs[0],"Sinh","sinh"))},Ps=e=>{e.compute(ke(e.inputs[0],"Sqrt","sqrt"))},ks=e=>{e.compute(ke(e.inputs[0],"Tan","tan"))},Os=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Rs=e=>{e.compute(ke(e.inputs[0],"Tanh",Os))},Bo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${Os("v")};\n}\n`,Do=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Bs=e=>{let t=et(e.inputs[0].dataType);e.compute(ke(e.inputs[0],"FastGelu",Do,Bo(t),void 0,e.inputs[0].dataType))},Ds=(e,t)=>{let r=et(e.inputs[0].dataType);return e.compute(ke(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},zs=e=>{e.compute(ke(e.inputs[0],"Log","log"))}});var pc,mc,Us,Vs=Y(()=>{"use strict";Se();_e();Rn();pc=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},mc=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=U("input",e[0].dataType,e[0].dims,4),o=U("bias",e[0].dataType,[e[0].dims[2]],4),i=j("output",e[0].dataType,t,4),u=M.size(t)/4,a=De(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:p=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${p.declareVariables(r,o,i)}\n\n  ${On(a)}\n\n  ${p.mainStart()}\n    ${p.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${i.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},Us=e=>{pc(e.inputs),e.compute(mc(e.inputs))}});var fc,hc,Ot,Ws,Ns,Gs,Hs,Ls,Fs,qs,js,Ks,Ys,Zs=Y(()=>{"use strict";ye();Se();_e();fc=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w,_;typeof c=="string"?w=_=(x,E)=>`${c}((${x}),(${E}))`:typeof c=="function"?w=_=c:(w=c.scalar,_=c.vector);let v=j("outputData",d,o.length,4),S=U("aData",p,t.length,4),A=U("bData",h,r.length,4),I;if(i)if(u){let x=M.size(t)===1,E=M.size(r)===1,P=t.length>0&&t[t.length-1]%4===0,O=r.length>0&&r[r.length-1]%4===0;x||E?I=v.setByOffset("global_idx",_(x?`${S.type.value}(${S.getByOffset("0")}.x)`:S.getByOffset("global_idx"),E?`${A.type.value}(${A.getByOffset("0")}.x)`:A.getByOffset("global_idx"))):I=`\n            let outputIndices = ${v.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${S.broadcastedIndicesToOffset("outputIndices",v)};\n            let offsetB = ${A.broadcastedIndicesToOffset("outputIndices",v)};\n            ${v.setByOffset("global_idx",_(a||P?S.getByOffset("offsetA / 4u"):`${S.type.value}(${S.getByOffset("offsetA / 4u")}[offsetA % 4u])`,a||O?A.getByOffset("offsetB / 4u"):`${A.type.value}(${A.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else I=v.setByOffset("global_idx",_(S.getByOffset("global_idx"),A.getByOffset("global_idx")));else{if(!u)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let x=(E,P,O="")=>{let R=`aData[indexA${P}][componentA${P}]`,L=`bData[indexB${P}][componentB${P}]`;return`\n            let outputIndices${P} = ${v.offsetToIndices(`global_idx * 4u + ${P}u`)};\n            let offsetA${P} = ${S.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let offsetB${P} = ${A.broadcastedIndicesToOffset(`outputIndices${P}`,v)};\n            let indexA${P} = offsetA${P} / 4u;\n            let indexB${P} = offsetB${P} / 4u;\n            let componentA${P} = offsetA${P} % 4u;\n            let componentB${P} = offsetB${P} % 4u;\n            ${E}[${P}] = ${O}(${w(R,L)});\n          `};d===9?I=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:I=`\n            ${x("outputData[global_idx]",0)}\n            ${x("outputData[global_idx]",1)}\n            ${x("outputData[global_idx]",2)}\n            ${x("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(S,A,v)}\n\n        ${y??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${I}\n      }`},hc=(e,t,r,o,i,u,a=r.dataType)=>{let c=!M.areEqual(r.dims,o.dims),p=r.dims,h=M.size(r.dims),d=!1,y=!1,w=[c];if(c){let _=It.calcShape(r.dims,o.dims,!1);if(!_)throw new Error("Can\'t perform binary op on the given tensors");p=_,h=M.size(p);let v=M.size(r.dims)===1,S=M.size(o.dims)===1,A=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,I=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;w.push(v),w.push(S),w.push(A),w.push(I);let x=1;for(let E=1;E<p.length;E++){let P=r.dims[r.dims.length-E]??1,O=o.dims[o.dims.length-E]??1;if(P===O)x*=P;else break}x%4===0?(y=!0,d=!0):(v||S||A||I)&&(d=!0)}else d=!0;return w.push(d),{name:e,shaderCache:{hint:t+w.map(_=>_.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:_=>fc(_,r.dims,o.dims,p,d,c,y,i,r.dataType,o.dataType,a,u),getRunData:()=>({outputs:[{dims:p,dataType:a}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:Math.ceil(M.size(p)/4)},...Z(r.dims,o.dims,p)]})}},Ot=(e,t,r,o,i,u)=>{e.compute(hc(t,i??"",e.inputs[0],e.inputs[1],r,o,u))},Ws=e=>{Ot(e,"Add",(t,r)=>`${t}+${r}`)},Ns=e=>{Ot(e,"Div",(t,r)=>`${t}/${r}`)},Gs=e=>{Ot(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},Hs=e=>{Ot(e,"Mul",(t,r)=>`${t}*${r}`)},Ls=e=>{let t=U("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Ot(e,"Pow",{scalar:(o,i)=>`pow_custom(${o},${i})`,vector:(o,i)=>`pow_vector_custom(${o},${i})`},`\n    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {\n      if (b == ${t}(0.0)) {\n        return ${t}(1.0);\n      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {\n        return ${t}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {\n      // TODO: implement vectorized pow\n      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Fs=e=>{Ot(e,"Sub",(t,r)=>`${t}-${r}`)},qs=e=>{Ot(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},js=e=>{Ot(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},Ks=e=>{Ot(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},Ys=e=>{Ot(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var St,xt,Ct,Bn,Ft=Y(()=>{"use strict";ye();Se();St=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},xt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ct=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Bn=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[xn,Cn];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var tt,Dn,zn=Y(()=>{"use strict";tt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Dn=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var Mn,zo=Y(()=>{"use strict";Mn=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var yc,bc,Hr,Xs,wc,Lr,vc,Un,Fr=Y(()=>{"use strict";ye();Se();_e();Ft();zn();yc=(e,t)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${t?", batchIndices":""});\n        `,bc=(e,t)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,Hr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32)=>{let p=t[1]*e[1],h=t[0]*e[0],d=i?p:u,y=i?u:p,w=d/t[0],_=u/t[1];if(!((i&&w===4&&e[1]===4||!i&&(w===3||w===4))&&d%t[0]===0&&u%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${i} is true, innerElementSize ${w} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${w} must be 3 or 4.\n  tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}. tileInner ${u} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${w}<${r}>, ${d/w}>, ${y}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${r}>, ${h/e[0]}>, ${u}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${w};\nconst tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${a?"0":"i32(globalId.z)"};\n  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${p};\n\n  let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n  var acc: array<vec4<${r}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${_};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${yc(i,o)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${w===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${bc(i,w)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Xs=(e,t)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${t?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${t?", batchIndices":""});\n            `,wc=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",Lr=(e,t,r="f32",o,i=!1,u=32,a=!1,c=32,p=!1)=>{let h=e[1]*t[1],d=e[0]*t[0],y=i?h:u,w=i?u:h;if(!(w%t[1]===0&&y%t[0]===0&&u%t[1]===0))throw new Error(`tileAHight ${w} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${y} must be divisible by workgroupSize[0]${t[0]}, tileInner ${u} must be divisible by workgroupSize[1]${t[1]}`);let _=w/t[1],v=y/t[0],S=u/t[1],A=p?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${h};\n    let globalColStart = i32(workgroupId.x) * ${d};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${w}; inputRow = inputRow + ${t[1]}) {\n        for (var inputCol = localCol; inputCol < ${y}; inputCol = inputCol + ${t[0]}) {\n          ${Xs(i,o)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${t[1]}) {\n            for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${o?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${r}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${i?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${t[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${t[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${h};\n\nlet tileRowA = i32(localId.y) * ${_};\nlet tileColA = i32(localId.x) * ${v};\nlet tileRowB = i32(localId.y) * ${S};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${v}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Xs(i,o)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${S}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${o?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${r}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${wc(i)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${r}, ${y}>, ${w}>;\n  var<workgroup> mm_Bsub : array<array<${r}, ${d}>, ${u}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${u};\n\n@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${a?"0":"i32(globalId.z)"};\n    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${a?`${Math.ceil(c/u)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${a?`i32(globalId.z) * ${c}`:"0"};\n\n    var acc : array<array<${r}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${A}\n  }\n`},vc=(e,t,r,o,i,u=!1)=>{let[a,c,p]=i,[h,d,y,w]=o,_=_r(a,p),v=_r(c,p),S=De(o[0].type.tensor),A=()=>{let E=d.rank,P=h.rank,O=`var aIndices: ${d.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\naIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return _.forEach(R=>{O+=`\naIndices[${R}] = 0;`}),O+=`\naIndices[${E-2}] = u32(row);\n                   aIndices[${E-1}] = u32(colIn);`,O},I=()=>{let E=y.rank,P=h.rank,O=`var bIndices: ${y.type.indices};`;for(let R=E-2-1,L=P-1;R>=0;R--,L--)O+=`\nbIndices[${R}] = ${P>1?`batchIndices[${L}]`:"batchIndices"};`;return v.forEach(R=>{O+=`\nbIndices[${R}] = 0;`}),O+=`\nbIndices[${E-2}] = u32(row);\n                   bIndices[${E-1}] = u32(colIn);`,O};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${A()}\n        value = ${d.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${h.type.indices}) -> ${tt(e,S)} {\n      var value = ${tt(e,S)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${I()}\n        value = ${y.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${tt(e,S)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${t?`value = value + ${u?"bias[colIn]":`${tt(e,S)}(bias[row])`};`:""}\n        ${r}\n        ${w.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Un=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u.slice(0,-2),p=a.slice(0,-2),h=o?o.slice(0,-2):r.slice(0,-2),d=M.size(h),y=u[u.length-2],w=u[u.length-1],_=a[a.length-1],v=w%4===0&&_%4===0,S=y<=8?[4,1,1]:[4,4,1],A=[8,8,1],I=[Math.ceil(_/A[0]/S[0]),Math.ceil(y/A[1]/S[1]),Math.ceil(d/A[2]/S[2])],x=v?4:1,E=[...c,y,w/x],P=E.length,O=[...p,w,_/x],R=O.length,L=[d,y,_/x],N=[{type:6,data:y},{type:6,data:_},{type:6,data:w}];xt(t,N),N.push(...Z(h,E,O));let K=["rank","rank"],Q=e.length>2;Q&&(N.push(...Z(e[2].dims)),K.push("rank")),N.push(...Z(L));let he=W=>{let se=h.length,Ce=An("batchDims",e[0].dataType,se,1),We=De(e[0].dataType),ee=U("a",e[0].dataType,P,x),ae=U("b",e[1].dataType,R,x),Ae=j("result",e[0].dataType,L.length,x),me=[ee,ae];if(Q){let G=i?x:1;me.push(U("bias",e[2].dataType,e[2].dims.length,G))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ct(t,ie);let ue=De(Ae.type.tensor),le=St(t,Ae.type.value,ue),qe=vc(x,Q,le,[Ce,ee,ae,Ae],[c,p,h],i);return`\n  ${W.registerUniforms(ie).registerInternalVariables(Ce).declareVariables(...me,Ae)}\n  ${qe}\n  ${v?Hr(S,A,We,Ce):Lr(S,A,We,Ce)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${S};${t.activation};${v};${i}`,inputDependencies:K},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:I[0],y:I[1],z:I[2]},programUniforms:N}),getShaderSource:he}}});var $c,Qs,Js=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();$c=(e,t,r,o,i=!1,u,a=4,c=4,p=4,h="f32")=>{let d=Q=>{switch(Q){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${h}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},y=Q=>{switch(Q){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${Q} is not supported.`)}},w=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,_=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,v=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",S=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",A=e?"row":"col",I=e?"col":"row",x=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${A} / outWidth;\n    let outCol = ${A} % outWidth;\n\n    let WRow = ${I} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${I} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${I} % inChannels;\n    var resData = ${tt(a,h)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${v} && xCol >= 0 && xCol < ${S}) {\n      ${w}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${d(a)}\n    }\n    return resData;`,E=e?t&&o?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`:o&&r?`\n    let col = colIn * ${a};\n    ${x}`:`\n    let col = colIn * ${a};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${x}\n    }\n    return ${tt(a,h)}(0.0);`,P=`${y(c)}`,O=tt(p,h),R=e?tt(a,h):tt(c,h),L=e?tt(c,h):tt(a,h),N=St(u,O,h);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${R} {\n      ${e?E:P}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${L} {\n      ${e?P:E}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${O}) {\n      let col = colIn * ${p};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${_}\n      ${Dn(i)}\n      ${N}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Qs=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&(h%4===0||h%3===0)&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${E}`);let P=v?p&&h%4!==0?3:4:1,O=I[1]*x[1],R=I[0]*x[0],L=Math.max(I[0]*P,I[1]),N=o%O===0,K=i%R===0,Q=u%L===0,he=v?[P,4,4]:[1,1,1],W=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];xt(t,W),W.push(...Z(e[0].dims,e[1].dims));let se=["rank","rank"];a&&(W.push(...Z(e[2].dims)),se.push("rank")),W.push(...Z(r));let Ce=We=>{let ee=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ct(t,ee);let ae=v?4:1,Ae=De(e[0].dataType),me=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        result[flatIndex] = ${v?`vec4<${Ae}>`:Ae}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${v?`vec4<${Ae}>`:Ae}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${v?"/ 4":""}, value);\n      }`,ie=U("x",e[0].dataType,e[0].dims.length,P===3?1:P),ue=U("w",e[1].dataType,e[1].dims.length,ae),le=[ie,ue],qe=j("result",e[0].dataType,r.length,ae);if(a){let G=U("bias",e[2].dataType,e[2].dims.length,ae);le.push(G),me+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${v?`vec4<${Ae}>`:Ae} {\n          return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n        }`}return`\n        ${Mn("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${We.registerUniforms(ee).declareVariables(...le,qe)}\n        ${me}\n        ${$c(p,N,K,Q,a,t,he[0],he[1],he[2],Ae)}\n        ${v?Hr(x,I,Ae,void 0,!p,L):Lr(x,I,Ae,void 0,!p,L,!1,void 0,c)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${P};${v};${N};${K};${Q};${O};${R};${L}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:W}),getShaderSource:Ce}}});var Mo,eu,tu=Y(()=>{"use strict";ye();Se();_e();Uo();Ft();Mo=(e,t,r)=>{let o=e.length>2,i=o?"value += b[output_channel];":"",u=e[0].dims,a=e[1].dims,c=a[0]/t.group,p=t.format==="NHWC",h=Vn(u,a,t.dilations,t.pads,t.strides,p),d=M.size(h),y=[{type:12,data:d},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:c}];xt(t,y),y.push(...Z(u,a));let w=["rank","rank"];o&&(y.push(...Z(e[2].dims)),w.push("rank")),y.push(...Z(h));let _=v=>{let S=j("output",e[0].dataType,h.length),A=De(S.type.tensor),I=St(t,S.type.value,A),x=U("x",e[0].dataType,u.length),E=U("w",e[1].dataType,a.length),P=[x,E];o&&P.push(U("b",e[2].dataType,e[2].dims.length));let O=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ct(t,O),`\n  ${v.registerUniforms(O).declareVariables(...P,S)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${S.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${p?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${p?1:2}], outputIndices[${p?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${S.type.value} = ${S.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${p?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${p?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${p?x.get("batch","xHeight","xWidth","input_channel"):x.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${E.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${i}\n    ${I}\n    ${S.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:w},getRunData:()=>({outputs:[{dims:r?r(h):h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y}),getShaderSource:_}},eu=(e,t,r)=>{let o=e.length>2,i=Me(r[3]),u=Me(r[2]),a=M.size(r)/i/u,c=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],p=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],h=[r[0],r[1],r[2],r[3]/i],d=[{type:12,data:a},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];xt(t,d),d.push(...Z(c,p,h));let y=(u-1)*t.strides[1]+p[1],w=_=>{let v=j("output",e[0].dataType,h.length,i),S=De(v.type.tensor),A=St(t,v.type.value,S),I=U("x",e[0].dataType,c.length,i),x=U("w",e[1].dataType,p.length,i),E=[I,x];o&&E.push(U("b",e[2].dataType,e[2].dims,i));let P=o?"value += b[output_channel];":"",O=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ct(t,O),`\n  ${_.registerUniforms(O).declareVariables(...E,v)}\n  ${_.mainStart()}\n    ${_.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${u}u;\n    let col = (index1 % width1) * ${u}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${I.type.value}, ${y}>;\n    var values: array<${v.type.value}, ${u}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${p[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${y}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${I.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${I.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${p[1]}; w_width++) {\n          let w_val = ${x.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${u}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${u}u; i++) {\n      var value = values[i];\n      ${P}\n      ${A}\n      ${v.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${i};${u};${y};${p[0]};${p[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:w}}});var Vo,_c,ru,Wo=Y(()=>{"use strict";ye();Se();Fr();_e();Ft();Vo=(e,t,r,o,i=!1)=>{let u=e[0].dims,a=e[1].dims,c=u[u.length-2],p=a[a.length-1],h=u[u.length-1],d=Me(p),y=Me(h),w=Me(c),_=M.size(r)/d/w,v=e.length>2,S=o?o.slice(0,-2):r.slice(0,-2),I=[M.size(S),c,p],x=[{type:12,data:_},{type:12,data:c},{type:12,data:p},{type:12,data:h}];xt(t,x),x.push(...Z(S,u,a)),v&&x.push(...Z(e[2].dims)),x.push(...Z(I));let E=P=>{let O=An("batch_dims",e[0].dataType,S.length),R=U("a",e[0].dataType,u.length,y),L=U("b",e[1].dataType,a.length,d),N=j("output",e[0].dataType,I.length,d),K=De(N.type.tensor),Q=St(t,N.type.value,K),he=[R,L],W="";if(v){let ie=i?d:1;he.push(U("bias",e[2].dataType,e[2].dims.length,ie)),W=`${i?`value += bias[col / ${ie}];`:`value += ${N.type.value}(bias[row + i]);`}`}let se=u.slice(0,-2),Ce=a.slice(0,-2),We=_r(se,S),ee=_r(Ce,S),ae=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ct(t,ae);let Ae=(ie,ue)=>{let le=ie.rank,qe=ie.name;if(le===2)return`var ${qe}_indices = ${ie.type.indices}(0u, 0u);`;let G=O.rank,ne=`var ${qe}_indices: ${ie.type.indices};`;for(let xe=le-2-1,Ke=G-1;xe>=0;xe--,Ke--)ne+=`\n${qe}_indices[${xe}] = ${G>1?`batch_indices[${Ke}]`:"batch_indices"};`;return ue.forEach(xe=>{ne+=`\n${qe}_indices[${xe}] = 0;`}),ne+=`${qe}_indices[${le-2}] = 0u;\n                     ${qe}_indices[${le-1}] = 0u;`,ne},me=()=>{let ie=`var a_data: ${R.type.value};`;for(let ue=0;ue<y;ue++)ie+=`\n              let b_data${ue} = b[(b_offset + (k + ${ue}) * uniforms.N + col) / ${d}];`;for(let ue=0;ue<w;ue++){ie+=`a_data = a[(a_offset + (row + ${ue}) * uniforms.K + k) / ${y}];`;for(let le=0;le<y;le++)ie+=`\n            values[${ue}] = fma(${L.type.value}(a_data${y===1?"":`[${le}]`}), b_data${le}, values[${ue}]);\n`}return ie};return`\n  ${P.registerUniforms(ae).registerInternalVariables(O).declareVariables(...he,N)}\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${d})) * ${d};\n    var index1 = global_idx / (uniforms.N / ${d});\n    let stride1 = uniforms.M / ${w};\n    let row = (index1 % stride1) * ${w};\n    let batch = index1 / stride1;\n\n    ${r.length===2?"":`let batch_indices = ${O.offsetToIndices("batch")};`}\n    ${Ae(R,We)}\n    let a_offset = ${R.indicesToOffset("a_indices")};\n    ${Ae(L,ee)}\n    let b_offset = ${L.indicesToOffset("b_indices")};\n    var values: array<${N.type.value}, ${w}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${y}) {\n      ${me()}\n    }\n    for (var i = 0u; i < ${w}u; i++) {\n      var value = values[i];\n      ${W}\n      ${Q}\n      let cur_indices = ${N.type.indices}(batch, row + i, col);\n      let offset = ${N.indicesToOffset("cur_indices")};\n      ${N.setByOffset(`offset / ${d}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${d};${y};${w};${i}`,inputDependencies:v?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:x}),getShaderSource:E}},_c=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},ru=e=>{_c(e.inputs);let t=It.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can\'t use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Vo(e.inputs,{activation:""},t)):e.compute(Un(e.inputs,{activation:""},t))}});var Vn,No,Sc,nu,Go,xc,Cc,Ho,Uo=Y(()=>{"use strict";Se();Js();Fr();tu();Ft();Wo();Sr();Vn=(e,t,r,o,i,u)=>{let a=e[0],c=e.slice(u?1:2,u?3:4),p=c.length,h=t[0],y=t.slice(2).map((v,S)=>v+(v-1)*(r[S]-1)),_=c.map((v,S)=>v+o[S]+o[S+p]).map((v,S)=>Math.floor((v-y[S]+i[S])/i[S]));return _.splice(0,0,a),_.splice(u?3:1,0,h),_},No=[2,3,1,0],Sc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let i=e[0].dims.length-2;if(t.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(t.strides.length!==i)throw new Error(`strides should be ${i}D`);if(t.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},nu=(e,t)=>{let r=e.kernelShape.slice();for(let u=2;u<t[1].dims.length;++u)r[u-2]===0&&(r[u-2]=t[1].dims[u]);let o=e.pads.slice();nr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let i=Object.assign({},e);return Object.assign(i,{kernelShape:r,pads:o}),i},Go=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],i=e.dilations,u=e.group,a=e.kernel_shape,c=e.pads,p=e.strides,h=e.w_is_const();return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},xc=(e,t,r)=>{let o=nu(r,t),i=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&i&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let L=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),N=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=N);let K=[t[0],N];t.length===3&&K.push(t[2]),e.compute(eu(K,o,L),{inputs:K})}else e.compute(Mo(t,o));return}let u=t.length===3,a=t[0].dims[i?1:2],c=t[0].dims[i?2:3],p=t[0].dims[i?3:1],h=t[1].dims[2],d=t[1].dims[3],y=Vn(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,i),w=y[i?1:2],_=y[i?2:3],v=y[i?3:1],S=i&&h===a&&d===c&&r.pads[0]===0&&r.pads[1]===0;if(S||h===1&&d===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let R=y[0],L,N,K,Q=[];if(i){let se=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=se),S){let Ce=a*c*p;L=t[0].reshape([1,R,Ce]),N=se.reshape([1,Ce,v]),K=[1,R,v]}else L=t[0].reshape([R,a*c,p]),N=se.reshape([1,p,v]),K=[R,w*_,v];Q.push(L),Q.push(N)}else L=t[0].reshape([R,p,a*c]),N=t[1].reshape([1,v,p]),K=[R,v,w*_],Q.push(N),Q.push(L);u&&Q.push(t[2]);let he=K[2],W=Q[0].dims[Q[0].dims.length-1];he<8&&W<8?e.compute(Vo(Q,o,y,K,i),{inputs:Q}):e.compute(Un(Q,o,y,K,i),{inputs:Q});return}let A=!0,I=e.kernelCustomData.wT??e.compute(yt(t[1],No),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=I);let x=[t[0],I];u&&x.push(t[2]);let E=i?w*_:v,P=i?v:w*_,O=h*d*p;e.compute(Qs(x,o,y,E,P,O,u,A),{inputs:x})},Cc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=[0,t.pads[0],0,t.pads[1]],u=[1].concat(t.strides),a=[1].concat(t.dilations),c=[1].concat(t.kernelShape),p=nu({...t,pads:i,strides:u,dilations:a,kernelShape:c},o);e.compute(Mo(o,p,h=>r?[h[0],h[2],h[3]]:[]))},Ho=(e,t)=>{Sc(e.inputs,t),e.inputs[0].dims.length===3?Cc(e,t):xc(e,e.inputs,t)}});var Ac,ou,iu=Y(()=>{"use strict";ye();Lt();_e();Ft();zn();zo();Fr();Ac=(e,t=!1,r,o,i=4)=>{let u=I=>{switch(I){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${o}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${I} is not supported.`)}},a=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,c=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,p=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",h=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",d=e?"row":"col",y=e?"col":"row",w=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${d} / outWidth;\n      let outCol = ${d} % outWidth;\n\n      let WRow = ${y} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${y} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${p}) || fract(xR) > 0.0) {\n        return ${o}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${h}) || fract(xC) > 0.0) {\n        return ${o}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${y} % inChannels;\n      ${a}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${i}];`,_=e?`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${w}\n      }\n      return ${o}(0.0);`:`\n      let col = colIn * ${i};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${w}\n      }\n      return ${o}(0.0);`,v=`\n      let col = colIn * ${i};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${u(i)}\n      }\n      return ${o}(0.0);\n      `,S=St(r,o);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?_:v}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {\n    ${e?v:_}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {\n    let col = colIn * ${i};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${c}\n      ${Dn(t)}\n      ${S}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${i}] = value;\n    }\n  }`},ou=(e,t,r,o,i,u,a,c)=>{let p=t.format==="NHWC",h=p?e[0].dims[3]:e[0].dims[1],d=r[0],y=p?r[2]:r[3],w=p?r[1]:r[2],_=p?r[3]:r[1],v=p&&h%4===0&&h%3&&_%4===0,S=p?_:y*w,A=p?y*w:_,I=[8,8,1],x=o<=8?[4,1,1]:[4,4,1],E=[Math.ceil(S/I[0]/x[0]),Math.ceil(A/I[1]/x[1]),Math.ceil(d/I[2]/x[2])];Ve("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${E}`);let P=v?4:1,O=Math.max(I[0]*P,I[1]),R=v?4:1,L=[t.kernelShape[p?1:2],t.kernelShape[p?2:3]],N=[L[0]+(t.dilations[0]<=1?0:(L[0]-1)*(t.dilations[0]-1)),L[1]+(t.dilations[1]<=1?0:(L[1]-1)*(t.dilations[1]-1))],K=[N[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),N[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],Q=[{type:6,data:o},{type:6,data:i},{type:6,data:u},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:L},{type:6,data:K}];xt(t,Q),Q.push(...Z(e[0].dims,e[1].dims));let he=["rank","rank"];a&&(Q.push(...Z(e[2].dims)),he.push("rank")),Q.push(...Z(r));let W=se=>{let Ce=U("x",e[0].dataType,e[0].dims.length,R),We=U("w",e[1].dataType,e[1].dims.length,1),ee=j("result",e[0].dataType,r.length,R),ae=[Ce,We],Ae="";if(a){let ue=U("bias",e[2].dataType,e[2].dims.length,R);ae.push(ue),Ae+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ue.type.value} {\n            return bias[coords.${p?"w":"y"}${v?"/ 4":""}];\n          }`}let me=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:L.length},{name:"pads",type:"i32",length:K.length}];Ct(t,me);let ie=De(e[0].dataType,1);if(ie!=="f16"&&ie!=="f32")throw new Error(`elemType ${ie} is not supported.`);return`\n        ${Mn("uniforms.result_strides")}\n        ${se.registerUniforms(me).declareVariables(...ae,ee)};\n        ${Ae}\n        ${Ac(p,a,t,Ce.type.value,P)}\n        ${v?Hr(x,I,ie,void 0,!p,O):Lr(x,I,ie,void 0,!p,O,!1,void 0,c)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${x};${I};${v}`,inputDependencies:he},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:E[0],y:E[1],z:E[2]},programUniforms:Q}),getShaderSource:W}}});var Ic,Lo,au=Y(()=>{"use strict";ye();Lt();Se();_e();Ic=(e,t,r,o,i,u=!1,a,c,p=!1)=>{let h=p?1:2,d=p?2:3,y=p?3:1,w=u?2:1,_=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${u?`vec4<${a}>`:a}) {\n    result[flatIndex] = ${u?`vec4<${a}>`:a}(value);\n  }`;o&&(_+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${u?`vec4<${a}>`:a} {\n      return bias[coords.${p?"w":"y"}${u?"/ 4":""}];\n    }`);let v=u?4:1,S=U("W",t[1].dataType,t[1].dims.length,v),A=U("Dy",t[0].dataType,t[0].dims.length,v),I=[A,S];o&&I.push(U("bias",t[2].dataType,[r[y]].length,v));let x=j("result",t[0].dataType,r.length,v),E=`{\n        let batch: u32 = ${i?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${i?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${i?"global_id.y":"workgroup_id.y"} * ${w};\n        let d1: u32 = ${i?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${a}>, ${w}>;\n        for (var i = 0; i < ${w}; i++) {\n          dotProd[i] = vec4<${a}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${a}(dyCorner.x) + ${a}(wR)) / ${a}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${a}(dyCorner.y) + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let dyC2 = (${a}(dyCorner.y) + 1.0 + ${a}(wC)) / ${a}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${a}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${A.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${a}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${y}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${S.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${A.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${a}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${w}; i = i + 1) {\n          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${a}>(0.0)`};\n          ${x.set("batch","r","c + i","d1","value")};\n        }\n      }`,P=`\n          let outputIndices = ${x.offsetToIndices("global_idx")};\n          let batch = ${x.indicesGet("outputIndices",0)};\n          let d1 = ${x.indicesGet("outputIndices",y)};\n          let r = ${x.indicesGet("outputIndices",h)};\n          let c = ${x.indicesGet("outputIndices",d)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${a}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${a}(dyRCorner) + ${a}(wR)) / ${a}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${a}(uniforms.Dy_shape[${h}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${a}(dyCCorner) + ${a}(wC)) / ${a}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${a}(uniforms.Dy_shape[${d}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${p?A.get("batch","idyR","idyC","inputChannel"):A.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${S.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${o?"bias[d1]":`${a}(0.0)`};\n          ${x.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(c).declareVariables(...I,x)}\n  ${_}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${u?E:P}}`},Lo=(e,t,r)=>{let o=e.length>2,i=t.outputShape,u=M.size(i),a=[Math.ceil(u/64),1,1];Ve("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${a}`);let c=t.format==="NHWC",p=["rank","rank"],h=[t.strides[0],t.strides[1]],d=[t.kernelShape[c?1:2],t.kernelShape[c?2:3]],y=[t.dilations[0],t.dilations[1]],w=[d[0]+(t.dilations[0]<=1?0:(t.kernelShape[c?1:2]-1)*(t.dilations[0]-1)),d[1]+(t.dilations[1]<=1?0:(t.kernelShape[c?2:3]-1)*(t.dilations[1]-1))],_=[w[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),w[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],v=!1,S=t.group,A=e[1].dims,I=A[0]/S,x=A[1],E=[{type:12,data:u},{type:12,data:h},{type:12,data:d},{type:12,data:y},{type:12,data:w},{type:6,data:_},{type:12,data:I},{type:12,data:x},...Z(e[0].dims,e[1].dims)];o&&(E.push(...Z(e[2].dims)),p.push("rank")),E.push(...Z(i));let P=a[1]===1&&a[2]===1,O=R=>{let L=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:h.length},{name:"filter_dims",type:"u32",length:d.length},{name:"dilations",type:"u32",length:d.length},{name:"effective_filter_dims",type:"u32",length:w.length},{name:"pads",type:"i32",length:_.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],N=De(e[0].dataType);return`${Ic(R,e,i,o,P,v,N,L,c)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:p},getRunData:()=>({dispatchGroup:{x:a[0],y:a[1],z:a[2]},outputs:[{dims:r?r(i):i,dataType:e[0].dataType}],programUniforms:E}),getShaderSource:O}}});var Tc,Ec,Pc,su,uu,kc,Oc,Rc,Bc,du,lu=Y(()=>{"use strict";iu();au();Ft();Sr();Tc=(e,t,r,o,i,u)=>(e-1)*t+r+(o-1)*i+1-u,Ec=(e,t,r,o,i)=>{let u=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=u,r[i]=e-u):t==="SAME_LOWER"&&(r[o]=e-u,r[i]=u)},Pc=(e,t,r,o,i,u,a,c,p,h)=>{let d=e.length-2,y=h.length===0;if(p.length===0)for(let v=0;v<d;++v)p.push(0);let w=e[0],_=t[c?3:1]*i;for(let v=0,S=e.length-d-(c?1:0);v<d;++v,++S){let A=e[S],I=y?A*a[v]:h[v],x=Tc(A,a[v],u[v],t[S],r[v],I);Ec(x,o,u,v,v+d),y&&h.push(a[v]*(A-1)+p[v]+(t[S]-1)*r[v]+1-u[v]-u[v+d])}h.splice(0,0,w),h.splice(c?3:1,0,_)},su=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((y,w)=>y*w,1)===0){r.length=0;for(let y=2;y<t[1].dims.length;++y)r.push(t[1].dims[y])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let i=e.pads.slice(),u=e.outputShape.slice(),a=e.outputPadding.slice(),c=t[0].dims,p=e.dilations.slice();if(p.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;p=new Array(y).fill(1)}let h=e.strides.slice();if(h.reduce((y,w)=>y+w,0)===0){let y=t[0].dims.length-2;h=new Array(y).fill(1)}Pc(c,r,p,e.autoPad,e.group,i,h,o,a,u);let d=Object.assign({},e);return Object.assign(d,{kernelShape:r,pads:i,outputPadding:a,outputShape:u,dilations:p,strides:h}),d},uu=e=>{let t=Bn(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],i=e.dilations,u=e.group,a=e.kernelShape,c=e.pads,p=e.strides,h=e.wIsConst(),d=e.outputPadding,y=e.outputShape;return{autoPad:o,format:r,dilations:i,group:u,kernelShape:a,outputPadding:d,outputShape:y,pads:c,strides:p,wIsConst:h,...t,cacheKey:`${e.format};${t.activation};`}},kc=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let i=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==i))throw new Error("invalid bias");let u=e[0].dims.length-2;if(t.dilations.reduce((d,y)=>d+y,0)>0&&t.dilations.length!==u)throw new Error(`dilations should be ${u}D`);if(t.strides.reduce((d,y)=>d+y,0)>0&&t.strides.length!==u)throw new Error(`strides should be ${u}D`);if(t.pads.reduce((d,y)=>d+y,0)>0&&t.pads.length!==u*2)throw new Error(`pads should be ${u*2}D`);if(t.outputPadding.length!==u&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${u}D`);if(t.kernelShape.reduce((d,y)=>d+y,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Oc=[2,3,1,0],Rc=(e,t,r)=>{let o=su(r,t),i=r.format==="NHWC",u=o.outputShape,a=u[i?3:1],c=t[0].dims[i?3:1];if(o.group!==1||a===1&&c===1){e.compute(Lo(t,o));return}let p=u[i?1:2],h=u[i?2:3],d=t[1].dims[2],y=t[1].dims[3],w=i?p*h:a,_=i?a:p*h,v=d*y*c,S=!0,A=e.kernelCustomData.wT??e.compute(yt(t[1],Oc),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=A);let I=[t[0],A],x=t.length===3;x&&(!i&&t[2].dims.length===1?I.push(t[2].reshape([t[2].dims[0],1,1])):I.push(t[2])),e.compute(ou(I,o,u,w,_,v,x,S),{inputs:I})},Bc=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let i=t.kernelShape;(i.length===0||i[0]===0)&&(i=[e.inputs[1].dims[2]]);let u=t.dilations;(u.length===0||u[0]===0)&&(u=[1]);let a=t.strides;(a.length===0||a[0]===0)&&(a=[1]);let c=t.pads;c.length===0&&(c=[0,0]),c=[0,c[0],0,c[1]],a=[1].concat(a),u=[1].concat(u),i=[1].concat(i);let p=su({...t,pads:c,strides:a,dilations:u,kernelShape:i},o);e.compute(Lo(o,p,h=>r?[h[0],h[2],h[3]]:[h[0],h[1],h[3]]))},du=(e,t)=>{kc(e.inputs,t),e.inputs[0].dims.length===3?Bc(e,t):Rc(e,e.inputs,t)}});var Dc,cu,pu,mu=Y(()=>{"use strict";ye();Se();Ze();_e();Dc=(e,t,r,o)=>{let i=M.size(t),u=t.length,a=U("input",e,u),c=j("output",e,u),p=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),h=M.normalizeAxis(p,u),d=y=>{let w=` i32(${a.indicesGet("inputIndices","uniforms.axis")}) `,_=fe("uniforms.input_shape","uniforms.axis",u),v=o.reverse?w+(o.exclusive?" + 1":""):"0",S=o.reverse?_:w+(o.exclusive?"":" + 1");return`\n                ${y.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(a,c)}\n                ${y.mainStart()}\n                  ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${c.offsetToIndices("global_idx")};\n                  var sum = ${c.type.value}(0);\n                  let first : i32 = ${v};\n                  let last : i32 = ${S};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${a.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${a.getByIndices("inputIndices")};\n                  }\n                  ${c.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},{type:12,data:h},...Z(t,t)]}),getShaderSource:d}},cu=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,i=e.inputs[1];e.compute(Dc(o,r,i,t),{inputs:[0]})},pu=e=>{let t=e.exclusive===1,r=e.reverse===1;return ve({exclusive:t,reverse:r})}});var zc,Mc,Uc,fu,hu,gu=Y(()=>{"use strict";ye();Se();Ze();_e();zc=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Mc=(e,t,r,o)=>{let i=[];i.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {\n    var a: ${r.type.indices};`);for(let u=0;u<t;++u)i.push(r.indicesSet("a",e[u],`i[${u}]`));return i.push("return a;}"),i.join(`\n`)},Uc=(e,t)=>{let r,o,i,u,a,c,p=t.format==="NHWC",h=t.blocksize,d=t.mode==="DCR";p?([r,o,i,u]=e.dims,a=d?[r,o,i,h,h,u/h**2]:[r,o,i,u/h**2,h,h],c=d?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([r,o,i,u]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],a=d?[r,h,h,u/h**2,o,i]:[r,u/h**2,h,h,o,i],c=d?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let y=e.reshape(a),w=y.dims.length,_=e.dataType,v=U("a",_,w),S=j("output",_,w),A=I=>`\n  ${I.registerUniform("output_size","u32").declareVariables(v,S)}\n\n  ${Mc(c,w,v,S)}\n\n  ${I.mainStart()}\n    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${S.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${S.setByOffset("global_idx",v.getByIndices("aIndices"))}\n  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${t.blocksize};${t.mode}`,inputDependencies:["rank"]},getRunData:I=>{let x=p?[r,o*h,i*h,u/h**2]:[r,u/h**2,o*h,i*h],E=M.size(x),P=y.dims,O=M.sortBasedOnPerm(P,c);return{outputs:[{dims:x,dataType:I[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...Z(P,O)]}},getShaderSource:A}},fu=(e,t)=>{zc(e.inputs),e.compute(Uc(e.inputs[0],t))},hu=e=>ve({blocksize:e.blocksize,mode:e.mode,format:e.format})});var Fo,Wn,yu,Vc,Wc,qo,jo,bu,Nc,wu,vu,$u=Y(()=>{"use strict";ye();Se();Ze();_e();Fo="[a-zA-Z]|\\\\.\\\\.\\\\.",Wn="("+Fo+")+",yu="^"+Wn+"$",Vc="("+Wn+",)*"+Wn,Wc="^"+Vc+"$",qo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},jo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,i]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(Wc)))throw new Error("Invalid LHS term");if(o.split(",").forEach((c,p)=>{let h=t[p].dims.slice();if(!c.match(RegExp(yu)))throw new Error("Invalid LHS term");let d=this.processTerm(c,!0,h,p);this.lhs.push(d)}),i==="")i+=[...this.symbolToInfo.entries()].filter(([c,p])=>p.count===1||c==="...").map(([c])=>c).join("");else if(!i.match(RegExp(Wn)))throw new Error("Invalid RHS");i.match(RegExp(Fo,"g"))?.forEach(c=>{if(c==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let p=this.symbolToInfo.get(c);if(p===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(p.dimValue)}}),this.rhs=this.processTerm(i,!1,this.outputDims)}addSymbol(t,r,o){let i=this.symbolToInfo.get(t);if(i!==void 0){if(i.dimValue!==r&&i.count!==1)throw new Error("Dimension mismatch");i.count++,i.inputIndices.push(o)}else i={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,i)}processTerm(t,r,o,i=-1){let u=o.length,a=!1,c=[],p=0;if(!t.match(RegExp(yu))&&!r&&t!=="")throw new Error("Invalid LHS term");let h=t.match(RegExp(Fo,"g")),d=new qo(i);return h?.forEach((y,w)=>{if(y==="..."){if(a)throw new Error("Only one ellipsis is allowed per input term");a=!0;let _=u-h.length+1;if(_<0)throw new Error("Ellipsis out of bounds");if(c=o.slice(p,p+_),this.hasEllipsis){if(this.ellipsisDims.length!==c.length||this.ellipsisDims.toString()!==c.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=c;else throw new Error("Ellipsis must be specified in the LHS");for(let v=0;v<c.length;v++){let S=String.fromCharCode("0".charCodeAt(0)+v);d.addSymbol(S,w+v),this.addSymbol(S,o[p++],i)}}else d.addSymbol(y,w+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(y,o[p++],i)}),d}},bu=e=>e+"_max",Nc=(e,t,r,o)=>{let u=e.map(d=>d.length).map((d,y)=>U(`input${y}`,t,d)),a=M.size(o),c=j("output",t,o.length),p=[...r.symbolToInfo.keys()].filter(d=>!r.rhs.symbolToIndices.has(d)),h=d=>{let y=[],w="var prod = 1.0;",_="var sum = 0.0;",v="sum += prod;",S=[],A=[],I=[],x=[],E=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((O,R)=>{if(r.rhs.symbolToIndices.has(R)){let L=r.rhs.symbolToIndices.get(R)?.[0];L!==void 0&&r.lhs.forEach((N,K)=>{if(O.inputIndices.includes(K)){let Q=N.symbolToIndices.get(R);if(Q===void 0)throw new Error("Invalid symbol error");Q.forEach(he=>{y.push(`${u[K].indicesSet(`input${K}Indices`,he,c.indicesGet("outputIndices",L))}`)})}})}else r.lhs.forEach((L,N)=>{if(O.inputIndices.includes(N)){let K=L.symbolToIndices.get(R);if(K===void 0)throw new Error("Invalid symbol error");K.forEach(Q=>{S.push(`${u[N].indicesSet(`input${N}Indices`,Q,`${R}`)}`)}),x.push(`prod *= ${u[N].getByIndices(`input${N}Indices`)};`)}}),A.push(`for(var ${R}: u32 = 0; ${R} < uniforms.${bu(R)}; ${R}++) {`),I.push("}")});let P=E?[...y,`let sum = ${u.map((O,R)=>O.getByIndices(`input${R}Indices`)).join(" * ")};`]:[...y,_,...A,...S,w,...x,v,...I];return`\n            ${d.registerUniforms(p.map(O=>({name:`${bu(O)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...u,c)}\n\n            ${d.mainStart()}\n            ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${c.offsetToIndices("global_idx")};\n            ${u.map((O,R)=>`var input${R}Indices: ${u[R].type.indices};`).join(`\n`)}\n            ${P.join(`\n`)};\n            ${c.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let d=p.filter(w=>r.symbolToInfo.has(w)).map(w=>({type:12,data:r.symbolToInfo.get(w)?.dimValue||0}));d.push({type:12,data:a});let y=e.map((w,_)=>[...Z(w)]).reduce((w,_)=>w.concat(_),d);return y.push(...Z(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:y}},getShaderSource:h}},wu=(e,t)=>{let r=new jo(e.inputs,t.equation),o=r.outputDims,i=e.inputs.map((u,a)=>u.dims);e.compute(Nc(i,e.inputs[0].dataType,r,o))},vu=e=>{let t=e.equation.replace(/\\s+/g,"");return ve({equation:t})}});var Gc,_u,Hc,Lc,Su,xu=Y(()=>{"use strict";ye();Se();_e();Gc=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,i=t.length<r.length?0:t.length-r.length;for(;o<r.length&&i<t.length;++o,++i)if(r[o]!==t[i]&&r[o]!==1&&t[i]!==1)throw new Error("Expand requires shape to be broadcastable to input")},_u=(e,t)=>{let r=e.length-t.length,o=[];for(let i=0;i<r;++i)o.push(e[i]);for(let i=0;i<t.length;++i)o.push(t[i]===1?e[i+r]:t[i]);return o},Hc=(e,t)=>e.length>t.length?_u(e,t):_u(t,e),Lc=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=Hc(t,r),i=e[0].dataType,u=i===9?4:1,a=Math.ceil(M.size(o)/u),c=h=>{let d=U("input",i,t.length,u),y=j("output",i,o.length,u),w;if(i===9){let _=(v,S,A="")=>`\n          let outputIndices${S} = ${y.offsetToIndices(`outputOffset + ${S}u`)};\n          let offset${S} = ${d.broadcastedIndicesToOffset(`outputIndices${S}`,y)};\n          let index${S} = offset${S} / 4u;\n          let component${S} = offset${S} % 4u;\n          ${v}[${S}] = ${A}(${d.getByOffset(`index${S}`)}[component${S}]);\n        `;w=`\n        let outputOffset = global_idx * ${u};\n        var data = vec4<u32>(0);\n        ${_("data",0,"u32")}\n        ${_("data",1,"u32")}\n        ${_("data",2,"u32")}\n        ${_("data",3,"u32")}\n        ${y.setByOffset("global_idx","data")}\n      }`}else w=`\n        let outputIndices = ${y.offsetToIndices("global_idx")};\n        let inputOffset = ${d.broadcastedIndicesToOffset("outputIndices",y)};\n        ${y.setByOffset("global_idx",d.getByOffset("inputOffset"))}\n      }`;return`\n    ${h.registerUniform("vec_size","u32").declareVariables(d,y)}\n    ${h.mainStart()}\n    ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${w}`},p=[{type:12,data:a},...Z(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:p})}},Su=e=>{Gc(e.inputs),e.compute(Lc(e.inputs),{inputs:[0]})}});var Fc,Cu,Au=Y(()=>{"use strict";ye();Se();_e();Rn();Fc=e=>{let t=e[0].dataType,r=M.size(e[0].dims),o=M.size(e[1].dims),i=o%4===0,u=a=>{let c=U("x",t,[1],4),p=U("bias",t,[1],4),h=j("y",t,[1],4),d=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],y=_=>`\n      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;\n      let bias${_} = ${p.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,w=i?`\n      let bias = ${p.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${y(0)}${y(1)}${y(2)}${y(3)}\n      let bias = ${c.type.value}(bias0, bias1, bias2, bias3);`;return`${a.registerUniforms(d).declareVariables(c,p,h)}\n\n    ${Bo(et(t))}\n\n    ${a.mainStart(or)}\n      ${a.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${c.getByOffset("global_idx")};\n      ${w}\n      let x_in = x + bias;\n      ${h.setByOffset("global_idx",Do("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${i}`,inputDependencies:["type","type"]},getShaderSource:u,getRunData:a=>({outputs:[{dims:a[0].dims,dataType:a[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/or/4)}})}},Cu=e=>{e.inputs.length<2||M.size(e.inputs[1].dims)===0?Bs(e):e.compute(Fc(e.inputs))}});var qc,jc,Iu,Tu,Eu=Y(()=>{"use strict";ye();Se();Ze();_e();qc=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},jc=(e,t)=>{let r=e[0].dims,o=e[1].dims,i=r.length,u=M.normalizeAxis(t.axis,i),a=r.slice(0);a.splice(u,1,...o);let c=r[u],p=e[0].dataType===9?4:1,h=Math.ceil(M.size(a)/p),d=[{type:12,data:h},{type:6,data:c},{type:12,data:u},...Z(e[0].dims,e[1].dims,a)],y=w=>{let _=U("data",e[0].dataType,e[0].dims.length,p),v=U("inputIndices",e[1].dataType,e[1].dims.length),S=j("output",e[0].dataType,a.length,p),A=x=>{let E=o.length,P=`var indicesIndices${x}  = ${v.type.indices}(0);`;for(let O=0;O<E;O++)P+=`${E>1?`indicesIndices${x}[${O}]`:`indicesIndices${x}`} = ${a.length>1?`outputIndices${x}[uniforms.axis + ${O}]`:`outputIndices${x}`};`;P+=`\n          var idx${x} = ${v.getByIndices(`indicesIndices${x}`)};\n          if (idx${x} < 0) {\n            idx${x} = idx${x} + uniforms.axisDimLimit;\n          }\n          var dataIndices${x} : ${_.type.indices};\n        `;for(let O=0,R=0;O<i;O++)O===u?(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = u32(idx${x});`,R+=E):(P+=`${i>1?`dataIndices${x}[${O}]`:`dataIndices${x}`} = ${a.length>1?`outputIndices${x}[${R}]`:`outputIndices${x}`};`,R++);return P},I;if(e[0].dataType===9){let x=(E,P,O="")=>`\n          let outputIndices${P} = ${S.offsetToIndices(`outputOffset + ${P}u`)};\n          ${A(P)};\n          let offset${P} = ${_.indicesToOffset(`dataIndices${P}`)};\n          let index${P} = offset${P} / 4u;\n          let component${P} = offset${P} % 4u;\n          ${E}[${P}] = ${O}(${_.getByOffset(`index${P}`)}[component${P}]);\n        `;I=`\n        let outputOffset = global_idx * ${p};\n        var value = vec4<u32>(0);\n        ${x("value",0,"u32")}\n        ${x("value",1,"u32")}\n        ${x("value",2,"u32")}\n        ${x("value",3,"u32")}\n        ${S.setByOffset("global_idx","value")}\n      `}else I=`\n      let outputIndices = ${S.offsetToIndices("global_idx")};\n      ${A("")};\n      let value = ${_.getByIndices("dataIndices")};\n      ${S.setByOffset("global_idx","value")};\n      `;return`\n      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,v,S)}\n      ${w.mainStart()}\n        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${I}\n      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:y}},Iu=e=>ve({axis:e.axis}),Tu=(e,t)=>{let r=e.inputs;qc(r),e.compute(jc(e.inputs,t))}});var Kc,Yc,Pu,ku,Ou=Y(()=>{"use strict";ye();Se();Ze();_e();Kc=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Yc=(e,t)=>{let r=e[0].dims,o=e[0].dataType,i=r.length,u=e[1].dims,a=e[1].dataType,c=M.normalizeAxis(t.axis,i),p=r[c],h=u.slice(0),d=M.size(h),y=U("input",o,i),w=U("indicesInput",a,u.length),_=j("output",o,h.length),v=[{type:12,data:d},{type:6,data:p},{type:12,data:c}];return v.push(...Z(r,u,h)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:v}),getShaderSource:I=>`\n      ${I.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(y,w,_)}\n      ${I.mainStart()}\n      ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${_.offsetToIndices("global_idx")};\n\n      var idx = ${w.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${y.type.indices}(outputIndices);\n      ${y.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${y.getByIndices("inputIndices")};\n\n      ${_.setByOffset("global_idx","value")};\n  }`}},Pu=e=>ve({axis:e.axis}),ku=(e,t)=>{let r=e.inputs;Kc(r),e.compute(Yc(e.inputs,t))}});var Zc,Xc,Ru,Bu,Du=Y(()=>{"use strict";ye();Se();_e();Zc=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Xc=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[i,u,a]=Sn.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),c=[i,u];if(!c)throw new Error("Can\'t use gemm on the given tensors");let p=M.size(c),h=[{type:12,data:p},{type:12,data:i},{type:12,data:u},{type:12,data:a},{type:1,data:t.alpha},{type:1,data:t.beta}],d=["type","type"];e.length===3&&(h.push(...Z(e[2].dims)),d.push("rank")),h.push(...Z(c));let y=w=>{let _="";t.transA&&t.transB?_="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?_="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?_="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(_="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let v=t.alpha===1?"":"value *= uniforms.alpha;",S=U("a",e[0].dataType,e[0].dims),A=U("b",e[1].dataType,e[1].dims),I=S.type.value,x=null,E=[S,A];e.length===3&&(x=U("c",e[2].dataType,e[2].dims.length),E.push(x));let P=j("output",e[0].dataType,c.length);E.push(P);let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${w.registerUniforms(O).declareVariables(...E)}\n\n  ${w.mainStart()}\n    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${I}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${_}\n    }\n\n    ${v}\n    ${(()=>x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",P)}; value += ${I}(uniforms.beta) * ${x.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:y}},Ru=e=>{let t=e.transA,r=e.transB,o=e.alpha,i=e.beta;return{transA:t,transB:r,alpha:o,beta:i,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Bu=(e,t)=>{Zc(e.inputs),e.compute(Xc(e.inputs,t))}});var Qc,Jc,ep,zu,Mu=Y(()=>{"use strict";ye();Se();_e();Qc=(e,t)=>{let r=e[0].dims,o=r,i=2,u=M.sizeToDimension(r,i),a=M.sizeFromDimension(r,i),c=Me(a),p=a/c,h=[r[0],r[1],p],d=["rank","type","type"],y=[{type:12,data:a},{type:12,data:p}];y.push(...Z(h,h));let w=_=>{let v=U("x",e[0].dataType,h.length,c),S=U("scale",e[1].dataType,e[1].dims),A=U("bias",e[2].dataType,e[2].dims),I=j("output",e[0].dataType,h.length,c),x=[v,S,A,I],E=v.type.value,P=c===1?"f32":`vec${c}<f32>`,O=64,R=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${P}, ${O}>;\n  const workgroupSize = ${O}u;\n  ${_.registerUniforms(R).declareVariables(...x)}\n  ${_.mainStart(O)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${P}(${v.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${_t("workgroupShared[0]",c)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${P}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${P}(${v.get("batch","channel","h")}) - ${P}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${_t("workgroupShared[0]",c)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));\n    let channelScale = invStdDev * f32(${S.getByOffset("channel")});\n    let channelShift = f32(${A.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${v.get("batch","channel","h")} * ${E}(${P}(channelScale)) + ${E}(${P}(channelShift));\n      ${I.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${c}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:u},programUniforms:y}),getShaderSource:w}},Jc=(e,t,r,o,i,u,a,c)=>{let p=Me(a),h=64,d=p===1?"vec2f":`mat2x${p}f`,y=p===1?"f32":`vec${p}f`,w=(R,L)=>`${d}(${R}, ${L})`,_=i*a/p,v=Math.ceil(u/h),S=["type"],A=[{type:12,data:v},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(u*a/p)}],I=R=>{let L=U("input",t.dataType,t.dims,p);return`\n  ${R.declareVariables(L)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart(h)}\n    let currentImageNumber = global_idx / ${h} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${h}) % uniforms.C;\n    let wgOffset = local_id.x * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${y}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${w("sum","squaredSum")};\n  }`},x=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${p}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:[i,a,h,2],dataType:1}],dispatchGroup:{x:i*a/p},programUniforms:A}),getShaderSource:I},{inputs:[t],outputs:[-1]})[0],E=[{type:12,data:_},{type:12,data:u},{type:12,data:Math.floor(a/p)},{type:12,data:Math.floor(h*a/p)}],P=["type","type","type"],O=R=>{let L=U("scale",r.dataType,r.dims,p),N=U("bias",o.dataType,o.dims,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${d}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${L.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${N.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${d}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${$t("f32",p)};\n    var squaredSum = ${$t("f32",p)};\n    for (var i: u32 = 0; i < min(${h}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${h}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${c}));\n    let channelScale = invStdDev * ${y}(scale[currentChannelNumber]);\n    let channelShift = ${y}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${w("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${p};${c}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[i,a,2],dataType:1}],dispatchGroup:{x:Math.ceil(_/64)},programUniforms:E}),getShaderSource:O},{inputs:[x,r,o],outputs:[-1]})[0]},ep=(e,t,r)=>{let o=t[0].dims,i=o,u=o[0],a=o[o.length-1],c=M.sizeFromDimension(o,1)/a,p=Me(a),h=M.size(i)/p,d=[{type:12,data:c},{type:12,data:Math.floor(a/p)}],y=["type","type"],w=Jc(e,t[0],t[1],t[2],u,c,a,r.epsilon),_=v=>{let S=De(t[0].dataType),A=p===1?"vec2f":`mat2x${p}f`,I=p===1?S:`vec${p}<${S}>`,x=U("input",t[0].dataType,t[0].dims,p),E=j("output",t[0].dataType,i,p);return`\n  @group(0) @binding(0) var<storage, read> input : array<${x.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${A}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${v.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${I}(scale[0]), ${I}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${p}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:i,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(h/64)},programUniforms:d}),getShaderSource:_},{inputs:[t[0],w]})},zu=(e,t)=>{t.format==="NHWC"?ep(e,e.inputs,t):e.compute(Qc(e.inputs,t))}});var tp,rp,Uu,Vu=Y(()=>{"use strict";ye();Se();_e();tp=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},rp=(e,t,r)=>{let o=t.simplified,i=e[0].dims,u=e[1],a=!o&&e[2],c=i,p=M.normalizeAxis(t.axis,i.length),h=M.sizeToDimension(i,p),d=M.sizeFromDimension(i,p),y=M.size(u.dims),w=a?M.size(a.dims):0;if(y!==d||a&&w!==d)throw new Error(`Size of X.shape()[axis:] == ${d}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${y} and bias size of ${w}`);let _=[];for(let O=0;O<i.length;++O)O<p?_.push(i[O]):_.push(1);let v=Me(d),S=["type","type"],A=[{type:12,data:h},{type:1,data:d},{type:12,data:Math.floor(d/v)},{type:1,data:t.epsilon}];a&&S.push("type");let I=r>1,x=r>2,E=O=>{let R=De(e[0].dataType),L=[U("x",e[0].dataType,e[0].dims,v),U("scale",u.dataType,u.dims,v)];a&&L.push(U("bias",a.dataType,a.dims,v)),L.push(j("output",e[0].dataType,c,v)),I&&L.push(j("mean_data_output",1,_)),x&&L.push(j("inv_std_output",1,_));let N=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${O.registerUniforms(N).declareVariables(...L)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${$t("f32",v)};\n    var mean_square_vector = ${$t("f32",v)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${ir(R,v,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${_t("mean_vector",v)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${_t("mean_square_vector",v)} / uniforms.norm_size ${o?"":"- mean * mean"} + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${ir(R,v,"x[j + offset]")};\n      let f32scale = ${ir(R,v,"scale[j]")};\n      output[j + offset] = ${L[0].type.value}((f32input ${o?"":"- mean"}) * inv_std_dev * f32scale\n        ${a?`+ ${ir(R,v,"bias[j]")}`:""}\n      );\n    }\n\n    ${I?"mean_data_output[global_idx] = mean":""};\n    ${x?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},P=[{dims:c,dataType:e[0].dataType}];return I&&P.push({dims:_,dataType:1}),x&&P.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${v};${r};${o}`,inputDependencies:S},getRunData:()=>({outputs:P,dispatchGroup:{x:Math.ceil(h/64)},programUniforms:A}),getShaderSource:E}},Uu=(e,t)=>{tp(e.inputs),e.compute(rp(e.inputs,t,e.outputCount))}});var np,op,Wu,Nu,Gu=Y(()=>{"use strict";ye();Se();Ze();_e();np=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let i=Math.floor((t.k+t.blockSize-1)/t.blockSize),u=t.blockSize/8*t.bits,a=e[1];if(!M.areEqual(a.dims,[t.n,i,u]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let p=e[2].dims;if(M.size(p)!==t.n*i)throw new Error("scales input size error.");if(e.length===4){let d=e[3].dims,y=t.bits>4?t.n*i:t.n*Math.floor((i+1)/2);if(M.size(d)!==y)throw new Error("zeroPoints input size error.")}},op=(e,t,r,o)=>{let i=e[0].dims,u=i.length,a=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=i[u-2],p=t.k,h=t.n,d=i.slice(0,u-2),y=M.size(d),_=t.blockSize/8*t.bits/4,v=e[0].dataType,S=Me(c),A=Me(t.k),I=Me(_),x=tr(v),E=c*a*x,P=Math.floor(o/E),O=a<=r[0]&&P>0,R=!O||P>=4?Me(h):P>=2&&Me(h)>=2?2:1,L=d.concat([c,h]),N=M.size(L)/R/S,K=O?[]:[{type:12,data:N},{type:12,data:t.blockSize}],Q=[y,c,p/A],he=M.convertShape(e[1].dims).slice();he.splice(-1,1,_/I),K.push(...Z(Q)),K.push(...Z(he)),K.push(...Z(e[2].dims)),e.length===4&&K.push(...Z(M.convertShape(e[3].dims)));let W=[y,c,h/R];K.push(...Z(W));let se=Ce=>{let We=Q.length,ee=U("a",e[0].dataType,We,A),ae=U("b",12,he.length,I),Ae=U("scales",e[2].dataType,e[2].dims.length),me=[ee,ae,Ae],ie=e.length===4?U("zero_points",12,e[3].dims.length):void 0;ie&&me.push(ie);let ue=W.length,le=j("output",e[0].dataType,ue,R),qe=[{name:"output_size",type:"u32"},{name:"block_size",type:"u32"}],G=De(e[0].dataType),ne=(()=>{switch(A){case 1:return`array<${G}, 8>`;case 2:return`mat4x2<${G}>`;case 4:return`mat2x4<${G}>`;default:throw new Error(`${A}-component is not supported.`)}})(),xe=`\n        for (var word: u32 = 0; word < ${_}; word += ${I}) {\n          ${ae.indicesSet("b_indices","2","word")};\n          let b_data = ${ae.getByIndices("b_indices")};\n          for (var i: u32 = 0; i < ${I}; i++) {\n            let b_value: u32 = ${I===1?"b_data":"b_data[word + i]"};\n            let b_mask: u32 = 0x0F0F0F0Fu;\n            let b_value_lower: vec4<u32> = unpack4xU8(b_value & b_mask);\n            let b_value_upper: vec4<u32> = unpack4xU8((b_value >> 4) & b_mask);\n            let b_quantized_values = ${ne}(${Array.from({length:4},(Be,Ge)=>`${G}(b_value_lower[${Ge}]), ${G}(b_value_upper[${Ge}])`).join(", ")});\n            let b_dequantized_values = ${(()=>A===1?`${ne}(${Array.from({length:8},(Be,Ge)=>`(b_quantized_values[${Ge}] - zero_point) * scale`).join(", ")});`:`(b_quantized_values - ${ne}(${Array(8).fill("zero_point").join(",")})) * scale;`)()};\n            // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n            for (var m: u32 = 0; m < ${O?c:S}u; m++) {\n              ${ee.indicesSet("a_indices",We-2,O?"m":`row * ${S} + m`)};\n              ${ee.indicesSet("a_indices",We-1,"word_offset")};\n              var input_offset = ${ee.indicesToOffset("a_indices")};\n              var a_data: ${ne};\n              for (var j: u32 = 0; j < ${8/A}; j++) {\n                a_data[j] = ${ee.getByOffset("input_offset")};\n                input_offset++;\n              }\n              ${O?"workgroup_shared[workgroup_shared_offset + m]":"output_values[m]"}${R>1?"[c]":""} += ${Array.from({length:8/A},(Be,Ge)=>`${A===1?`a_data[${Ge}] * b_dequantized_values[${Ge}]`:`dot(a_data[${Ge}], b_dequantized_values[${Ge}])`}`).join(" + ")};\n            }\n            word_offset += ${8/A};\n          }\n        }`,Ke=ie?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${ie.getByOffset("zero_point_index")};\n          }`:"";return O?`\n        var<workgroup> workgroup_shared: array<${le.type.value}, ${c*a}>;\n        ${Ce.declareVariables(...me,le)}\n        ${Ce.mainStart([a,1,1])}\n          var a_indices: ${ee.type.indices};\n          var block = local_id.x;\n          var col = workgroup_id.y;\n          var batch = workgroup_id.z;\n          ${ee.indicesSet("a_indices","0","batch")};\n          // Two zero points are packed into one byte when uniforms.bits is 4.\n          for (var c: u32 = 0; c < ${R}; c++) {\n            let col_times_components_plus_c = col * ${R} + c;\n              ${ie?`\n            var zero_point_bytes_per_col: u32 = (${a} + 1) / 2;\n            var zero_point_byte_count: u32 = col_times_components_plus_c * zero_point_bytes_per_col + (block >> 0x1u);\n            var zero_point_word_index: u32 = zero_point_byte_count >> 0x2u;\n            var zero_point_byte_offset: u32 = zero_point_byte_count & 0x3u;\n            var zero_point_nibble_offset: u32 = block & 0x1u;\n            var zero_point_bits_offset: u32 = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);\n            var zero_point_word: u32 = ${ie.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;`:""}\n            var b_indices: ${ae.type.indices};\n            ${ae.indicesSet("b_indices","0","col_times_components_plus_c")};\n            // The scale and zero points are computed per block.\n            var scales_index = col_times_components_plus_c * ${a} + block;\n            let scale = ${Ae.getByOffset("scales_index")};\n            // The default zero point is 8 for unsigned 4-bit quantization.\n            let zero_point = ${G}(${ie?"(zero_point_word) & 0xFu":8});\n            ${ae.indicesSet("b_indices","1","block")};\n            var word_offset: u32 = block * ${t.blockSize/A};\n            var workgroup_shared_offset: u32 = block * ${c};\n            ${xe}\n          }\n          workgroupBarrier();\n          if (local_id.x == 0u) {\n            var output_indices: ${le.type.indices};\n            ${le.indicesSet("output_indices","0","batch")};\n            ${le.indicesSet("output_indices",ue-1,"col")};\n            ${le.indicesSet("output_indices",ue-2,"0")};\n            var output_offset = ${le.indicesToOffset("output_indices")};\n            for (var m: u32 = 0u; m < ${c}u; m++) {\n              var output_value: ${le.type.value} = ${le.type.value}(0);\n              var workgroup_shared_offset: u32 = m;\n              for (var b: u32 = 0u; b < ${a}u; b++) {\n                output_value += workgroup_shared[workgroup_shared_offset];\n                workgroup_shared_offset += ${c};\n              }\n              ${le.setByOffset("output_offset","output_value")};\n              output_offset += ${h/R};\n            }\n          }\n        }`:`\n        ${Ce.registerUniforms(qe).declareVariables(...me,le)}\n        ${Ce.mainStart()}\n          ${Ce.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${le.type.value}, ${S}>;\n          var output_indices = ${le.offsetToIndices("global_idx")};\n          var col = ${le.indicesGet("output_indices",ue-1)};\n          var row = ${le.indicesGet("output_indices",ue-2)};\n          var a_indices: ${ee.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${ie?`\n          var zero_point_abs_offset = col * ${R} * ((${a} + 1) / 2);\n          var zero_point_index: u32 = zero_point_abs_offset / 4;\n          var zero_point_word: u32 = ${ie.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = (zero_point_abs_offset % 4) * 8;`:""}\n          var scale_index = col * ${a*R};\n          var b_indices: ${ae.type.indices};\n          for (var c: u32 = 0; c < ${R}; c++) {\n            ${ae.indicesSet("b_indices","0",`col * ${R} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${a}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${Ae.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${G}(${ie?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${ae.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              ${xe}\n              scale_index++;\n              ${Ke}\n              block_offset += uniforms.block_size / ${A};\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${ie?`if (zero_point_offset % 8 > 0) {\n                ${Ke}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${S}u; k++) {\n              ${le.indicesSet("output_indices",ue-2,`${S} * row + k`)};\n              ${le.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:O?"BlockwiseMatMulNBits":"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${c};${v};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:L,dataType:v}],name:O?"BlockwiseMatMulNBits":"MatMulNBits",dispatchGroup:O?{x:1,y:Math.ceil(h/R),z:y}:{x:Math.ceil(N/64)},programUniforms:K}),getShaderSource:se}},Wu=(e,t)=>{np(e.inputs,t);let r=e.getMaxComputeWorkgroupSizes(),o=e.getMaxComputeWorkgroupStoragesize();e.compute(op(e.inputs,t,r,o))},Nu=e=>ve(e)});var it,ip,Lu,Hu,ap,Ko,Fu,qu=Y(()=>{"use strict";ye();Se();Ze();_n();Ro();_e();Sr();it=(e,t)=>e.length>t&&e[t].dims.length>0&&M.size(e[t].dims)>0?e[t]:void 0,ip=(e,t)=>{let r=e[0],o=it(e,1),i=it(e,2),u=it(e,3),a=it(e,4),c=it(e,5),p=it(e,6),h=it(e,7);if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let d=!1,y=r.dims[0],w=r.dims[1],_=r.dims.length===3?d?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],v=w,S=0,A=0,I=Math.floor(_/t.numHeads);if(p&&h){if(p.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(p.dims[0]!==y||p.dims[1]!==t.numHeads||p.dims[3]!==I)throw new Error(\'Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(h.dims[0]!==y||h.dims[1]!==t.numHeads||h.dims[3]!==I)throw new Error(\'Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)\');if(p.dims[2]!==h.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)\');if(h.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');S=p.dims[2],A=p.dims[2]}else if(p||h)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let x;if(o){if(r.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(o.dims.length<3||o.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(r.dims[0]!==o.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');x=2,v=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==I)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(i)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');x=5,v=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==I)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');x=0,v=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');x=3}if(u){if(u.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(i&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let E=0;if(a){E=8;let N=a.dims;throw N.length===1?N[0]===y?E=1:N[0]===3*y+2&&(E=3):N.length===2&&N[0]===y&&N[1]===v&&(E=5),E===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let P=!1,O=_;if(i){if(i.dims.length!==3&&i.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(r.dims[0]!==i.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(i.dims.length===3){if(v!==i.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');O=i.dims[2]}else{if(v!==i.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');O=i.dims[1]*i.dims[3],P=!0}}let R=S+v,L=!1;if(a)throw new Error("Key padding mask is not supported");if(c){if(c.dims.length!==4)throw new Error(\'Input "relative_position_bias" is expected to have 4 dimensions\');if(c.dims[0]!==y&&c.dims[0]!==1||c.dims[1]!==t.numHeads||c.dims[2]!==w||c.dims[3]!==R)throw new Error(\'Input "relative_position_bias" shape (batch_size, 1, sequence_length, kv_sequence_length)\')}return{batchSize:y,sequenceLength:w,pastSequenceLength:S,kvSequenceLength:v,totalSequenceLength:R,maxSequenceLength:A,inputHiddenSize:0,hiddenSize:_,vHiddenSize:O,headSize:I,vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:E,scale:t.scale,broadcastResPosBias:L,passPastInKv:P,qkvFormat:x}},Lu=e=>ve({...e}),Hu=ve({perm:[0,2,1,3]}),ap=(e,t,r,o,i,u,a)=>{let c=[o,i,u],p=M.size(c),h=[{type:12,data:p},{type:12,data:a},{type:12,data:u}],d=y=>{let w=j("qkv_with_bias",t.dataType,c),_=U("qkv",t.dataType,c),v=U("bias",r.dataType,c),S=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${y.registerUniforms(S).declareVariables(_,v,w)}\n  ${y.mainStart()}\n    ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:h}),getShaderSource:d},{inputs:[t,r],outputs:[-1]})[0]},Ko=(e,t,r,o,i,u,a,c)=>{let p=u;if(a){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return p=ap(e,u,a,t,o,r*i,c),p=p.reshape([t,o,r,i]),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]}else return u.dims.length===3&&(p=u.reshape([t,o,r,i])),e.compute(yt(p,Hu.perm),{inputs:[p],outputs:[-1]})[0]},Fu=(e,t)=>{let r=ip(e.inputs,t),o=e.inputs[0],i=it(e.inputs,1),u=it(e.inputs,2),a=it(e.inputs,3),c=it(e.inputs,4),p=it(e.inputs,5),h=it(e.inputs,6),d=it(e.inputs,7);if(o.dims.length===5)throw new Error("Packed QKV is not implemented");if(i?.dims.length===5)throw new Error("Packed KV is not implemented");let y=i&&u&&i.dims.length===4&&u.dims.length===4,w=Ko(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,o,a,0);if(y)return Pn(e,w,i,u,c,void 0,h,d,p,r,t);if(!i||!u)throw new Error("key and value must be provided");let _=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,i,a,r.hiddenSize),v=Ko(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,u,a,2*r.hiddenSize);Pn(e,w,_,v,c,void 0,h,d,p,r,t)}});var sp,up,dp,lp,cp,pp,mp,fp,ju,Ku=Y(()=>{"use strict";ye();Se();_e();sp=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},up=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n            k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n              break;\n            }\n            offset += k * i32(${fe("uniforms.x_strides",i,t)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${o}\n            value = x[offset];\n          }\n      `},dp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${fe("uniforms.x_shape",i,t)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},lp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k = i32(${fe("uniforms.x_shape",i,t)}) - 1;\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},cp=(e,t,r)=>{let o="";for(let i=t-1;i>=0;--i)o+=`\n                k = i32(${e.indicesGet("indices",i)}) - ${fe("uniforms.pads",i,r)};\n                if (k < 0)  {\n                  k += i32(${fe("uniforms.x_shape",i,t)}]);\n                }\n                if (k >= i32(${fe("uniforms.x_shape",i,t)})) {\n                  k -= i32(${fe("uniforms.x_shape",i,t)});\n                }\n                offset += k * i32(${fe("uniforms.x_strides",i,t)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${o}\n              value = x[offset];\n          `},pp=(e,t,r)=>{switch(r.mode){case 0:return up(e,t,r.pads.length);case 1:return dp(e,t,r.pads.length);case 2:return lp(e,t,r.pads.length);case 3:return cp(e,t,r.pads.length);default:throw new Error("Invalid mode")}},mp=(e,t)=>{let r=M.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,i=M.size(r),u=[{type:12,data:i},{type:6,data:t.pads}];t.mode===0&&u.push({type:e[0].dataType,data:t.value}),u.push(...Z(e[0].dims,r));let a=["rank"],c=p=>{let h=j("output",e[0].dataType,r.length),d=U("x",e[0].dataType,o.length),y=d.type.value,w=pp(h,o.length,t),_=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&_.push({name:"constant_value",type:y}),`\n            ${p.registerUniforms(_).declareVariables(d,h)}\n            ${p.mainStart()}\n            ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${h.offsetToIndices("global_idx")};\n\n            var value = ${y}(0);\n            ${w}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(r)/64)},programUniforms:u}),getShaderSource:c}},fp=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,i=e[0].dims.length,u=new Int32Array(2*i).fill(0);if(e.length>=4){let c=e[3].getBigInt64Array();for(let p=0;p<c.length;p++)u[Number(c[p])]=Number(r[p]),u[Number(c[p])+i]=Number(r[p+c.length])}else r.forEach((c,p)=>u[Number(p)]=Number(c));let a=[];return u.forEach(c=>a.push(c)),{mode:t.mode,value:o,pads:a}}else return t},ju=(e,t)=>{sp(e.inputs);let r=fp(e.inputs,t);e.compute(mp(e.inputs,r),{inputs:[0]})}});var Nn,Yu,Zu,Xu,Qu,hp,gp,Ju,ed,td,rd,nd,od,id,ad,sd,ud,dd,ld,cd=Y(()=>{"use strict";$r();ye();Se();_e();Nn=e=>{if(vr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Yu=(e,t,r)=>{let o=t.format==="NHWC",i=e.dims.slice();o&&i.splice(1,0,i.pop());let u=Object.hasOwnProperty.call(t,"dilations"),a=t.kernelShape.slice(),c=t.strides.slice(),p=u?t.dilations.slice():[],h=t.pads.slice();nr.adjustPoolAttributes(r,i,a,c,p,h);let d=nr.computePoolOutputShape(r,i,c,p,a,h,t.autoPad),y=Object.assign({},t);u?Object.assign(y,{kernelShape:a,strides:c,pads:h,dilations:p,cacheKey:t.cacheKey}):Object.assign(y,{kernelShape:a,strides:c,pads:h,cacheKey:t.cacheKey});let w=d.slice();return w.push(w.splice(1,1)[0]),[y,o?w:d]},Zu=(e,t)=>{let r=t.format==="NHWC",o=M.size(e),i=M.size(t.kernelShape),u=[{type:12,data:o},{type:12,data:i}],a=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let c=t.kernelShape[t.kernelShape.length-1],p=t.strides[t.strides.length-1],h=t.pads[t.pads.length/2-1],d=t.pads[t.pads.length-1],y=!!(h+d);u.push({type:12,data:c},{type:12,data:p},{type:12,data:h},{type:12,data:d}),a.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let w=!1;if(t.kernelShape.length===2){let _=t.kernelShape[t.kernelShape.length-2],v=t.strides[t.strides.length-2],S=t.pads[t.pads.length/2-2],A=t.pads[t.pads.length-2];w=!!(S+A),u.push({type:12,data:_},{type:12,data:v},{type:12,data:S},{type:12,data:A}),a.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[u,a,!0,y,w]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let c=M.computeStrides(t.kernelShape);u.push({type:12,data:c},{type:12,data:t.pads},{type:12,data:t.strides}),a.push({name:"kernelStrides",type:"u32",length:c.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let p=t.pads.reduce((h,d)=>h+d);return[u,a,!!p,!1,!1]}},Xu=(e,t,r,o,i,u,a,c,p,h,d,y)=>{let w=i.format==="NHWC",_=t.type.value,v=j("output",t.type.tensor,o);if(i.kernelShape.length<=2){let S="",A="",I="",x=r-(w?2:1);if(d?S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${x}] < 0 || xIndices[${x}]\n                      >= uniforms.x_shape[${x}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`:S=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${x}] = indices[${x}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${t.indicesToOffset("xIndices")}];\n                  ${u}\n                }`,i.kernelShape.length===2){let P=r-(w?3:2);y?A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${P}] < 0 || xIndices[${P}] >= uniforms.x_shape[${P}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:A=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${P}] = indices[${P}] * uniforms.sh - uniforms.phStart + j;\n                `,I=`\n              }\n            `}return`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var value = ${_}(${c});\n              var pad = 0;\n              ${A}\n              ${S}\n              ${I}\n              ${a}\n\n              output[global_idx] = value;\n            }`}else{if(w)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let S=i.kernelShape.length,A=i.pads.length,I="";return h?I=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${t.indicesToOffset("xIndices")}];\n                ${u}\n              }`:I=`\n              }\n              let x_val = x[${t.indicesToOffset("xIndices")}];\n              ${u}\n            `,`\n            ${e.registerUniforms(p).declareVariables(t,v)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${v.offsetToIndices("global_idx")};\n              var xIndices = ${v.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${S}>;\n\n              var value = ${_}(${c});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${S-1}u; j++) {\n                  offsets[j] = offset / ${fe("uniforms.kernelStrides","j",S)};\n                  offset -= offsets[j] * ${fe("uniforms.kernelStrides","j",S)};\n                }\n                offsets[${S-1}] = offset;\n\n                isPad = false;\n                for (var j = ${r-S}u; j < ${r}u; j++) {\n                  xIndices[j] = indices[j] * ${fe("uniforms.strides",`j - ${r-S}u`,S)}\n                    + offsets[j - ${r-S}u] - ${fe("uniforms.pads","j - 2u",A)};\n                  ${I}\n              }\n              ${a}\n\n              output[global_idx] = value;\n            }`}},Qu=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,hp=e=>`${Qu(e)};${e.countIncludePad}`,gp=e=>`${Qu(e)};${e.storageOrder};${e.dilations}`,Ju=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),ed=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=U("x",t.dataType,t.dims.length),c=a.type.value,p="value += x_val;",h="";i.countIncludePad?h+=`value /= ${c}(uniforms.kernelSize);`:h+=`value /= ${c}(i32(uniforms.kernelSize) - pad);`;let[d,y,w,_,v]=Zu(u,i);d.push(...Z(t.dims,u));let S=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:A=>Xu(A,a,t.dims.length,u.length,i,p,h,0,y,w,_,v)}},td=e=>{let t=e.count_include_pad!==0,r=Ju(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:hp(o)}},rd=(e,t)=>{Nn(e.inputs),e.compute(ed("AveragePool",e.inputs[0],!1,t))},nd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},od=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},id=(e,t)=>{Nn(e.inputs),e.compute(ed("GlobalAveragePool",e.inputs[0],!0,t))},ad=(e,t,r,o)=>{let[i,u]=Yu(t,o,r),a=`\n      value = max(x_val, value);\n    `,c="",p=U("x",t.dataType,t.dims.length),h=["rank"],[d,y,w,_,v]=Zu(u,i);return d.push(...Z(t.dims,u)),{name:e,shaderCache:{hint:`${o.cacheKey};${w};${_};${v}`,inputDependencies:h},getRunData:()=>({outputs:[{dims:u,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(M.size(u)/64)},programUniforms:d}),getShaderSource:S=>Xu(S,p,t.dims.length,u.length,i,a,c,t.dataType===10?-65504:-1e5,y,w,_,v)}},sd=(e,t)=>{Nn(e.inputs),e.compute(ad("MaxPool",e.inputs[0],!1,t))},ud=e=>{let t=e.storage_order,r=e.dilations,o=Ju(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let i={storageOrder:t,dilations:r,...o,cacheKey:""};return{...i,cacheKey:gp(i)}},dd=e=>{let t=e.format;return{format:t,...nd,cacheKey:t}},ld=(e,t)=>{Nn(e.inputs),e.compute(ad("GlobalMaxPool",e.inputs[0],!0,t))}});var bp,wp,pd,md=Y(()=>{"use strict";$r();ye();_e();bp=(e,t,r)=>{let o=e===t,i=e<t&&r<0,u=e>t&&r>0;if(o||i||u)throw new Error("Range these inputs\' contents are invalid.")},wp=(e,t,r,o)=>{let i=Math.abs(Math.ceil((t-e)/r)),u=[i],a=i,c=[{type:12,data:a},{type:o,data:e},{type:o,data:r},...Z(u)],p=h=>{let d=j("output",o,u.length),y=d.type.value,w=[{name:"outputSize",type:"u32"},{name:"start",type:y},{name:"delta",type:y}];return`\n        ${h.registerUniforms(w).declareVariables(d)}\n        ${h.mainStart()}\n        ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${y}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:p,getRunData:()=>({outputs:[{dims:u,dataType:o}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:c})}},pd=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),vr.webgpu.validateInputContent&&bp(t,r,o),e.compute(wp(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var vp,$p,_p,Sp,xp,Cp,Ap,Ip,Tp,Ep,Pp,fd,kp,Op,Rp,Bp,Dp,hd,gd,yd=Y(()=>{"use strict";ye();Se();Ze();_e();vp=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},$p=(e,t,r)=>{t.every(i=>i>=0&&i<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((i,u)=>o[i]=e[u]),o},_p=(e,t,r,o,i,u)=>{let[a,c,p]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],h=e[0].dims.length;if(a>0&&e.length>a&&e[a].dims.length>0)e[a].getFloat32Array().forEach(d=>u.push(d));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(c>0&&e.length>c&&e[c].dims.length>0){if(e[c].getFloat32Array().forEach(d=>o.push(d)),o.length!==0&&o.length!==h&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");vp(o,t),t.axes.length>0&&$p(o,t.axes,h).forEach((d,y)=>o[y]=d)}if(p>0&&e.length>p&&(e[p].getBigInt64Array().forEach(d=>i.push(Number(d))),i.length!==h||r>=18&&i.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(i.length!==t.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof o<"u"&&typeof i<"u"&&o.length>0&&i.length>h)throw new Error("Resize requires only of scales or sizes to be specified")},Sp=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +\n                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /\n                        ${t}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);\n                  const adjustment = ${t}(lengthResized) / outputWidth;\n                  const center = ${t}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",xp=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Cp=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),i=e.length===0?o:e.slice();return t.length>0?(t.forEach((u,a)=>{o[u]=i[a],o[a+r]=i[t.length+a]}),o):i},Ap=(e,t,r,o)=>{let i=[];if(r.length>0)if(o.length>0){if(e.forEach(u=>i.push(u)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((u,a)=>i[u]=r[a])}else r.forEach(u=>i.push(u));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");i=e.map((u,a)=>Math.round(u*t[a]))}return i},Ip=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(u=>t[u]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(u=>t[u]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let i=e.slice();return r.axes.length>0?(r.axes.forEach(u=>t[u]=o),r.axes.forEach(u=>i[u]=Math.round(e[u]*t[u]))):(t.fill(o,0,t.length),i.forEach((u,a)=>i[a]=Math.round(u*t[a]))),i},Tp=(e,t,r,o,i)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {\n      var original_indices: array<${e.type.value}, ${r.length}>;\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${fe("uniforms.scales","i",o)};\n        var roi_low = ${fe("uniforms.roi","i",i)};\n        var roi_hi = ${fe("uniforms.roi",`i + ${t.length}`,i)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${fe("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",r.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Ep=(e,t,r,o,i,u,a)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${o.length}; i++) {\n        var output_index = ${t.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${fe("uniforms.scales","i",i)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${fe("uniforms.roi","i",u)};\n          var roi_hi = ${fe("uniforms.roi",`i + ${r.length}`,u)};\n          var input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${fe("uniforms.output_shape","i",o.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${a} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,Pp=(e,t)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${fe("uniforms.input_shape","i",t.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,fd=(e,t,r,o)=>e.rank>o?`\n    ${e.indicesSet("input_indices",t,"channel")};\n    ${e.indicesSet("input_indices",r,"batch")};\n`:"",kp=(e,t,r,o,i)=>{let[a,c,p,h]=r.length===2?[-1,0,1,-1]:[0,2,3,1],d=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${d} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(row, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(col, ${r[p]} - 1))`)};\n      ${fd(e,h,a,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${d} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${d} = originalIndices[${c}];\n      var col:${d} = originalIndices[${p}];\n      ${o?`if (row < 0 || row > (${r[c]} - 1) || col < 0 || col > (${r[p]} - 1)) {\n        return ${i};\n      }`:""};\n      row = max(0, min(row, ${r[c]} - 1));\n      col = max(0, min(col, ${r[p]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${r.length>2?`u32(originalIndices[${h}])`:"0"};\n      var batch: u32 =  ${r.length>2?`u32(originalIndices[${a}])`:"0"};\n      var x11: ${d} = getInputValue(batch, channel, row1, col1);\n      var x12: ${d} = getInputValue(batch, channel, row1, col2);\n      var x21: ${d} = getInputValue(batch, channel, row2, col1);\n      var x22: ${d} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${d} = abs(row - ${d}(row1));\n      var dx2: ${d} = abs(${d}(row2) - row);\n      var dy1: ${d} = abs(col - ${d}(col1));\n      var dy2: ${d} = abs(${d}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},Op=(e,t,r,o,i,u,a,c,p,h)=>{let d=r.length===2,y=!0,[w,_]=d?[0,1]:y?[2,3]:[1,2],v=e.type.value,S=A=>{let I=A===w?"row":"col";return`\n      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${v} {\n        var output_index = ${t.indicesGet("output_indices",A)};\n        var originalIdx: ${v} = getOriginalCoordinateFromResizedCoordinate(output_index, ${i[A]},\n        ${o[A]}, ${r[A]}, ${u[A]}, ${u[A]} + ${r.length});\n        var fractOriginalIdx: ${v} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${c} && (originalIdx < 0 || originalIdx > (${r[A]} - 1))) {\n          return ${p};\n        }\n        var data: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${I}: ${v} = originalIdx + ${v}(i);\n          if (${I} < 0 || ${I} >= ${r[A]}) {\n            ${(()=>h?`coefs[i + 1] = 0.0;\n                        continue;`:c?`return ${p};`:`${I} = max(0, min(${I}, ${r[A]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",A,`u32(${I})`)};\n          data[i + 1] = ${A===w?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${S(w)};\n    ${S(_)};\n  fn getCubicInterpolationCoefs(s: ${v}) -> array<${v}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${v}, 4> = array<${v}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${v} = 1.0 - absS;\n    var twoMinusAbsS: ${v} = 2.0 - absS;\n    var onePlusAbsS: ${v} = 1.0 + absS;\n    coeffs[0] = ((${a} * onePlusAbsS - 5 * ${a}) * onePlusAbsS + 8 * ${a}) * onePlusAbsS - 4 * ${a};\n    coeffs[1] = ((${a} + 2) * absS - (${a} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${a} + 2) * oneMinusAbsS - (${a} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${a} * twoMinusAbsS - 5 * ${a}) * twoMinusAbsS + 8 * ${a}) * twoMinusAbsS - 4 * ${a};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${v}, 4>, coefs: array<${v}, 4>) -> ${v} {\n    var coefsSum: ${v} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${v} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},Rp=(e,t,r,o,i)=>{let[a,c,p,h,d]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],y=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${y} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",c,`max(0, min(depth, ${r[c]} - 1))`)};\n      ${e.indicesSet("input_indices",p,`max(0, min(height, ${r[p]} - 1))`)};\n      ${e.indicesSet("input_indices",h,`max(0, min(width, ${r[h]} - 1))`)};\n      ${fd(e,d,a,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${y} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${y} = originalIndices[${c}];\n      var height:${y} = originalIndices[${p}];\n      var width:${y} = originalIndices[${h}];\n      ${o?`if (depth < 0 || depth > (${r[c]} - 1) || height < 0 || height > (${r[p]} - 1) || width < 0 || (width > ${r[h]} - 1)) {\n      return ${i};\n        }`:""};\n\n    depth = max(0, min(depth, ${r[c]} - 1));\n      height = max(0, min(height, ${r[p]} - 1));\n      width = max(0, min(width, ${r[h]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${r.length>3?`u32(originalIndices[${d}])`:"0"};\n      var batch: u32 =  ${r.length>3?`u32(originalIndices[${a}])`:"0"};\n\n      var x111: ${y} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${y} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${y} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${y} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${y} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${y} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${y} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${y} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${y} = abs(depth - ${y}(depth1));\n      var dx2: ${y} = abs(${y}(depth2) - depth);\n      var dy1: ${y} = abs(height - ${y}(height1));\n      var dy2: ${y} = abs(${y}(height2) - height);\n      var dz1: ${y} = abs(width - ${y}(width1));\n      var dz2: ${y} = abs(${y}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},Bp=(e,t,r,o,i,u)=>{let a=e.dims,c=Cp(u,t.axes,a.length),p=Ap(a,o,i,t.axes),h=o.slice();o.length===0&&(h=a.map((x,E)=>x===0?1:p[E]/x),t.keepAspectRatioPolicy!=="stretch"&&(p=Ip(a,h,t)));let d=j("output",e.dataType,p.length),y=U("input",e.dataType,a.length),w=M.size(p),_=a.length===p.length&&a.every((x,E)=>x===p[E]),v=t.coordinateTransformMode==="tf_crop_and_resize",S=t.extrapolationValue,A=y.type.value,I=x=>`\n      ${_?"":`\n      ${Sp(t.coordinateTransformMode,A)};\n      ${(()=>{switch(t.mode){case"nearest":return`\n              ${Pp(y,a)};\n              ${xp(t.nearestMode,r,A)};\n              ${Ep(y,d,a,p,h.length,c.length,v)};\n              `;case"linear":return`\n              ${Tp(d,a,p,h.length,c.length)};\n              ${(()=>{if(a.length===2||a.length===4)return`${kp(y,d,a,v,S)}`;if(a.length===3||a.length===5)return`${Rp(y,d,a,v,S)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(a.length===2||a.length===4)return`${Op(y,d,a,p,h,c,t.cubicCoeffA,v,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${x.registerUniform("output_size","u32").registerUniform("scales","f32",h.length).registerUniform("roi","f32",c.length).declareVariables(y,d)}\n      ${x.mainStart()}\n        ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${_?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${d.offsetToIndices("global_idx")};\n        var input_indices: ${y.type.indices};\n        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${y.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${t.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${a.length===2||a.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${h.length>0?h:""}|${i.length>0?i:""}|${c.length>0?c:""}|${_}|${a}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[{dims:p,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:[{type:12,data:w},{type:1,data:h},{type:1,data:c},...Z(a,p)]})}},Dp=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},hd=(e,t)=>{let r=[],o=[],i=[],u=Dp(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");_p(e.inputs,t,u,r,o,i),e.compute(Bp(e.inputs[0],t,u,r,o,i),{inputs:[0]})},gd=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,i=e.cubicCoeffA,u=e.excludeOutside!==0,a=e.extrapolationValue,c=e.keepAspectRatioPolicy,p=e.mode,h=e.nearestMode===""?"simple":e.nearestMode;return ve({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:i,excludeOutside:u,extrapolationValue:a,keepAspectRatioPolicy:c,mode:p,nearestMode:h})}});var zp,Mp,bd,wd=Y(()=>{"use strict";ye();Se();Ze();_e();zp=(e,t)=>{let[r,o,i,u]=e,{numHeads:a,rotaryEmbeddingDim:c}=t;if(r.dims.length!==3&&r.dims.length!==4)throw new Error(`Input \'x\' is expected to have 3 or 4 dimensions, got ${r.dims.length}`);if(!M.areEqual(o.dims,[])&&!M.areEqual(o.dims,[1])&&o.dims.length!==2)throw new Error(`Input \'position_ids\' is expected to have 0, 1, or 2 dimensions, got ${o.dims.length}`);if(i.dims.length!==2)throw new Error(`Input \'cos_cache\' is expected to have 2 dimensions, got ${i.dims.length}`);if(u.dims.length!==2)throw new Error(`Input \'sin_cache\' is expected to have 2 dimensions, got ${u.dims.length}`);if(!M.areEqual(i.dims,u.dims))throw new Error("Inputs \'cos_cache\' and \'sin_cache\' are expected to have the same shape");if(c>0&&a===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let p=r.dims[0],h=r.dims[r.dims.length-2],d=i.dims[0],y=M.sizeFromDimension(r.dims,1)/h,w=c===0?i.dims[1]*2:y/a;if(c>w)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(o.dims.length===2){if(p!==o.dims[0])throw new Error(`Input \'position_ids\' dimension 0 should be of size batch_size, got ${o.dims[0]}`);if(h!==o.dims[1])throw new Error(`Input \'position_ids\' dimension 1 should be of size sequence_length, got ${o.dims[1]}`)}if(w/2!==i.dims[1]&&c/2!==i.dims[1])throw new Error(`Input \'cos_cache\' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${i.dims[1]}`);if(h>d)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Mp=(e,t)=>{let{interleaved:r,numHeads:o,rotaryEmbeddingDim:i,scale:u}=t,a=e[0].dims[0],c=M.sizeFromDimension(e[0].dims,1),p=e[0].dims[e[0].dims.length-2],h=c/p,d=e[2].dims[1],y=i===0?d*2:h/o,w=new Array(a,p,h/y,y-d),_=M.computeStrides(w),v=[{type:1,data:u},{type:12,data:w},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[c,h,y,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[c,y,p*y,1]}):[],...Z(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],S=A=>{let I=U("input",e[0].dataType,e[0].dims.length),x=U("position_ids",e[1].dataType,e[1].dims.length),E=U("cos_cache",e[2].dataType,e[2].dims.length),P=U("sin_cache",e[3].dataType,e[3].dims.length),O=j("output",e[0].dataType,e[0].dims.length);return A.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:w.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`\n        ${A.declareVariables(I,x,E,P,O)}\n\n        ${A.mainStart(or)}\n          let half_rotary_emb_dim = uniforms.${E.name}_shape[1];\n          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;\n          let size = uniforms.global_shape[0] * uniforms.global_strides[0];\n          ${A.guardAgainstOutOfBoundsWorkgroupSizes("size")}\n\n          if (bsnh[3] < half_rotary_emb_dim) {\n            let position_ids_idx =\n                ${x.broadcastedIndicesToOffset("bsnh.xy",j("",x.type.tensor,2))};\n            let position_id =\n                u32(${x.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);\n            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${r});\n            let j = i + select(half_rotary_emb_dim, 1, ${r});\n            let re = ${I.getByOffset("i")} * ${E.get("position_id","bsnh[3]")} -\n                ${I.getByOffset("j")} * ${P.get("position_id","bsnh[3]")};\n            ${O.setByOffset("i","re")}\n            let im = ${I.getByOffset("i")} * ${P.get("position_id","bsnh[3]")} +\n                ${I.getByOffset("j")} * ${E.get("position_id","bsnh[3]")};\n            ${O.setByOffset("j","im")}\n          } else {\n            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;\n            ${O.setByOffset("k",I.getByOffset("k"))}\n          }\n        }`};return{name:"RotaryEmbedding",shaderCache:{hint:ve({interleaved:r}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:S,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(M.size(w)/or)},programUniforms:v})}},bd=(e,t)=>{zp(e.inputs,t),e.compute(Mp(e.inputs,t))}});var Up,Vp,vd,$d=Y(()=>{"use strict";ye();Se();_e();Up=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let i=t.dims[t.dims.length-1],u=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==i)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==u)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==i)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let a=e[3];if(a.dims.length!==1)throw new Error("Beta must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let a=e[4];if(a.dims.length!==1)throw new Error("Bias must be 1D");if(a.dims[a.dims.length-1]!==i)throw new Error("Bias must have the same hidden size as input")}},Vp=(e,t,r,o)=>{let i=t.simplified,u=e[0].dims,a=M.size(u),c=u,p=a,h=u.slice(-1)[0],d=o?u.slice(0,-1).concat(1):[],y=!i&&e.length>3,w=e.length>4,_=o&&r>1,v=o&&r>2,S=r>3,A=Me(h),I=[{type:12,data:p},{type:12,data:A},{type:12,data:h},{type:1,data:t.epsilon}],x=P=>{let O=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],R=[U("x",e[0].dataType,e[0].dims,A),U("skip",e[1].dataType,e[1].dims,A),U("gamma",e[2].dataType,e[2].dims,A)];y&&R.push(U("beta",e[3].dataType,e[3].dims,A)),w&&R.push(U("bias",e[4].dataType,e[4].dims,A)),R.push(j("output",e[0].dataType,c,A)),_&&R.push(j("mean_output",1,d)),v&&R.push(j("inv_std_output",1,d)),S&&R.push(j("input_skip_bias_sum",e[0].dataType,c,A));let L=De(e[0].dataType);return`\n\n      ${P.registerUniforms(O).declareVariables(...R)}\n\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${$t("f32",A)};\n        var squareSum = ${$t("f32",A)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${w?"bias[i]":L+"(0.0)"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${S?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${ir(L,A,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${_t("sum",A)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${_t("squareSum",A)} / f32(uniforms.hidden_size) ${i?"":"- mean * mean"} + uniforms.epsilon);\n        ${_?"mean_output[global_idx] = mean;":""}\n        ${v?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] ${i?"":`- ${L}(mean)`}) * ${L}(inv_std_dev) * gamma[i] ${y?"+ beta[i]":""};\n        }\n      }`},E=[{dims:c,dataType:e[0].dataType}];return r>1&&E.push({dims:d,dataType:1}),r>2&&E.push({dims:d,dataType:1}),r>3&&E.push({dims:u,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${A};${_};${v};${S}`,inputDependencies:e.map((P,O)=>"type")},getShaderSource:x,getRunData:()=>({outputs:E,dispatchGroup:{x:Math.ceil(p/h/64)},programUniforms:I})}},vd=(e,t)=>{Up(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(Vp(e.inputs,t,e.outputCount,!1),{outputs:o})}});var Wp,Gn,Np,_d,Gp,Hp,Sd,xd,Cd=Y(()=>{"use strict";ye();Se();Ze();_e();Wp=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Gn=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},Np=(e,t)=>{if(e.length>1){let r=Gn(e,1),o=Gn(e,2),i=Gn(e,3);return i.length===0&&(i=[...Array(e[0].dims.length).keys()]),ve({starts:r,ends:o,axes:i})}else return t},_d=(e,t,r,o,i)=>{let u=e;return e<0&&(u+=r[o[t]]),i[t]<0?Math.max(0,Math.min(u,r[o[t]]-1)):Math.max(0,Math.min(u,r[o[t]]))},Gp=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${r.length}; i >= 0; i--) {\n            let input_shape_i = ${fe("uniforms.input_shape","i",r.length)};\n            let steps_i = ${fe("uniforms.steps","i",r.length)};\n            let signs_i = ${fe("uniforms.signs","i",r.length)};\n            let starts_i = ${fe("uniforms.starts","i",r.length)};\n            var output_index = ${t.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,Hp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=t.axes.length>0?M.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],u=Gn(e,4);u.forEach(I=>I!==0||(()=>{throw new Error("step cannot be 0")})),u.length===0&&(u=Array(i.length).fill(1));let a=t.starts.map((I,x)=>_d(I,x,r,i,u)),c=t.ends.map((I,x)=>_d(I,x,r,i,u));if(i.length!==a.length||i.length!==c.length)throw new Error("start, ends and axes should have the same number of elements");if(i.length!==r.length)for(let I=0;I<r.length;++I)i.includes(I)||(a.splice(I,0,0),c.splice(I,0,r[I]),u.splice(I,0,1));let p=u.map(I=>Math.sign(I));u.forEach((I,x,E)=>{if(I<0){let P=(c[x]-a[x])/I,O=a[x],R=O+P*u[x];a[x]=R,c[x]=O,E[x]=-I}});let h=r.slice(0);i.forEach((I,x)=>{h[I]=Math.ceil((c[I]-a[I])/u[I])});let d={dims:h,dataType:e[0].dataType},y=j("output",e[0].dataType,h.length),w=U("input",e[0].dataType,e[0].dims.length),_=M.size(h),v=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:a.length},{name:"signs",type:"i32",length:p.length},{name:"steps",type:"u32",length:u.length}],S=[{type:12,data:_},{type:12,data:a},{type:6,data:p},{type:12,data:u},...Z(e[0].dims,h)],A=I=>`\n      ${I.registerUniforms(v).declareVariables(w,y)}\n        ${Gp(w,y,r)}\n        ${I.mainStart()}\n          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${y.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${y.setByOffset("global_idx",w.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${p.length}_${a.length}_${u.length}`,inputDependencies:["rank"]},getShaderSource:A,getRunData:()=>({outputs:[d],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Sd=(e,t)=>{Wp(e.inputs,t);let r=Np(e.inputs,t);e.compute(Hp(e.inputs,r),{inputs:[0]})},xd=e=>{let t=e.starts,r=e.ends,o=e.axes;return ve({starts:t,ends:r,axes:o})}});var Lp,Fp,Ad,Id,Td=Y(()=>{"use strict";ye();Se();Ze();_e();Lp=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},Fp=(e,t)=>{let r=e.dims,o=M.size(r),i=64,u=t.axis;if(u<0&&(u=r.length+u),u<r.length-1)throw new Error("softmax only supports last axis for now.");let a=r[u],c=o/a,p=Me(a),h=a/p,d=(A,I)=>I===4?`max(max(${A}.x, ${A}.y), max(${A}.z, ${A}.w))`:I===2?`max(${A}.x, ${A}.y)`:I===3?`max(max(${A}.x, ${A}.y), ${A}.z)`:A,y=U("x",e.dataType,e.dims,p),w=j("result",e.dataType,e.dims,p),_=y.type.value,v=De(e.dataType)==="f32"?`var threadMax = ${_}(-3.402823e+38f);`:`var threadMax = ${_}(-65504.0h);`,S=A=>`\n      var<workgroup> rowMaxShared : ${_};\n      var<workgroup> rowSumShared : ${_};\n      var<workgroup> threadShared : array<${_}, ${i}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${_} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${_}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${A.registerUniform("packedCols","i32").declareVariables(y,w)}\n      ${A.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${i};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${v}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${_}(${d("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${_}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${_}(${_t("threadShared[0]",p)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${p}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:c},programUniforms:[{type:6,data:h}]}),getShaderSource:S}},Ad=(e,t)=>{Lp(e.inputs),e.compute(Fp(e.inputs[0],t))},Id=e=>ve({axis:e.axis})});var qp,jp,Kp,Yp,Zp,Ed,Pd,kd=Y(()=>{"use strict";ye();Se();Ze();_e();qp=e=>{if(!e||e.length<1)throw new Error("too few inputs")},jp=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(i=>r.push(Number(i))),o=r.length),ve({numOutputs:o,axis:t.axis,splitSizes:r})},Kp=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${fe("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Yp=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let i=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(i):o===0?r.push(`if (output_number == ${o}u) { ${i} }`):o===t-1?r.push(`else { ${i} }`):r.push(`else if (output_number == ${o}) { ${i} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${r.join(`\n`)}\n      }`},Zp=(e,t)=>{let r=e[0].dims,o=M.size(r),i=e[0].dataType,u=M.normalizeAxis(t.axis,r.length),a=new Array(t.numOutputs),c=U("input",i,r.length),p=new Array(t.numOutputs),h=[],d=[],y=0,w=[{type:12,data:o}];for(let v=0;v<t.numOutputs;v++){y+=t.splitSizes[v],p[v]=y;let S=r.slice();S[t.axis]=t.splitSizes[v],d.push(S),a[v]=j(`output${v}`,i,S.length),h.push({dims:d[v],dataType:e[0].dataType})}w.push({type:12,data:p},...Z(r,...d));let _=v=>`\n  ${v.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",p.length).declareVariables(c,...a)}\n  ${Kp(p.length)}\n  ${Yp(a)}\n\n  ${v.mainStart()}\n    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${c.offsetToIndices("global_idx")};\n    var index = ${c.indicesGet("indices",u)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${fe("uniforms.size_in_split_axis","output_number - 1u",p.length)};\n      ${c.indicesSet("indices",u,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:h,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:w})}},Ed=(e,t)=>{qp(e.inputs);let r=e.inputs.length===1?t:jp(e.inputs,t);e.compute(Zp(e.inputs,r),{inputs:[0]})},Pd=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ve({axis:t,numOutputs:o,splitSizes:r})}});var Od,Xp,Qp,Jp,Rd,Bd=Y(()=>{"use strict";ye();Se();_e();Od=e=>Array.from(e.getBigInt64Array(),Number),Xp=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Od(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Qp=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},Jp=e=>{let t=e[0].dims,r=Od(e[1]),o=Qp(t,r),i=M.size(o),u=e[0].dataType,a=U("input",u,t.length),c=j("output",u,o.length),p=h=>`\n      const inputShape = ${a.indices(...t)};\n      ${h.registerUniform("output_size","u32").declareVariables(a,c)}\n      ${h.mainStart()}\n      ${h.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${c.offsetToIndices("global_idx")};\n      var input_indices: ${a.type.indices};\n      for (var i = 0; i < ${t.length}; i++) {\n        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${c.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${a.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${c.setByOffset("global_idx",a.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...Z(e[0].dims,o)]}),getShaderSource:p}},Rd=e=>{Xp(e.inputs),e.compute(Jp(e.inputs),{inputs:[0]})}});var em,tm,Dd,zd=Y(()=>{"use strict";ye();Se();_e();em=(e,t,r,o,i)=>{let u=j("output_data",i,r.length,4),a=U("a_data",t[1].dataType,t[1].dims.length,4),c=U("b_data",t[2].dataType,t[2].dims.length,4),p=U("c_data",t[0].dataType,t[0].dims.length,4),h,d=(y,w,_)=>`select(${w}, ${y}, ${_})`;if(!o)h=u.setByOffset("global_idx",d(a.getByOffset("global_idx"),c.getByOffset("global_idx"),p.getByOffset("global_idx")));else{let y=(w,_,v="")=>{let S=`a_data[index_a${_}][component_a${_}]`,A=`b_data[index_b${_}][component_b${_}]`,I=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`\n            let output_indices${_} = ${u.offsetToIndices(`global_idx * 4u + ${_}u`)};\n            let offset_a${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_b${_} = ${c.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let offset_c${_} = ${p.broadcastedIndicesToOffset(`output_indices${_}`,u)};\n            let index_a${_} = offset_a${_} / 4u;\n            let index_b${_} = offset_b${_} / 4u;\n            let index_c${_} = offset_c${_} / 4u;\n            let component_a${_} = offset_a${_} % 4u;\n            let component_b${_} = offset_b${_} % 4u;\n            let component_c${_} = offset_c${_} % 4u;\n            ${w}[${_}] = ${v}(${d(S,A,I)});\n          `};i===9?h=`\n            var data = vec4<u32>(0);\n            ${y("data",0,"u32")}\n            ${y("data",1,"u32")}\n            ${y("data",2,"u32")}\n            ${y("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:h=`\n            ${y("output_data[global_idx]",0)}\n            ${y("output_data[global_idx]",1)}\n            ${y("output_data[global_idx]",2)}\n            ${y("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(p,a,c,u)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${h}\n      }`},tm=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,i=e[1].dataType,u=!(M.areEqual(t,r)&&M.areEqual(r,o)),a=t,c=M.size(t);if(u){let h=It.calcShape(It.calcShape(t,r,!1),o,!1);if(!h)throw new Error("Can\'t perform where op on the given tensors");a=h,c=M.size(a)}let p=Math.ceil(c/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:h=>em(h,e,a,u,i),getRunData:()=>({outputs:[{dims:a,dataType:i}],dispatchGroup:{x:Math.ceil(c/64/4)},programUniforms:[{type:12,data:p},...Z(o,t,r,a)]})}},Dd=e=>{e.compute(tm(e.inputs))}});var Md,Ud=Y(()=>{"use strict";Ka();Ro();Ja();ts();Vs();Zs();Oo();Uo();lu();mu();gu();$u();xu();Au();Eu();Ou();Du();Mu();Vu();Wo();Gu();qu();Ku();cd();md();In();yd();wd();$d();Cd();Td();kd();Bd();Sr();Rn();zd();Md=new Map([["Abs",[rs]],["Acos",[ns]],["Acosh",[os]],["Add",[Ws]],["ArgMax",[ja,ko]],["ArgMin",[qa,ko]],["Asin",[is]],["Asinh",[as]],["Atan",[ss]],["Atanh",[us]],["Attention",[Xa]],["AveragePool",[rd,td]],["BatchNormalization",[Qa]],["BiasAdd",[es]],["BiasSplitGelu",[Us]],["Cast",[ls,ds]],["Ceil",[ps]],["Clip",[cs]],["Concat",[Ya,Za]],["Conv",[Ho,Go]],["ConvTranspose",[du,uu]],["Cos",[ms]],["Cosh",[fs]],["CumSum",[cu,pu]],["DepthToSpace",[fu,hu]],["Div",[Ns]],["Einsum",[wu,vu]],["Elu",[hs,kn]],["Equal",[Gs]],["Erf",[gs]],["Exp",[ys]],["Expand",[Su]],["FastGelu",[Cu]],["Floor",[bs]],["FusedConv",[Ho,Go]],["Gather",[Tu,Iu]],["GatherElements",[ku,Pu]],["Gelu",[ws]],["Gemm",[Bu,Ru]],["GlobalAveragePool",[id,od]],["GlobalMaxPool",[ld,dd]],["Greater",[qs]],["GreaterOrEqual",[Ks]],["HardSigmoid",[Is,As]],["InstanceNormalization",[zu]],["LayerNormalization",[Uu]],["LeakyRelu",[vs,kn]],["Less",[js]],["LessOrEqual",[Ys]],["Log",[zs]],["MatMul",[ru]],["MatMulNBits",[Wu,Nu]],["MaxPool",[sd,ud]],["Mul",[Hs]],["MultiHeadAttention",[Fu,Lu]],["Neg",[_s]],["Not",[$s]],["Pad",[ju]],["Pow",[Ls]],["Range",[pd]],["Reciprocal",[Ss]],["ReduceMin",[Wa]],["ReduceMean",[Da]],["ReduceMax",[Va]],["ReduceSum",[Ga]],["ReduceProd",[Na]],["ReduceL1",[za]],["ReduceL2",[Ma]],["ReduceLogSum",[La]],["ReduceLogSumExp",[Ua]],["ReduceSumSquare",[Ha]],["Relu",[xs]],["Resize",[hd,gd]],["RotaryEmbedding",[bd]],["Sigmoid",[Cs]],["Sin",[Ts]],["Sinh",[Es]],["Slice",[Sd,xd]],["SkipLayerNormalization",[vd]],["Split",[Ed,Pd]],["Sqrt",[Ps]],["Softmax",[Ad,Id]],["Sub",[Fs]],["Tan",[ks]],["Tanh",[Rs]],["ThresholdedRelu",[Ds,kn]],["Tile",[Rd]],["Transpose",[_a,Sa]],["Where",[Dd]]])});var Hn,Vd=Y(()=>{"use strict";$r();Lt();_e();Hn=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,i,u){rr(t.programInfo.name);let a=this.backend.device,c=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let p=[];for(let d of r)p.push({binding:p.length,resource:{buffer:d.buffer}});for(let d of o)p.push({binding:p.length,resource:{buffer:d.buffer}});u&&p.push({binding:p.length,resource:u});let h=a.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:p,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let d={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:h,dispatchGroup:i};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(d)}c.setPipeline(t.computePipeline),c.setBindGroup(0,h),c.dispatchWorkgroups(...i),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),Ht(t.programInfo.name)}dispose(){}build(t,r){rr(t.name);let o=this.backend.device,i=[];o.features.has("shader-f16")&&i.push("enable f16;");let u=va(r,this.backend.device.limits),a=t.getShaderSource(u),c=`${i.join(`\n`)}\n${u.additionalImplementations}\n${a}`,p=o.createShaderModule({code:c,label:t.name});Ve("verbose",()=>`[WebGPU] ${t.name} shader code: ${c}`);let h=o.createComputePipeline({compute:{module:p,entryPoint:"main"},layout:"auto",label:t.name});return Ht(t.name),{programInfo:t,computePipeline:h,uniformVariablesInfo:u.variablesInfo}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,i=typeof t=="number"?1:t.z||1,u=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=u&&o<=u&&i<=u)return[r,o,i];let a=r*o*i,c=Math.ceil(Math.sqrt(a));if(c>u){if(c=Math.ceil(Math.cbrt(a)),c>u)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[c,c,c]}else return[c,c,1]}}});var rm,nm,Yo,Ln,Wd=Y(()=>{"use strict";$r();ye();Lt();fa();wa();Ud();Vd();rm=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let i=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${i}`);break}case"rank":{let u=e[o].dims.length;r.push(`${i};${u}`);break}case"dims":{let u=e[o].dims.join(",");r.push(`${i};${u}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},nm=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${rm(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Yo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ln=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],i={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(i),this.adapterInfo=new Yo(await r.requestAdapterInfo()),this.gpuDataManager=ba(this),this.programManager=new Hn(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,pa(t.logLevel,!!t.debug),this.device.onuncapturederror=u=>{u.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${u.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;rr(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let i=0;i<r.length/2;i++){let u=o[i],a=u.kernelId,c=this.kernels.get(a),p=c.kernelType,h=c.kernelName,d=u.programName,y=u.inputTensorViews,w=u.outputTensorViews,_=r[i*2],v=r[i*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=_);let S=Number(_-this.queryTimeBase),A=Number(v-this.queryTimeBase);if(!Number.isSafeInteger(S)||!Number.isSafeInteger(A))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:y.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),outputsMetadata:w.map(I=>({dims:I.dims,dataType:Gt(I.dataType)})),kernelId:a,kernelType:p,kernelName:h,programName:d,startTime:S,endTime:A});else{let I="";y.forEach((E,P)=>{I+=`input[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `});let x="";w.forEach((E,P)=>{x+=`output[${P}]: [${E.dims}] | ${Gt(E.dataType)}, `}),console.log(`[profiling] kernel "${a}|${p}|${h}|${d}" ${I}${x}execution time: ${A-S} ns`)}wo("GPU",`${d}::${_}::${v}`)}t.unmap(),this.pendingQueries.delete(t)}),Ht()}run(t,r,o,i,u,a){rr(t.name);let c=[];for(let E=0;E<r.length;++E){let P=r[E].data;if(P===0)continue;let O=this.gpuDataManager.get(P);if(!O)throw new Error(`no GPU data for input: ${P}`);c.push(O)}let{outputs:p,dispatchGroup:h,programUniforms:d}=t.getRunData(r),y=o.length===0?p.map((E,P)=>P):o;if(y.length!==p.length)throw new Error(`Output size ${y.length} must be equal to ${p.length}.`);let w=[],_=[];for(let E=0;E<p.length;++E){if(!Number.isInteger(y[E])||y[E]<-3||y[E]>=a)throw new Error(`Invalid output index: ${y[E]}`);if(y[E]===-3)continue;let P=y[E]===-1,O=y[E]===-2,R=P||O?u(p[E].dataType,p[E].dims):i(y[E],p[E].dataType,p[E].dims);if(w.push(R),R.data===0)continue;let L=this.gpuDataManager.get(R.data);if(!L)throw new Error(`no GPU data for output: ${R.data}`);if(P&&this.temporaryData.push(L),O){let N=this.kernelPersistentData.get(this.currentKernelId);N||(N=[],this.kernelPersistentData.set(this.currentKernelId,N)),N.push(L)}_.push(L)}if(c.length!==r.length||_.length!==w.length){if(_.length===0)return Ht(t.name),w;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let v;if(d){let E=0,P=[];d.forEach(N=>{let K=typeof N.data=="number"?[N.data]:N.data;if(K.length===0)return;let Q=N.type===10?2:4,he,W;N.type===10?(W=K.length>4?16:K.length>2?8:K.length*Q,he=K.length>4?16:Q*K.length):(W=K.length<=2?K.length*Q:16,he=16),E=Math.ceil(E/W)*W,P.push(E);let se=N.type===10?8:4;E+=K.length>4?Math.ceil(K.length/se)*he:K.length*Q});let O=16;E=Math.ceil(E/O)*O;let R=new ArrayBuffer(E);d.forEach((N,K)=>{let Q=P[K],he=typeof N.data=="number"?[N.data]:N.data;if(N.type===6)new Int32Array(R,Q,he.length).set(he);else if(N.type===12)new Uint32Array(R,Q,he.length).set(he);else if(N.type===10)new Uint16Array(R,Q,he.length).set(he);else if(N.type===1)new Float32Array(R,Q,he.length).set(he);else throw new Error(`Unsupported uniform type: ${Gt(N.type)}`)});let L=this.gpuDataManager.create(E,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(L.buffer,0,R,0,E),this.gpuDataManager.release(L.id),v={offset:0,size:E,buffer:L.buffer}}let S=this.programManager.normalizeDispatchGroupSize(h),A=S[1]===1&&S[2]===1,I=nm(t,r,A),x=this.programManager.getArtifact(I);if(x||(x=this.programManager.build(t,S),this.programManager.setArtifact(I,x),Ve("info",()=>`[artifact] key: ${I}, programName: ${t.name}`)),d&&x.uniformVariablesInfo){if(d.length!==x.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${x.uniformVariablesInfo.length}, got ${d.length} in program "${x.programInfo.name}".`);for(let E=0;E<d.length;E++){let P=d[E],O=P.type,R=typeof P.data=="number"?1:P.data.length,[L,N]=x.uniformVariablesInfo[E];if(O!==L||R!==N)throw new Error(`Uniform variable ${E} mismatch: expect type ${L} with size ${N}, got type ${O} with size ${R} in program "${x.programInfo.name}".`)}}if(Ve("info",()=>`[ProgramManager] run "${t.name}" (key=${I}) with ${S[0]}x${S[1]}x${S[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let E={kernelId:this.currentKernelId,programName:x.programInfo.name,inputTensorViews:r,outputTensorViews:w};this.pendingKernels.push(E),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(E)}return this.programManager.run(x,c,_,S,v),Ht(t.name),w}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,i){let u=Md.get(t);if(!u)throw new Error(`kernel not implemented: ${t}`);let a={kernelType:t,kernelName:i,kernelEntry:u[0],attributes:[u[1],o]};this.kernels.set(r,a)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let i=this.kernels.get(t);if(!i)throw new Error(`kernel not created: ${t}`);let u=i.kernelType,a=i.kernelName,c=i.kernelEntry,p=i.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${u}] ${a}" is not allowed to be called recursively`);this.currentKernelId=t,p[0]&&(p[1]=p[0](p[1]),p[0]=void 0),Ve("info",()=>`[WebGPU] Start to run kernel "[${u}] ${a}"...`);let h=this.env.debug;this.temporaryData=[];try{return h&&this.device.pushErrorScope("validation"),c(r,p[1]),0}catch(d){return o.push(Promise.resolve(`[WebGPU] Kernel "[${u}] ${a}" failed. ${d}`)),1}finally{h&&o.push(this.device.popErrorScope().then(d=>d?`GPU validation error for kernel "[${u}] ${a}": ${d.message}`:null));for(let d of this.temporaryData)this.gpuDataManager.release(d.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,i){let u=this.sessionExternalDataMapping.get(t);u||(u=new Map,this.sessionExternalDataMapping.set(t,u));let a=u.get(r),c=this.gpuDataManager.registerExternalBuffer(o,i,a?.[1]);return u.set(r,[c,o]),c}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let i=await xo(this,t,r);return ma(i.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ve("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ve("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ve("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let i=0;i<o;i++){let u=this.getComputePassEncoder(),a=t[i];this.writeTimestamp(this.pendingDispatchNumber*2),u.setPipeline(a.computePipeline),u.setBindGroup(0,a.bindGroup),u.dispatchWorkgroups(...a.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[i]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Nd={};gn(Nd,{init:()=>om});var qr,Zo,om,Gd=Y(()=>{"use strict";ye();Wd();Lt();Se();qr=class e{constructor(t,r,o,i){this.module=t;this.dataType=r;this.data=o;this.dims=i}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=M.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(M.size(t)!==M.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let i=t.HEAPU32,u=o>>>2;this.opKernelContext=i[u++];let a=i[u++];this.outputCount=i[u++],this.customDataOffset=i[u++],this.customDataSize=i[u++];let c=[];for(let p=0;p<a;p++){let h=i[u++],d=i[u++],y=i[u++],w=[];for(let _=0;_<y;_++)w.push(i[u++]);c.push(new qr(t,h,d,w))}this.inputs=c}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}getMaxComputeWorkgroupSizes(){return[this.backend.device.limits.maxComputeWorkgroupSizeX,this.backend.device.limits.maxComputeWorkgroupSizeY,this.backend.device.limits.maxComputeWorkgroupSizeZ]}getMaxComputeWorkgroupStoragesize(){return this.backend.device.limits.maxComputeWorkgroupStorageSize}compute(t,r){let o=r?.inputs?.map(c=>typeof c=="number"?this.inputs[c]:c)??this.inputs,i=r?.outputs??[],u=(c,p,h)=>new qr(this.module,p,this.output(c,h),h),a=(c,p)=>{let h=tr(c);if(!h)throw new Error(`Unsupported data type: ${c}`);let d=h*M.size(p),y=d>0?this.backend.gpuDataManager.create(d).id:0;return new qr(this.module,c,y,p)};return this.backend.run(t,o,i,u,a,this.outputCount)}output(t,r){let o=this.module.stackSave();try{let i=this.module.stackAlloc((1+r.length)*4),u=i>>2;this.module.HEAPU32[u++]=r.length;for(let a=0;a<r.length;a++)this.module.HEAPU32[u++]=r[a];return this.module._JsepOutput(this.opKernelContext,t,i)}catch(i){throw new Error(`Failed to generate kernel\'s output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`)}finally{this.module.stackRestore(o)}}},om=async(e,t,r,o)=>{let i=t.jsepInit;if(!i)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let u=new Ln;await u.initialize(r,o),i("webgpu",[u,a=>u.alloc(a),a=>u.free(a),(a,c,p,h=!1)=>{if(h)Ve("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${a}, dst=${c}, size=${p}`),u.memcpy(a,c);else{Ve("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${a}, gpuDataId=${c}, size=${p}`);let d=t.HEAPU8.subarray(a>>>0,(a>>>0)+p);u.upload(c,d)}},async(a,c,p)=>{Ve("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${c}, size=${p}`),await u.download(a,()=>t.HEAPU8.subarray(c>>>0,(c>>>0)+p))},(a,c,p)=>u.createKernel(a,c,p,t.UTF8ToString(t._JsepGetNodeName(c))),a=>u.releaseKernel(a),(a,c,p,h)=>{Ve("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${p}, kernel=${a}, contextDataOffset=${c}`);let d=new Zo(t,u,c);return u.computeKernel(a,d,h)},()=>u.captureBegin(),()=>u.captureEnd(),()=>u.replay()])}else i("webnn")}});var Vi;Vi=Ei();var pl=zi(),fo,ho=!1,yn=!1,Ui=!1,ml=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},fl=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},hl=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Wi=async e=>{if(ho)return Promise.resolve();if(yn)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(Ui)throw new Error("previous call to \'initializeWebAssembly()\' failed.");yn=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,i=ml(r),u=o&&fl(),a=e.wasmPaths,c=typeof a=="string"?a:void 0,p=hl(u,i),h=typeof a=="object"?a[p]:void 0,d=!1,y=[];if(t>0&&y.push(new Promise(w=>{setTimeout(()=>{d=!0,w()},t)})),y.push(new Promise((w,_)=>{let v=i?pl:Vi,S={locateFile:(A,I)=>{if(i&&A.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Mi()],{type:"text/javascript"}));if(A.endsWith(".wasm")){if(h)return h;let x=c??I;return p==="ort-wasm-simd.wasm"?x+"ort-wasm-simd.jsep.wasm":p==="ort-wasm-simd-threaded.wasm"?x+"ort-wasm-simd-threaded.jsep.wasm":x+p}return I+A}};if(i)if(S.numThreads=r,typeof Blob>"u")S.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let A=`var ortWasmThreaded=${v.toString()};`;S.mainScriptUrlOrBlob=new Blob([A],{type:"text/javascript"})}v(S).then(A=>{yn=!1,ho=!0,fo=A,w()},A=>{yn=!1,Ui=!0,_(A)})})),await Promise.race(y),d)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},Le=()=>{if(ho&&fo)return fo;throw new Error("WebAssembly is not initialized yet.")};var Fe=(e,t)=>{let r=Le(),o=r.lengthBytesUTF8(e)+1,i=r._malloc(o);return r.stringToUTF8(e,i,o),t.push(i),i},Nr=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([i,u])=>{let a=t?t+i:i;if(typeof u=="object")Nr(u,a+".",r,o);else if(typeof u=="string"||typeof u=="number")o(a,u.toString());else if(typeof u=="boolean")o(a,u?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof u}`)})},Ue=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let i=t.HEAP32[o/4],u=t.HEAPU32[o/4+1],a=u?t.UTF8ToString(u):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{t.stackRestore(r)}};var Ni=e=>{let t=Le(),r=0,o=[],i=e||{};try{if(e?.logSeverityLevel===void 0)i.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)i.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(i.terminate=!1);let u=0;return e?.tag!==void 0&&(u=Fe(e.tag,o)),r=t._OrtCreateRunOptions(i.logSeverityLevel,i.logVerbosityLevel,!!i.terminate,u),r===0&&Ue("Can\'t create run options."),e?.extra!==void 0&&Nr(e.extra,"",new WeakSet,(a,c)=>{let p=Fe(a,o),h=Fe(c,o);t._OrtAddRunConfigEntry(r,p,h)!==0&&Ue(`Can\'t set a run config entry: ${a} - ${c}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(a=>t._free(a)),u}};var gl=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},yl=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},bl=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},wl=(e,t,r)=>{for(let o of t){let i=typeof o=="string"?o:o.name;switch(i){case"webnn":if(i="WEBNN",typeof o!="string"){let a=o;if(a?.deviceType){let c=Fe("deviceType",r),p=Fe(a.deviceType,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'deviceType\' - ${a.deviceType}.`)}if(a?.numThreads){let c=a.numThreads;(typeof c!="number"||!Number.isInteger(c)||c<0)&&(c=0);let p=Fe("numThreads",r),h=Fe(c.toString(),r);Le()._OrtAddSessionConfigEntry(e,p,h)!==0&&Ue(`Can\'t set a session config entry: \'numThreads\' - ${a.numThreads}.`)}if(a?.powerPreference){let c=Fe("powerPreference",r),p=Fe(a.powerPreference,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'powerPreference\' - ${a.powerPreference}.`)}}break;case"webgpu":if(i="JS",typeof o!="string"){let a=o;if(a?.preferredLayout){if(a.preferredLayout!=="NCHW"&&a.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${a.preferredLayout}`);let c=Fe("preferredLayout",r),p=Fe(a.preferredLayout,r);Le()._OrtAddSessionConfigEntry(e,c,p)!==0&&Ue(`Can\'t set a session config entry: \'preferredLayout\' - ${a.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${i}`)}let u=Fe(i,r);Le()._OrtAppendExecutionProvider(e,u)!==0&&Ue(`Can\'t append execution provider: ${i}.`)}},Gi=e=>{let t=Le(),r=0,o=[],i=e||{};bl(i);try{let u=gl(i.graphOptimizationLevel??"all"),a=yl(i.executionMode??"sequential"),c=typeof i.logId=="string"?Fe(i.logId,o):0,p=i.logSeverityLevel??2;if(!Number.isInteger(p)||p<0||p>4)throw new Error(`log serverity level is not valid: ${p}`);let h=i.logVerbosityLevel??0;if(!Number.isInteger(h)||h<0||h>4)throw new Error(`log verbosity level is not valid: ${h}`);let d=typeof i.optimizedModelFilePath=="string"?Fe(i.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(u,!!i.enableCpuMemArena,!!i.enableMemPattern,a,!!i.enableProfiling,0,c,p,h,d),r===0&&Ue("Can\'t create session options."),i.executionProviders&&wl(r,i.executionProviders,o),i.enableGraphCapture!==void 0){if(typeof i.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${i.enableGraphCapture}`);let y=Fe("enableGraphCapture",o),w=Fe(i.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,y,w)!==0&&Ue(`Can\'t set a session config entry: \'enableGraphCapture\' - ${i.enableGraphCapture}.`)}if(i.freeDimensionOverrides)for(let[y,w]of Object.entries(i.freeDimensionOverrides)){if(typeof y!="string")throw new Error(`free dimension override name must be a string: ${y}`);if(typeof w!="number"||!Number.isInteger(w)||w<0)throw new Error(`free dimension override value must be a non-negative integer: ${w}`);let _=Fe(y,o);t._OrtAddFreeDimensionOverride(r,_,w)!==0&&Ue(`Can\'t set a free dimension override: ${y} - ${w}.`)}return i.extra!==void 0&&Nr(i.extra,"",new WeakSet,(y,w)=>{let _=Fe(y,o),v=Fe(w,o);t._OrtAddSessionConfigEntry(r,_,v)!==0&&Ue(`Can\'t set a session config entry: ${y} - ${w}.`)}),[r,o]}catch(u){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(a=>t._free(a)),u}};ye();var Li=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let i of r)o.push(i);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let i=t.body.getReader(),u;try{u=new ArrayBuffer(o)}catch(c){if(c instanceof RangeError){let p=Math.ceil(o/65536);u=new WebAssembly.Memory({initial:p,maximum:p}).buffer}else throw c}let a=0;for(;;){let{done:c,value:p}=await i.read();if(c)break;let h=p.byteLength;new Uint8Array(u,a,h).set(p),a+=h}return new Uint8Array(u,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var im=(e,t)=>{Le()._OrtInit(e,t)!==0&&Ue("Can\'t initialize onnxruntime.")},Ld=async e=>{im(e.wasm.numThreads,Gr(e.logLevel))},Fd=async(e,t)=>{{let r=(Gd(),wr(Nd)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let i=e.webgpu.powerPreference;if(i!==void 0&&i!=="low-power"&&i!=="high-performance")throw new Error(`Invalid powerPreference setting: "${i}"`);let u=e.webgpu.forceFallbackAdapter;if(u!==void 0&&typeof u!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${u}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:i,forceFallbackAdapter:u}),!o)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",Le(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",Le(),e)}}},ar=new Map,am=e=>{let t=Le(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ue("Can\'t get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Xo=e=>{let t=Le(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},qd=async(e,t)=>{let r,o,i=Le();Array.isArray(e)?[r,o]=e:e.buffer===i.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Xo(e);let u=0,a=0,c=0,p=[],h=[],d=[];try{if([a,p]=Gi(t),t?.externalData&&i.mountExternalData){let x=[];for(let E of t.externalData){let P=typeof E=="string"?E:E.path;x.push(Li(typeof E=="string"?E:E.data).then(O=>{i.mountExternalData(P,O)}))}await Promise.all(x)}u=await i._OrtCreateSession(r,o,a),u===0&&Ue("Can\'t create a session.");let[y,w]=am(u),_=!!t?.enableGraphCapture,v=[],S=[],A=[];for(let x=0;x<y;x++){let E=i._OrtGetInputName(u,x);E===0&&Ue("Can\'t get an input name."),h.push(E),v.push(i.UTF8ToString(E))}for(let x=0;x<w;x++){let E=i._OrtGetOutputName(u,x);E===0&&Ue("Can\'t get an output name."),d.push(E);let P=i.UTF8ToString(E);S.push(P);{if(_&&t?.preferredOutputLocation===void 0){A.push("gpu-buffer");continue}let O=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[P]??"cpu";if(O!=="cpu"&&O!=="cpu-pinned"&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}.`);if(_&&O!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${O}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);A.push(O)}}let I=null;return A.some(x=>x==="gpu-buffer")&&(c=i._OrtCreateBinding(u),c===0&&Ue("Can\'t create IO binding."),I={handle:c,outputPreferredLocations:A,outputPreferredLocationsEncoded:A.map(x=>yo(x))}),ar.set(u,[u,h,d,I,_,!1]),[u,v,S]}catch(y){throw h.forEach(w=>i._OrtFree(w)),d.forEach(w=>i._OrtFree(w)),c!==0&&i._OrtReleaseBinding(c),u!==0&&i._OrtReleaseSession(u),y}finally{i._free(r),a!==0&&i._OrtReleaseSessionOptions(a),p.forEach(y=>i._free(y)),i.unmountExternalData?.()}},jd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,i,u,a,c]=r;a&&(c&&t._OrtClearBoundOutputs(a.handle),t._OrtReleaseBinding(a.handle)),t.jsepOnReleaseSession?.(e),i.forEach(p=>t._OrtFree(p)),u.forEach(p=>t._OrtFree(p)),t._OrtReleaseSession(o),ar.delete(e)},Hd=(e,t,r,o,i,u=!1)=>{if(!e){t.push(0);return}let a=Le(),c=e[0],p=e[1],h=e[3],d,y;if(c==="string"&&h==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(u&&h!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(h==="gpu-buffer"){let v=e[2].gpuBuffer,S=tr(go(c));y=p.reduce((I,x)=>I*x,1)*S;let A=a.jsepRegisterBuffer;if(!A)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');d=A(o,i,v,y)}else{let v=e[2];if(Array.isArray(v)){y=4*v.length,d=a._malloc(y),r.push(d);let S=d/4;for(let A=0;A<v.length;A++){if(typeof v[A]!="string")throw new TypeError(`tensor data at index ${A} is not a string`);a.HEAPU32[S++]=Fe(v[A],r)}}else y=v.byteLength,d=a._malloc(y),r.push(d),a.HEAPU8.set(new Uint8Array(v.buffer,v.byteOffset,y),d)}let w=a.stackSave(),_=a.stackAlloc(4*p.length);try{let v=_/4;p.forEach(A=>a.HEAP32[v++]=A);let S=a._OrtCreateTensor(go(c),d,y,_,p.length,yo(h));S===0&&Ue(`Can\'t create tensor for input/output. session=${o}, index=${i}.`),t.push(S)}finally{a.stackRestore(w)}},Kd=async(e,t,r,o,i,u)=>{let a=Le(),c=ar.get(e);if(!c)throw new Error(`cannot run inference. invalid session id: ${e}`);let p=c[0],h=c[1],d=c[2],y=c[3],w=c[4],_=c[5],v=t.length,S=o.length,A=0,I=[],x=[],E=[],P=[],O=a.stackSave(),R=a.stackAlloc(v*4),L=a.stackAlloc(v*4),N=a.stackAlloc(S*4),K=a.stackAlloc(S*4);try{[A,I]=Ni(u);for(let ee=0;ee<v;ee++)Hd(r[ee],x,P,e,t[ee],w);for(let ee=0;ee<S;ee++)Hd(i[ee],E,P,e,v+o[ee],w);let Q=R/4,he=L/4,W=N/4,se=K/4;for(let ee=0;ee<v;ee++)a.HEAPU32[Q++]=x[ee],a.HEAPU32[he++]=h[t[ee]];for(let ee=0;ee<S;ee++)a.HEAPU32[W++]=E[ee],a.HEAPU32[se++]=d[o[ee]];if(y&&!_){let{handle:ee,outputPreferredLocations:ae,outputPreferredLocationsEncoded:Ae}=y;if(h.length!==v)throw new Error(`input count from feeds (${v}) is expected to be always equal to model\'s input count (${h.length}).`);for(let me=0;me<v;me++){let ie=t[me];await a._OrtBindInput(ee,h[ie],x[me])!==0&&Ue(`Can\'t bind input[${me}] for session=${e}.`)}for(let me=0;me<S;me++){let ie=o[me];i[me]?.[3]?a._OrtBindOutput(ee,d[ie],E[me],0)!==0&&Ue(`Can\'t bind pre-allocated output[${me}] for session=${e}.`):a._OrtBindOutput(ee,d[ie],0,Ae[ie])!==0&&Ue(`Can\'t bind output[${me}] to ${ae[me]} for session=${e}.`)}ar.set(e,[p,h,d,y,w,!0])}a.jsepOnRunStart?.(p);let Ce;y?Ce=await a._OrtRunWithBinding(p,y.handle,S,N,A):Ce=await a._OrtRun(p,L,R,v,K,S,N,A),Ce!==0&&Ue("failed to call OrtRun().");let We=[];for(let ee=0;ee<S;ee++){let ae=a.HEAPU32[N/4+ee];if(ae===E[ee]){We.push(i[ee]);continue}let Ae=a.stackSave(),me=a.stackAlloc(4*4),ie=!1,ue,le=0;try{a._OrtGetTensorData(ae,me,me+4,me+8,me+12)!==0&&Ue(`Can\'t access output tensor data on index ${ee}.`);let G=me/4,ne=a.HEAPU32[G++];le=a.HEAPU32[G++];let xe=a.HEAPU32[G++],Ke=a.HEAPU32[G++],Be=[];for(let Ne=0;Ne<Ke;Ne++)Be.push(a.HEAPU32[xe/4+Ne]);a._OrtFree(xe);let Ge=Be.reduce((Ne,Ye)=>Ne*Ye,1);ue=Gt(ne);let Ut=y?.outputPreferredLocations[o[ee]];if(ue==="string"){if(Ut==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let Ne=[],Ye=le/4;for(let mt=0;mt<Ge;mt++){let Rt=a.HEAPU32[Ye++],qt=mt===Ge-1?void 0:a.HEAPU32[Ye]-Rt;Ne.push(a.UTF8ToString(Rt,qt))}We.push([ue,Be,Ne,"cpu"])}else if(Ut==="gpu-buffer"&&Ge>0){let Ne=a.jsepGetBuffer;if(!Ne)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let Ye=Ne(le),mt=tr(ne);if(mt===void 0||!Hi(ue))throw new Error(`Unsupported data type: ${ue}`);ie=!0,We.push([ue,Be,{gpuBuffer:Ye,download:a.jsepCreateDownloader(Ye,Ge*mt,ue),dispose:()=>{a._OrtReleaseTensor(ae)}},"gpu-buffer"])}else{let Ne=bn(ue),Ye=new Ne(Ge);new Uint8Array(Ye.buffer,Ye.byteOffset,Ye.byteLength).set(a.HEAPU8.subarray(le,le+Ye.byteLength)),We.push([ue,Be,Ye,"cpu"])}}finally{a.stackRestore(Ae),ue==="string"&&le&&a._free(le),ie||a._OrtReleaseTensor(ae)}}return y&&!w&&(a._OrtClearBoundOutputs(y.handle),ar.set(e,[p,h,d,y,w,!1])),We}finally{a.stackRestore(O),x.forEach(Q=>a._OrtReleaseTensor(Q)),E.forEach(Q=>a._OrtReleaseTensor(Q)),P.forEach(Q=>a._free(Q)),A!==0&&a._OrtReleaseRunOptions(A),I.forEach(Q=>a._free(Q))}},Yd=e=>{let t=Le(),r=ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],i=t._OrtEndProfiling(o);i===0&&Ue("Can\'t get an profile file name."),t._OrtFree(i)},Zd=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t};self.onmessage=e=>{let{type:t,in:r}=e.data;try{switch(t){case"init-wasm":Wi(r.wasm).then(()=>{Ld(r).then(()=>{postMessage({type:t})},o=>{postMessage({type:t,err:o})})},o=>{postMessage({type:t,err:o})});break;case"init-ep":{let{epName:o,env:i}=r;Fd(i,o).then(()=>{postMessage({type:t})},u=>{postMessage({type:t,err:u})});break}case"copy-from":{let{buffer:o}=r,i=Xo(o);postMessage({type:t,out:i});break}case"create":{let{model:o,options:i}=r;qd(o,i).then(u=>{postMessage({type:t,out:u})},u=>{postMessage({type:t,err:u})});break}case"release":jd(r),postMessage({type:t});break;case"run":{let{sessionId:o,inputIndices:i,inputs:u,outputIndices:a,options:c}=r;Kd(o,i,u,a,new Array(a.length).fill(null),c).then(p=>{p.some(h=>h[3]!=="cpu")?postMessage({type:t,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:t,out:p},Zd([...u,...p]))},p=>{postMessage({type:t,err:p})});break}case"end-profiling":Yd(r),postMessage({type:t});break;default:}}catch(o){postMessage({type:t,err:o})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'})),Bd=Re((()=>{it(),Rd(),Fl(),dd=()=>!!ae.wasm.proxy&&typeof document<"u",pd=!1,hd=!1,fd=!1,gd=new Map,_d=(e,t)=>{let n=gd.get(e);n?n.push(t):gd.set(e,[t])},yd=()=>{if(pd||!hd||fd||!cd)throw new Error("worker not ready")},wd=e=>{switch(e.data.type){case"init-wasm":pd=!1,e.data.err?(fd=!0,md[1](e.data.err)):(hd=!0,md[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=gd.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}}},bd=typeof document<"u"?document?.currentScript?.src:void 0,vd=async()=>{if(!hd){if(pd)throw new Error("multiple calls to 'initWasm()' detected.");if(fd)throw new Error("previous call to 'initWasm()' failed.");if(pd=!0,dd())return void 0===ae.wasm.wasmPaths&&bd&&0!==bd.indexOf("blob:")&&(ae.wasm.wasmPaths=bd.substr(0,+bd.lastIndexOf("/")+1)),new Promise(((e,t)=>{cd?.terminate();let n=URL.createObjectURL(new Blob([Pd()],{type:"text/javascript"}));(cd=new Worker(n,{name:"ort-wasm-proxy-worker"})).onerror=e=>t(e),cd.onmessage=wd,URL.revokeObjectURL(n),md=[e,t];let r={type:"init-wasm",in:ae};cd.postMessage(r)}));try{await At(ae.wasm),await Zu(ae),hd=!0}catch(e){throw fd=!0,e}finally{pd=!1}}},$d=async e=>{if(dd())return yd(),new Promise(((t,n)=>{_d("init-ep",[t,n]);let r={type:"init-ep",in:{epName:e,env:ae}};cd.postMessage(r)}));await ed(ae,e)},xd=async e=>dd()?(yd(),new Promise(((t,n)=>{_d("copy-from",[t,n]);let r={type:"copy-from",in:{buffer:e}};cd.postMessage(r,[e.buffer])}))):rd(e),kd=async(e,t)=>{if(dd()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return yd(),new Promise(((n,r)=>{_d("create",[n,r]);let a={type:"create",in:{model:e,options:{...t}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),cd.postMessage(a,i)}))}return ad(e,t)},Sd=async e=>{if(dd())return yd(),new Promise(((t,n)=>{_d("release",[t,n]);let r={type:"release",in:e};cd.postMessage(r)}));id(e)},Ed=async(e,t,n,r,a,i)=>{if(dd()){if(n.some((e=>"cpu"!==e[3])))throw new Error("input tensor on GPU is not supported for proxy.");if(a.some((e=>e)))throw new Error("pre-allocated output tensor is not supported for proxy.");return yd(),new Promise(((a,s)=>{_d("run",[a,s]);let o=n,l={type:"run",in:{sessionId:e,inputIndices:t,inputs:o,outputIndices:r,options:i}};cd.postMessage(l,ud(o))}))}return od(e,t,n,r,a,i)},Cd=async e=>{if(dd())return yd(),new Promise(((t,n)=>{_d("end-profiling",[t,n]);let r={type:"end-profiling",in:e};cd.postMessage(r)}));ld(e)}})),Dd=Re((()=>{it(),Bd(),Hl(),ql(),Ad=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},Id=e=>{switch(e[3]){case"cpu":return new we(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!Gt(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:n,download:r,dispose:a}=e[2];return we.fromGpuBuffer(n,{dataType:t,dims:e[1],download:r,dispose:a})}default:throw new Error(`invalid data location: ${e[3]}`)}},Td=class{async fetchModelAndCopyToWasmMemory(e){return xd(await qt(e))}async loadModel(e,t){let n;$e(),n="string"==typeof e?typeof process<"u"&&process.versions&&process.versions.node?await qt(e):await this.fetchModelAndCopyToWasmMemory(e):e,[this.sessionId,this.inputNames,this.outputNames]=await kd(n,t),xe()}async dispose(){return Sd(this.sessionId)}async run(e,t,n){$e();let r=[],a=[];Object.entries(e).forEach((e=>{let t=e[0],n=e[1],i=this.inputNames.indexOf(t);if(-1===i)throw new Error(`invalid input '${t}'`);r.push(n),a.push(i)}));let i=[],s=[];Object.entries(t).forEach((e=>{let t=e[0],n=e[1],r=this.outputNames.indexOf(t);if(-1===r)throw new Error(`invalid output '${t}'`);i.push(n),s.push(r)}));let o=r.map(((e,t)=>Ad(e,(()=>`input "${this.inputNames[a[t]]}"`)))),l=i.map(((e,t)=>e?Ad(e,(()=>`output "${this.outputNames[s[t]]}"`)):null)),u=await Ed(this.sessionId,a,o,s,l,n),d={};for(let e=0;e<u.length;e++)d[this.outputNames[s[e]]]=i[e]??Id(u[e]);return xe(),d}startProfiling(){}endProfiling(){Cd(this.sessionId)}}})),Nd=Re((()=>{it(),Bd(),Dd(),zd=()=>{if(("number"!=typeof ae.wasm.initTimeout||ae.wasm.initTimeout<0)&&(ae.wasm.initTimeout=0),"boolean"!=typeof ae.wasm.simd&&(ae.wasm.simd=!0),"boolean"!=typeof ae.wasm.proxy&&(ae.wasm.proxy=!1),"boolean"!=typeof ae.wasm.trace&&(ae.wasm.trace=!1),"number"!=typeof ae.wasm.numThreads||!Number.isInteger(ae.wasm.numThreads)||ae.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(ae.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;ae.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Od=class{async init(e){zd(),await vd(),await $d(e)}async createInferenceSessionHandler(e,t){let n=new Td;return await n.loadModel(e,t),Promise.resolve(n)}}})),Ud={};Be(Ud,{wasmBackend:()=>Wd});var Wd,Fd=Re((()=>{Nd(),Wd=new Od}));it(),it(),it();var Ld=at;{let e=(Fd(),De(Ud)).wasmBackend;J("webgpu",e,5),J("webnn",e,5),J("cpu",e,10),J("wasm",e,10)}Object.defineProperty(ae.versions,"web",{value:"1.18.0",enumerable:!0}),new Map;let Vd="warning";const Gd={wasm:{},webgl:{},webgpu:{},versions:{common:"1.18.0"},set logLevel(e){if(void 0!==e){if("string"!=typeof e||-1===["verbose","info","warning","error","fatal"].indexOf(e))throw new Error(`Unsupported logging level: ${e}`);Vd=e}},get logLevel(){return Vd}};Object.defineProperty(Gd,"logLevel",{enumerable:!0});const Hd=(e,t)=>{if(void 0===e)throw new Error("Image buffer must be defined");if(void 0===t.height||void 0===t.width)throw new Error("Image height and width must be defined");if("NHWC"===t.tensorLayout)throw new Error("NHWC Tensor layout is not supported yet");const{height:n,width:r}=t,a=t.norm??{mean:255,bias:0};let i,s;i="number"==typeof a.mean?[a.mean,a.mean,a.mean,a.mean]:[a.mean[0],a.mean[1],a.mean[2],a.mean[3]??255],s="number"==typeof a.bias?[a.bias,a.bias,a.bias,a.bias]:[a.bias[0],a.bias[1],a.bias[2],a.bias[3]??0];const o=void 0!==t.format?t.format:"RGBA",l=void 0!==t.tensorFormat&&void 0!==t.tensorFormat?t.tensorFormat:"RGB",u=n*r,d="RGBA"===l?new Float32Array(4*u):new Float32Array(3*u);let c=4,p=0,h=1,f=2,m=3,g=0,_=u,y=2*u,w=-1;"RGB"===o&&(c=3,p=0,h=1,f=2,m=-1),"RGBA"===l?w=3*u:"RBG"===l?(g=0,y=u,_=2*u):"BGR"===l&&(y=0,_=u,g=2*u);for(let t=0;t<u;t++,p+=c,f+=c,h+=c,m+=c)d[g++]=(e[p]+s[0])/i[0],d[_++]=(e[h]+s[1])/i[1],d[y++]=(e[f]+s[2])/i[2],-1!==w&&-1!==m&&(d[w++]=(e[m]+s[3])/i[3]);return new Yd("float32",d,"RGBA"===l?[1,4,n,r]:[1,3,n,r])},qd=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),jd=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let Kd=!1;class Yd{constructor(e,t,n){let r,a;if((()=>{if(!Kd){Kd=!0;const e="undefined"!=typeof BigInt64Array&&BigInt64Array.from,t="undefined"!=typeof BigUint64Array&&BigUint64Array.from,n="undefined"!=typeof Float16Array&&Float16Array.from;e&&(qd.set("int64",BigInt64Array),jd.set(BigInt64Array,"int64")),t&&(qd.set("uint64",BigUint64Array),jd.set(BigUint64Array,"uint64")),n?(qd.set("float16",Float16Array),jd.set(Float16Array,"float16")):qd.set("float16",Uint16Array)}})(),"object"==typeof e&&"location"in e)switch(this.dataLocation=e.location,r=e.type,a=e.dims,e.location){case"cpu-pinned":{const t=qd.get(r);if(!t)throw new TypeError(`unsupported type "${r}" to create tensor from pinned buffer`);if(!(e.data instanceof t))throw new TypeError(`buffer should be of type ${t.name}`);this.cpuData=e.data;break}case"texture":if("float32"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break;case"gpu-buffer":if("float32"!==r&&"float16"!==r&&"int32"!==r&&"int64"!==r&&"uint32"!==r&&"uint8"!==r&&"bool"!==r)throw new TypeError(`unsupported type "${r}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break;default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let i,s;if("string"==typeof e)if(r=e,s=n,"string"===e){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");i=t}else{const n=qd.get(e);if(void 0===n)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(t)){if("float16"===e&&n===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");i="uint64"===e||"int64"===e?n.from(t,BigInt):n.from(t)}else{if(!(t instanceof n))throw new TypeError(`A ${r} tensor's data must be type of ${n}`);i=t}}else if(s=t,Array.isArray(e)){if(0===e.length)throw new TypeError("Tensor type cannot be inferred from an empty array.");const t=typeof e[0];if("string"===t)r="string",i=e;else{if("boolean"!==t)throw new TypeError(`Invalid element type of data array: ${t}.`);r="bool",i=Uint8Array.from(e)}}else{const t=jd.get(e.constructor);if(void 0===t)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);r=t,i=e}if(void 0===s)s=[i.length];else if(!Array.isArray(s))throw new TypeError("A tensor's dims must be a number array");a=s,this.cpuData=i,this.dataLocation="cpu"}const i=(e=>{let t=1;for(let n=0;n<e.length;n++){const r=e[n];if("number"!=typeof r||!Number.isSafeInteger(r))throw new TypeError(`dims[${n}] must be an integer, got: ${r}`);if(r<0)throw new RangeError(`dims[${n}] must be a non-negative integer, got: ${r}`);t*=r}return t})(a);if(this.cpuData&&i!==this.cpuData.length)throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=r,this.dims=a,this.size=i}static async fromImage(e,t){return(async(e,t)=>{const n="undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement,r="undefined"!=typeof ImageData&&e instanceof ImageData,a="undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap,i="string"==typeof e;let s,o=t??{};const l=()=>{if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},u=e=>e instanceof HTMLCanvasElement||e instanceof OffscreenCanvas?e.getContext("2d"):null;if(n){const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null==r)throw new Error("Can not access image data");{let n=e.height,a=e.width;if(void 0!==t&&void 0!==t.resizedHeight&&void 0!==t.resizedWidth&&(n=t.resizedHeight,a=t.resizedWidth),void 0!==t){if(o=t,void 0!==t.tensorFormat)throw new Error("Image input config format must be RGBA for HTMLImageElement");o.tensorFormat="RGBA",o.height=n,o.width=a}else o.tensorFormat="RGBA",o.height=n,o.width=a;r.drawImage(e,0,0),s=r.getImageData(0,0,a,n).data}}else{if(!r){if(a){if(void 0===t)throw new Error("Please provide image config with format for Imagebitmap");const n=l();n.width=e.width,n.height=e.height;const r=u(n);if(null!=r){const t=e.height,n=e.width;return r.drawImage(e,0,0,n,t),s=r.getImageData(0,0,n,t).data,o.height=t,o.width=n,Hd(s,o)}throw new Error("Can not access image data")}if(i)return new Promise(((t,n)=>{const r=l(),a=u(r);if(!e||!a)return n();const i=new Image;i.crossOrigin="Anonymous",i.src=e,i.onload=()=>{r.width=i.width,r.height=i.height,a.drawImage(i,0,0,r.width,r.height);const e=a.getImageData(0,0,r.width,r.height);o.height=r.height,o.width=r.width,t(Hd(e.data,o))}}));throw new Error("Input data provided is not supported - aborted tensor creation")}{let n,r;if(void 0!==t&&void 0!==t.resizedWidth&&void 0!==t.resizedHeight?(n=t.resizedHeight,r=t.resizedWidth):(n=e.height,r=e.width),void 0!==t&&(o=t),o.format="RGBA",o.height=n,o.width=r,void 0!==t){const t=l();t.width=r,t.height=n;const a=u(t);if(null==a)throw new Error("Can not access image data");a.putImageData(e,0,0),s=a.getImageData(0,0,r,n).data}else s=e.data}}if(void 0!==s)return Hd(s,o);throw new Error("Input data provided is not supported - aborted tensor creation")})(e,t)}static fromTexture(e,t){return((e,t)=>{const{width:n,height:r,download:a,dispose:i}=t;return new Yd({location:"texture",type:"float32",texture:e,dims:[1,r,n,4],download:a,dispose:i})})(e,t)}static fromGpuBuffer(e,t){return((e,t)=>{const{dataType:n,dims:r,download:a,dispose:i}=t;return new Yd({location:"gpu-buffer",type:n??"float32",gpuBuffer:e,dims:r,download:a,dispose:i})})(e,t)}static fromPinnedBuffer(e,t,n){return((e,t,n)=>new Yd({location:"cpu-pinned",type:e,data:t,dims:n??[t.length]}))(e,t,n)}toDataURL(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas"):new OffscreenCanvas(1,1);n.width=e.dims[3],n.height=e.dims[2];const r=n.getContext("2d");if(null!=r){let a,i;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],i=e.dims[3]):(a=e.dims[3],i=e.dims[2]);const s=void 0!==t?.format?t.format:"RGB",o=t?.norm;let l,u;void 0===o||void 0===o.mean?l=[255,255,255,255]:"number"==typeof o.mean?l=[o.mean,o.mean,o.mean,o.mean]:(l=[o.mean[0],o.mean[1],o.mean[2],0],void 0!==o.mean[3]&&(l[3]=o.mean[3])),void 0===o||void 0===o.bias?u=[0,0,0,0]:"number"==typeof o.bias?u=[o.bias,o.bias,o.bias,o.bias]:(u=[o.bias[0],o.bias[1],o.bias[2],0],void 0!==o.bias[3]&&(u[3]=o.bias[3]));const d=i*a;let c=0,p=d,h=2*d,f=-1;"RGBA"===s?(c=0,p=d,h=2*d,f=3*d):"RGB"===s?(c=0,p=d,h=2*d):"RBG"===s&&(c=0,h=d,p=2*d);for(let t=0;t<i;t++)for(let n=0;n<a;n++){const a=(e.data[c++]-u[0])*l[0],i=(e.data[p++]-u[1])*l[1],s=(e.data[h++]-u[2])*l[2],o=-1===f?255:(e.data[f++]-u[3])*l[3];r.fillStyle="rgba("+a+","+i+","+s+","+o+")",r.fillRect(n,t,1,1)}if("toDataURL"in n)return n.toDataURL();throw new Error("toDataURL is not supported")}throw new Error("Can not access image data")})(this,e)}toImageData(e){return((e,t)=>{const n="undefined"!=typeof document?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let r;if(null==n)throw new Error("Can not access image data");{let a,i,s;void 0!==t?.tensorLayout&&"NHWC"===t.tensorLayout?(a=e.dims[2],i=e.dims[1],s=e.dims[3]):(a=e.dims[3],i=e.dims[2],s=e.dims[1]);const o=void 0!==t&&void 0!==t.format?t.format:"RGB",l=t?.norm;let u,d;void 0===l||void 0===l.mean?u=[255,255,255,255]:"number"==typeof l.mean?u=[l.mean,l.mean,l.mean,l.mean]:(u=[l.mean[0],l.mean[1],l.mean[2],255],void 0!==l.mean[3]&&(u[3]=l.mean[3])),void 0===l||void 0===l.bias?d=[0,0,0,0]:"number"==typeof l.bias?d=[l.bias,l.bias,l.bias,l.bias]:(d=[l.bias[0],l.bias[1],l.bias[2],0],void 0!==l.bias[3]&&(d[3]=l.bias[3]));const c=i*a;if(void 0!==t&&(void 0!==t.format&&4===s&&"RGBA"!==t.format||3===s&&"RGB"!==t.format&&"BGR"!==t.format))throw new Error("Tensor format doesn't match input tensor dims");const p=4;let h=0,f=1,m=2,g=3,_=0,y=c,w=2*c,b=-1;"RGBA"===o?(_=0,y=c,w=2*c,b=3*c):"RGB"===o?(_=0,y=c,w=2*c):"RBG"===o&&(_=0,w=c,y=2*c),r=n.createImageData(a,i);for(let t=0;t<i*a;h+=p,f+=p,m+=p,g+=p,t++)r.data[h]=(e.data[_++]-d[0])*u[0],r.data[f]=(e.data[y++]-d[1])*u[1],r.data[m]=(e.data[w++]-d[2])*u[2],r.data[g]=-1===b?255:(e.data[b++]-d[3])*u[3]}return r})(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,e&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if("none"===this.dataLocation)throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return((e,t)=>{switch(e.location){case"cpu":return new Yd(e.type,e.data,t);case"cpu-pinned":return new Yd({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new Yd({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new Yd({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}})(this,e)}}const Xd=Yd,Qd=[];let Jd,Zd;m.IS_NODE_ENV?(Zd=Ae??Ie,Qd.push("cpu"),Jd=["cpu"]):(Zd=r,m.IS_WEBGPU_AVAILABLE&&Qd.push("webgpu"),Qd.push("wasm"),Jd=["wasm"]);const ec=Zd.InferenceSession;let tc=null;async function nc(e,t){tc&&await tc;const n=ec.create(e,t);return tc??=n,await n}function rc(e){return e instanceof Zd.Tensor}const ac=Zd?.env;ac?.wasm&&(ac.wasm.wasmPaths="https://cdn.jsdelivr.net/npm/onnxruntime-web@1.18.0/dist/",ac.wasm.proxy=!m.IS_WEBWORKER_ENV,"undefined"!=typeof crossOriginIsolated&&crossOriginIsolated||(ac.wasm.numThreads=1),"undefined"!=typeof navigator&&/iP(hone|od|ad).+16_4.+AppleWebKit/.test(navigator.userAgent)&&(ac.wasm.simd=!1)),b.backends.onnx=ac;const ic=async(e,t,n)=>{const r=await nc(new Uint8Array(e),t);return async e=>{const t=Object.fromEntries(Object.entries(e).map((([e,t])=>[e,t.ort_tensor]))),a=await r.run(t);return Array.isArray(n)?n.map((e=>new lc(a[e]))):new lc(a[n])}};class sc{static session_options={};static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=ic([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=ic([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=ic([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=ic([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=ic([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=ic([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}}const oc=Object.freeze({float32:Float32Array,float16:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array});class lc{get dims(){return this.ort_tensor.dims}set dims(e){this.ort_tensor.dims=e}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...e){return rc(e[0])?this.ort_tensor=e[0]:this.ort_tensor=new Xd(e[0],e[1],e[2]),new Proxy(this,{get:(e,t)=>{if("string"==typeof t){let n=Number(t);if(Number.isInteger(n))return e._getitem(n)}return e[t]},set:(e,t,n)=>e[t]=n})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[e,...t]=this.dims;if(t.length>0){const n=t.reduce(((e,t)=>e*t));for(let r=0;r<e;++r)yield this._subarray(r,n,t)}else yield*this.data}_getitem(e){const[t,...n]=this.dims;if(e=fc(e,t),n.length>0){const t=n.reduce(((e,t)=>e*t));return this._subarray(e,t,n)}return new lc(this.type,[this.data[e]],n)}indexOf(e){const t=this.data;for(let n=0;n<t.length;++n)if(t[n]==e)return n;return-1}_subarray(e,t,n){const r=e*t,a=(e+1)*t,i="subarray"in this.data?this.data.subarray(r,a):this.data.slice(r,a);return new lc(this.type,i,n)}item(){const e=this.data;if(1!==e.length)throw new Error(`a Tensor with ${e.length} elements cannot be converted to Scalar`);return e[0]}tolist(){return function(e,t){const n=e.length;if(n!==t.reduce(((e,t)=>e*t)))throw Error(`cannot reshape array of size ${n} into shape (${t})`);let r=e;for(let e=t.length-1;e>=0;e--)r=r.reduce(((n,r)=>{let a=n[n.length-1];return a.length<t[e]?a.push(r):n.push([r]),n}),[[]]);return r[0]}(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=1/(1+Math.exp(-e[t]));return this}mul(e){return this.clone().mul_(e)}mul_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]*=e;return this}div(e){return this.clone().div_(e)}div_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]/=e;return this}add(e){return this.clone().add_(e)}add_(e){const t=this.data;for(let n=0;n<t.length;++n)t[n]+=e;return this}clone(){return new lc(this.type,this.data.slice(),this.dims.slice())}slice(...e){const t=[],n=[];for(let r=0;r<this.dims.length;++r){let a=e[r];if(null==a)n.push([0,this.dims[r]]),t.push(this.dims[r]);else if("number"==typeof a)a=fc(a,this.dims[r],r),n.push([a,a+1]);else{if(!Array.isArray(a)||2!==a.length)throw new Error(`Invalid slice: ${a}`);{let[e,i]=a;if(e=null===e?0:fc(e,this.dims[r],r,!1),i=null===i?this.dims[r]:fc(i,this.dims[r],r,!1),e>i)throw new Error(`Invalid slice: ${a}`);const s=[Math.max(e,0),Math.min(i,this.dims[r])];n.push(s),t.push(s[1]-s[0])}}}const r=n.map((([e,t])=>t-e)),a=r.reduce(((e,t)=>e*t)),i=this.data,s=new i.constructor(a),o=this.stride();for(let e=0;e<a;++e){let t=0;for(let a=r.length-1,i=e;a>=0;--a){const e=r[a];t+=(i%e+n[a][0])*o[a],i=Math.floor(i/e)}s[e]=i[t]}return new lc(this.type,s,t)}permute(...e){return function(e,t){const[n,r]=function(e,t,n){const r=new Array(n.length),a=new Array(n.length);for(let e=n.length-1,i=1;e>=0;--e)a[e]=i,r[e]=t[n[e]],i*=r[e];const i=n.map(((e,t)=>a[n.indexOf(t)])),s=new e.constructor(e.length);for(let n=0;n<e.length;++n){let r=0;for(let e=t.length-1,a=n;e>=0;--e)r+=a%t[e]*i[e],a=Math.floor(a/t[e]);s[r]=e[n]}return[s,r]}(e.data,e.dims,t);return new lc(e.type,n,r)}(this,e)}transpose(...e){return this.permute(...e)}sum(e=null,t=!1){return this.norm(1,e,t)}norm(e="fro",t=null,n=!1){if("fro"===e)e=2;else if("string"==typeof e)throw Error(`Unsupported norm: ${e}`);const r=this.data;if(null===t){let t=r.reduce(((t,n)=>t+n**e),0)**(1/e);return new lc(this.type,[t],[])}t=fc(t,this.dims.length);const a=this.dims.slice();a[t]=1;const i=new r.constructor(r.length/this.dims[t]);for(let n=0;n<r.length;++n){let s=0;for(let e=this.dims.length-1,r=n,i=1;e>=0;--e){const n=this.dims[e];e!==t&&(s+=r%n*i,i*=a[e]),r=Math.floor(r/n)}i[s]+=r[n]**e}if(1!==e)for(let t=0;t<i.length;++t)i[t]=i[t]**(1/e);return n||a.splice(t,1),new lc(this.type,i,a)}normalize_(e=2,t=1){t=fc(t,this.dims.length);const n=this.norm(e,t,!0),r=this.data,a=n.data;for(let e=0;e<r.length;++e){let n=0;for(let r=this.dims.length-1,a=e,i=1;r>=0;--r){const e=this.dims[r];r!==t&&(n+=a%e*i,i*=this.dims[r]),a=Math.floor(a/e)}r[e]/=a[n]}return this}normalize(e=2,t=1){return this.clone().normalize_(e,t)}stride(){return function(e){const t=new Array(e.length);for(let n=e.length-1,r=1;n>=0;--n)t[n]=r,r*=e[n];return t}(this.dims)}squeeze(e=null){return new lc(this.type,this.data,pc(this.dims,e))}squeeze_(e=null){return this.dims=pc(this.dims,e),this}unsqueeze(e=null){return new lc(this.type,this.data,hc(this.dims,e))}unsqueeze_(e=null){return this.dims=hc(this.dims,e),this}flatten_(e=0,t=-1){t=(t+this.dims.length)%this.dims.length;let n=this.dims.slice(0,e),r=this.dims.slice(e,t+1),a=this.dims.slice(t+1);return this.dims=[...n,r.reduce(((e,t)=>e*t),1),...a],this}flatten(e=0,t=-1){return this.clone().flatten_(e,t)}view(...e){let t=-1;for(let n=0;n<e.length;++n)if(-1===e[n]){if(-1!==t)throw new Error("Only one dimension can be inferred");t=n}const n=this.data;if(-1!==t){const r=e.reduce(((e,n,r)=>r!==t?e*n:e),1);e[t]=n.length/r}return new lc(this.type,n,e)}neg_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=-e[t];return this}neg(){return this.clone().neg_()}clamp_(e,t){const n=this.data;for(let r=0;r<n.length;++r)n[r]=Math.min(Math.max(n[r],e),t);return this}clamp(e,t){return this.clone().clamp_(e,t)}round_(){const e=this.data;for(let t=0;t<e.length;++t)e[t]=Math.round(e[t]);return this}round(){return this.clone().round_()}mean(e=null,t=!1){return _c(this,e,t)}to(e){if(this.type===e)return this;if(!oc.hasOwnProperty(e))throw new Error(`Unsupported type: ${e}`);return new lc(e,oc[e].from(this.data),this.dims)}}function uc(e,[t,n],r="bilinear",a=!1){const i=e.dims.at(-3)??1,s=e.dims.at(-2),o=e.dims.at(-1);let l=function(e,[t,n,r],[a,i]){const s=i/r,o=a/n,l=new e.constructor(a*i*t),u=n*r,d=a*i;for(let c=0;c<a;++c)for(let a=0;a<i;++a){const p=c*i+a,h=(a+.5)/s-.5,f=(c+.5)/o-.5;let m=Math.floor(h),g=Math.floor(f);const _=Math.min(m+1,r-1),y=Math.min(g+1,n-1);m=Math.max(m,0),g=Math.max(g,0);const w=h-m,b=f-g,v=(1-w)*(1-b),$=w*(1-b),x=(1-w)*b,k=w*b,S=g*r,E=y*r,C=S+m,A=S+_,I=E+m,T=E+_;for(let n=0;n<t;++n){const t=n*u;l[n*d+p]=v*e[t+C]+$*e[t+A]+x*e[t+I]+k*e[t+T]}}return l}(e.data,[i,s,o],[t,n]);return new lc(e.type,l,[i,t,n])}async function dc(e,{size:t=null,mode:n="bilinear"}={}){if(4!==e.dims.length)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!t)throw new Error("`interpolate_4d` requires a `size` argument.");let r,a;if(2===t.length)r=[...e.dims.slice(0,2),...t];else if(3===t.length)r=[e.dims[0],...t];else{if(4!==t.length)throw new Error("`size` must be of length 2, 3, or 4.");r=t}if("bilinear"===n)a=await sc.bilinear_interpolate_4d;else{if("bicubic"!==n)throw new Error(`Unsupported mode: ${n}`);a=await sc.bicubic_interpolate_4d}const i=new lc("int64",new BigInt64Array(r.map(BigInt)),[r.length]);return await a({x:e,s:i})}async function cc(e,t){const n=await sc.top_k;return t=null===t?e.dims.at(-1):Math.min(t,e.dims.at(-1)),await n({x:e,k:new lc("int64",[BigInt(t)],[1])})}function pc(e,t){return e=e.slice(),null===t?e=e.filter((e=>1!==e)):"number"==typeof t?1===e[t]&&e.splice(t,1):Array.isArray(t)&&(e=e.filter(((e,n)=>1!==e||!t.includes(n)))),e}function hc(e,t){return t=fc(t,e.length+1),(e=e.slice()).splice(t,0,1),e}function fc(e,t,n=null,r=!0){if(r&&(e<-t||e>=t))throw new Error(`IndexError: index ${e} is out of bounds for dimension${null===n?"":" "+n} with size ${t}`);return e<0&&(e=(e%t+t)%t),e}function mc(e,t=0){t=fc(t,e[0].dims.length);const n=e[0].dims.slice();n[t]=e.reduce(((e,n)=>e+n.dims[t]),0);const r=n.reduce(((e,t)=>e*t),1),a=new e[0].data.constructor(r),i=e[0].type;if(0===t){let t=0;for(const n of e){const e=n.data;a.set(e,t),t+=e.length}}else{let r=0;for(let i=0;i<e.length;++i){const{data:s,dims:o}=e[i];for(let e=0;e<s.length;++e){let i=0;for(let a=o.length-1,s=e,l=1;a>=0;--a){const e=o[a];let u=s%e;a===t&&(u+=r),i+=u*l,l*=n[a],s=Math.floor(s/e)}a[i]=s[e]}r+=o[t]}}return new lc(i,a,n)}function gc(e,t=0){return mc(e.map((e=>e.unsqueeze(t))),t)}function _c(e,t=null,n=!1){const r=e.data;if(null===t){const t=r.reduce(((e,t)=>e+t),0);return new lc(e.type,[t/r.length],[])}const a=e.dims;t=fc(t,a.length);const i=a.slice();i[t]=1;const s=new r.constructor(r.length/a[t]);for(let e=0;e<r.length;++e){let n=0;for(let r=a.length-1,s=e,o=1;r>=0;--r){const e=a[r];r!==t&&(n+=s%e*o,o*=i[r]),s=Math.floor(s/e)}s[n]+=r[e]}if(1!==a[t])for(let e=0;e<s.length;++e)s[e]=s[e]/a[t];return n||i.splice(t,1),new lc(e.type,s,i)}function yc(e,t,n,r){const a=e.reduce(((e,t)=>e*t),1);return new lc(n,new r(a).fill(t),e)}function wc(e){return yc(e,1n,"int64",BigInt64Array)}function bc(e){return yc(e.dims,0n,"int64",BigInt64Array)}class vc{constructor(e=(e,t)=>e>t,t=1/0){this._heap=[],this._comparator=e,this._maxSize=t}get size(){return this._heap.length}isEmpty(){return 0===this.size}peek(){return this._heap[0]}push(...e){return this.extend(e)}extend(e){for(const t of e)if(this.size<this._maxSize)this._heap.push(t),this._siftUp();else{const e=this._smallest();this._comparator(t,this._heap[e])&&(this._heap[e]=t,this._siftUpFrom(e))}return this.size}pop(){const e=this.peek(),t=this.size-1;return t>0&&this._swap(0,t),this._heap.pop(),this._siftDown(),e}replace(e){const t=this.peek();return this._heap[0]=e,this._siftDown(),t}_parent(e){return(e+1>>>1)-1}_left(e){return 1+(e<<1)}_right(e){return e+1<<1}_greater(e,t){return this._comparator(this._heap[e],this._heap[t])}_swap(e,t){const n=this._heap[e];this._heap[e]=this._heap[t],this._heap[t]=n}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(e){for(;e>0&&this._greater(e,this._parent(e));)this._swap(e,this._parent(e)),e=this._parent(e)}_siftDown(){let e=0;for(;this._left(e)<this.size&&this._greater(this._left(e),e)||this._right(e)<this.size&&this._greater(this._right(e),e);){const t=this._right(e)<this.size&&this._greater(this._right(e),this._left(e))?this._right(e):this._left(e);this._swap(e,t),e=t}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class $c{constructor(){this.root=xc.default()}extend(e){for(let t of e)this.push(t)}push(e){let t=this.root;for(let n of e){let e=t.children.get(n);void 0===e&&(e=xc.default(),t.children.set(n,e)),t=e}t.isLeaf=!0}*commonPrefixSearch(e){let t=this.root,n="";for(let r=0;r<e.length&&void 0!==t;++r){const a=e[r];n+=a,t=t.children.get(a),void 0!==t&&t.isLeaf&&(yield n)}}}class xc{constructor(e,t){this.isLeaf=e,this.children=t}static default(){return new xc(!1,new Map)}}class kc{constructor(e,t,n){this.sentence=e,this.len=e.length,this.bosTokenId=t,this.eosTokenId=n,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},(()=>[])),this.endNodes=Array.from({length:this.len+1},(()=>[]));const r=new Sc(this.bosTokenId,0,0,0,0),a=new Sc(this.eosTokenId,1,this.len,0,0);this.nodes.push(r.clone()),this.nodes.push(a.clone()),this.beginNodes[this.len].push(a),this.endNodes[0].push(r)}insert(e,t,n,r){const a=this.nodes.length,i=new Sc(r,a,e,t,n);this.beginNodes[e].push(i),this.endNodes[e+t].push(i),this.nodes.push(i)}viterbi(){const e=this.len;let t=0;for(;t<=e;){if(0==this.beginNodes[t].length)return[];for(let e of this.beginNodes[t]){e.prev=null;let n=0,r=null;for(let a of this.endNodes[t]){const t=a.backtraceScore+e.score;(null===r||t>n)&&(r=a.clone(),n=t)}if(null===r)return[];e.prev=r,e.backtraceScore=n}++t}const n=[],r=this.beginNodes[e][0].prev;if(null===r)return[];let a=r.clone();for(;null!==a.prev;){n.push(a.clone());const e=a.clone();a=e.prev.clone()}return n.reverse(),n}piece(e){return this.sentence.slice(e.pos,e.pos+e.length)}tokens(){return this.viterbi().map((e=>this.piece(e)))}tokenIds(){return this.viterbi().map((e=>e.tokenId))}}class Sc{constructor(e,t,n,r,a){this.tokenId=e,this.nodeId=t,this.pos=n,this.length=r,this.score=a,this.prev=null,this.backtraceScore=0}clone(){const e=new Sc(this.tokenId,this.nodeId,this.pos,this.length,this.score);return e.prev=this.prev,e.backtraceScore=this.backtraceScore,e}}var Ec=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",BooleanLiteral:"BooleanLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Set:"Set",If:"If",For:"For",In:"In",Is:"Is",NotIn:"NotIn",Else:"Else",EndIf:"EndIf",ElseIf:"ElseIf",EndFor:"EndFor",And:"And",Or:"Or",Not:"UnaryOperator"}),Cc=Object.freeze({set:Ec.Set,for:Ec.For,in:Ec.In,is:Ec.Is,if:Ec.If,else:Ec.Else,endif:Ec.EndIf,elif:Ec.ElseIf,endfor:Ec.EndFor,and:Ec.And,or:Ec.Or,not:Ec.Not,"not in":Ec.NotIn,true:Ec.BooleanLiteral,false:Ec.BooleanLiteral}),Ac=class{constructor(e,t){this.value=e,this.type=t}};function Ic(e){return/\w/.test(e)}function Tc(e){return/[0-9]/.test(e)}var zc=[["{%",Ec.OpenStatement],["%}",Ec.CloseStatement],["{{",Ec.OpenExpression],["}}",Ec.CloseExpression],["(",Ec.OpenParen],[")",Ec.CloseParen],["{",Ec.OpenCurlyBracket],["}",Ec.CloseCurlyBracket],["[",Ec.OpenSquareBracket],["]",Ec.CloseSquareBracket],[",",Ec.Comma],[".",Ec.Dot],[":",Ec.Colon],["|",Ec.Pipe],["<=",Ec.ComparisonBinaryOperator],[">=",Ec.ComparisonBinaryOperator],["==",Ec.ComparisonBinaryOperator],["!=",Ec.ComparisonBinaryOperator],["<",Ec.ComparisonBinaryOperator],[">",Ec.ComparisonBinaryOperator],["+",Ec.AdditiveBinaryOperator],["-",Ec.AdditiveBinaryOperator],["*",Ec.MultiplicativeBinaryOperator],["/",Ec.MultiplicativeBinaryOperator],["%",Ec.MultiplicativeBinaryOperator],["=",Ec.Equals]],Oc=new Map([["n","\n"],["t","\t"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]),Mc=class{type="Statement"},Rc=class extends Mc{constructor(e){super(),this.body=e}type="Program"},Pc=class extends Mc{constructor(e,t,n){super(),this.test=e,this.body=t,this.alternate=n}type="If"},Bc=class extends Mc{constructor(e,t,n){super(),this.loopvar=e,this.iterable=t,this.body=n}type="For"},Dc=class extends Mc{constructor(e,t){super(),this.assignee=e,this.value=t}type="Set"},Nc=class extends Mc{type="Expression"},Uc=class extends Nc{constructor(e,t,n){super(),this.object=e,this.property=t,this.computed=n}type="MemberExpression"},Wc=class extends Nc{constructor(e,t){super(),this.callee=e,this.args=t}type="CallExpression"},Fc=class extends Nc{constructor(e){super(),this.value=e}type="Identifier"},Lc=class extends Nc{constructor(e){super(),this.value=e}type="Literal"},Vc=class extends Lc{type="NumericLiteral"},Gc=class extends Lc{type="StringLiteral"},Hc=class extends Lc{type="BooleanLiteral"},qc=class extends Lc{type="ArrayLiteral"},jc=class extends Lc{type="TupleLiteral"},Kc=class extends Lc{type="ObjectLiteral"},Yc=class extends Nc{constructor(e,t,n){super(),this.operator=e,this.left=t,this.right=n}type="BinaryExpression"},Xc=class extends Nc{constructor(e,t){super(),this.operand=e,this.filter=t}type="FilterExpression"},Qc=class extends Nc{constructor(e,t,n){super(),this.operand=e,this.negate=t,this.test=n}type="TestExpression"},Jc=class extends Nc{constructor(e,t){super(),this.operator=e,this.argument=t}type="UnaryExpression"},Zc=class extends Nc{constructor(e=void 0,t=void 0,n=void 0){super(),this.start=e,this.stop=t,this.step=n}type="SliceExpression"},ep=class extends Nc{constructor(e,t){super(),this.key=e,this.value=t}type="KeywordArgumentExpression"};function tp(e){const t=new Rc([]);let n=0;function r(t,r){const a=e[n++];if(!a||a.type!==t)throw new Error(`Parser Error: ${r}. ${a.type} !== ${t}.`);return a}function a(){switch(e[n].type){case Ec.Text:return new Gc(r(Ec.Text,"Expected text token").value);case Ec.OpenStatement:return function(){let t;switch(r(Ec.OpenStatement,"Expected opening statement token"),e[n].type){case Ec.Set:++n,t=o(),r(Ec.CloseStatement,"Expected closing statement token");break;case Ec.If:++n,t=l(),r(Ec.OpenStatement,"Expected {% token"),r(Ec.EndIf,"Expected endif token"),r(Ec.CloseStatement,"Expected %} token");break;case Ec.For:++n,t=function(){const e=u(!0);if(!(e instanceof Fc||e instanceof jc))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${e.type} instead`);r(Ec.In,"Expected `in` keyword following loop variable");const t=d();r(Ec.CloseStatement,"Expected closing statement token");const n=[];for(;i(Ec.OpenStatement,Ec.EndFor);)n.push(a());return new Bc(e,t,n)}(),r(Ec.OpenStatement,"Expected {% token"),r(Ec.EndFor,"Expected endfor token"),r(Ec.CloseStatement,"Expected %} token");break;default:throw new SyntaxError(`Unknown statement type: ${e[n].type}`)}return t}();case Ec.OpenExpression:return function(){r(Ec.OpenExpression,"Expected opening expression token");const e=d();return r(Ec.CloseExpression,"Expected closing expression token"),e}();default:throw new SyntaxError(`Unexpected token type: ${e[n].type}`)}}function i(...t){return n+t.length<=e.length&&t.some(((t,r)=>t!==e[n+r].type))}function s(...t){return n+t.length<=e.length&&t.every(((t,r)=>t===e[n+r].type))}function o(){const e=d();if(s(Ec.Equals)){++n;const t=o();return new Dc(e,t)}return e}function l(){const t=d();r(Ec.CloseStatement,"Expected closing statement token");const i=[],o=[];for(;e[n]?.type!==Ec.OpenStatement||e[n+1]?.type!==Ec.ElseIf&&e[n+1]?.type!==Ec.Else&&e[n+1]?.type!==Ec.EndIf;)i.push(a());if(e[n]?.type===Ec.OpenStatement&&e[n+1]?.type!==Ec.EndIf)if(++n,s(Ec.ElseIf))r(Ec.ElseIf,"Expected elseif token"),o.push(l());else for(r(Ec.Else,"Expected else token"),r(Ec.CloseStatement,"Expected closing statement token");e[n]?.type!==Ec.OpenStatement||e[n+1]?.type!==Ec.EndIf;)o.push(a());return new Pc(t,i,o)}function u(e=!1){const t=e?w:d,r=[t()],a=s(Ec.Comma);for(;a&&(++n,r.push(t()),s(Ec.Comma)););return a?new jc(r):r[0]}function d(){return function(){const e=c();if(s(Ec.If)){++n;const t=c();r(Ec.Else,"Expected else token");const a=c();return new Pc(t,[e],[a])}return e}()}function c(){let t=p();for(;s(Ec.Or);){const r=e[n];++n;const a=p();t=new Yc(r,t,a)}return t}function p(){let t=h();for(;s(Ec.And);){const r=e[n];++n;const a=h();t=new Yc(r,t,a)}return t}function h(){let t;for(;s(Ec.Not);){const r=e[n];++n;const a=h();t=new Jc(r,a)}return t??function(){let t=f();for(;s(Ec.ComparisonBinaryOperator)||s(Ec.In)||s(Ec.NotIn);){const r=e[n];++n;const a=f();t=new Yc(r,t,a)}return t}()}function f(){let t=_();for(;s(Ec.AdditiveBinaryOperator);){const r=e[n];++n;const a=_();t=new Yc(r,t,a)}return t}function m(e){let t=new Wc(e,function(){r(Ec.OpenParen,"Expected opening parenthesis for arguments list");const e=function(){const e=[];for(;!s(Ec.CloseParen);){let t=d();if(s(Ec.Equals)){if(++n,!(t instanceof Fc))throw new SyntaxError("Expected identifier for keyword argument");const e=d();t=new ep(t,e)}e.push(t),s(Ec.Comma)&&++n}return e}();return r(Ec.CloseParen,"Expected closing parenthesis for arguments list"),e}());return s(Ec.OpenParen)&&(t=m(t)),t}function g(){const e=[];let t=!1;for(;!s(Ec.CloseSquareBracket);)s(Ec.Colon)?(e.push(void 0),++n,t=!0):(e.push(d()),s(Ec.Colon)&&(++n,t=!0));if(0===e.length)throw new SyntaxError("Expected at least one argument for member/slice expression");if(t){if(e.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new Zc(...e)}return e[0]}function _(){let t=y();for(;s(Ec.MultiplicativeBinaryOperator);){const r=e[n];++n;const a=y();t=new Yc(r,t,a)}return t}function y(){let t=function(){let t=function(){const t=function(){let t=w();for(;s(Ec.Dot)||s(Ec.OpenSquareBracket);){const a=e[n];let i;++n;const s=a.type!==Ec.Dot;if(s)i=g(),r(Ec.CloseSquareBracket,"Expected closing square bracket");else if(i=w(),"Identifier"!==i.type)throw new SyntaxError("Expected identifier following dot operator");t=new Uc(t,i,s)}return t}();return s(Ec.OpenParen)?m(t):t}();for(;s(Ec.Pipe);){++n;let e=w();if(!(e instanceof Fc))throw new SyntaxError("Expected identifier for the filter");s(Ec.OpenParen)&&(e=m(e)),t=new Xc(t,e)}return t}();for(;s(Ec.Is);){++n;const e=s(Ec.Not);e&&++n;let r=w();if(r instanceof Hc&&(r=new Fc(r.value.toString())),!(r instanceof Fc))throw new SyntaxError("Expected identifier for the test");t=new Qc(t,e,r)}return t}function w(){const t=e[n];switch(t.type){case Ec.NumericLiteral:return++n,new Vc(Number(t.value));case Ec.StringLiteral:return++n,new Gc(t.value);case Ec.BooleanLiteral:return++n,new Hc("true"===t.value);case Ec.Identifier:return++n,new Fc(t.value);case Ec.OpenParen:{++n;const t=u();if(e[n].type!==Ec.CloseParen)throw new SyntaxError(`Expected closing parenthesis, got ${e[n].type} instead`);return++n,t}case Ec.OpenSquareBracket:{++n;const e=[];for(;!s(Ec.CloseSquareBracket);)e.push(d()),s(Ec.Comma)&&++n;return++n,new qc(e)}case Ec.OpenCurlyBracket:{++n;const e=new Map;for(;!s(Ec.CloseCurlyBracket);){const t=d();r(Ec.Colon,"Expected colon between key and value in object literal");const a=d();e.set(t,a),s(Ec.Comma)&&++n}return++n,new Kc(e)}default:throw new SyntaxError(`Unexpected token: ${t.type}`)}}for(;n<e.length;)t.body.push(a());return t}function np(e,t,n=1){void 0===t&&(t=e,e=0);const r=[];for(let a=e;a<t;a+=n)r.push(a);return r}function rp(e,t,n,r=1){const a=Math.sign(r);a>=0?(t=(t??=0)<0?Math.max(e.length+t,0):Math.min(t,e.length),n=(n??=e.length)<0?Math.max(e.length+n,0):Math.min(n,e.length)):(t=(t??=e.length-1)<0?Math.max(e.length+t,-1):Math.min(t,e.length-1),n=(n??=-1)<-1?Math.max(e.length+n,-1):Math.min(n,e.length-1));const i=[];for(let s=t;a*s<a*n;s+=r)i.push(e[s]);return i}function ap(e){return e.replace(/\b\w/g,(e=>e.toUpperCase()))}var ip=class{type="RuntimeValue";value;builtins=new Map;constructor(e=void 0){this.value=e}__bool__(){return new lp(!!this.value)}},sp=class extends ip{type="NumericValue"},op=class extends ip{type="StringValue";builtins=new Map([["upper",new pp((()=>new op(this.value.toUpperCase())))],["lower",new pp((()=>new op(this.value.toLowerCase())))],["strip",new pp((()=>new op(this.value.trim())))],["title",new pp((()=>new op(ap(this.value))))],["length",new sp(this.value.length)]])},lp=class extends ip{type="BooleanValue"},up=class extends ip{type="ObjectValue";__bool__(){return new lp(this.value.size>0)}builtins=new Map([["get",new pp((([e,t])=>{if(!(e instanceof op))throw new Error(`Object key must be a string: got ${e.type}`);return this.value.get(e.value)??t??new hp}))],["items",new pp((()=>new dp(Array.from(this.value.entries()).map((([e,t])=>new dp([new op(e),t]))))))]])},dp=class extends ip{type="ArrayValue";builtins=new Map([["length",new sp(this.value.length)]]);__bool__(){return new lp(this.value.length>0)}},cp=class extends dp{type="TupleValue"},pp=class extends ip{type="FunctionValue"},hp=class extends ip{type="NullValue"},fp=class extends ip{type="UndefinedValue"},mp=class{constructor(e){this.parent=e}variables=new Map([["namespace",new pp((e=>{if(0===e.length)return new up(new Map);if(1!==e.length||!(e[0]instanceof up))throw new Error("`namespace` expects either zero arguments or a single object argument");return e[0]}))]]);tests=new Map([["boolean",e=>"BooleanValue"===e.type],["callable",e=>e instanceof pp],["odd",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "odd" to type: ${e.type}`);return e.value%2!=0}],["even",e=>{if("NumericValue"!==e.type)throw new Error(`Cannot apply test "even" to type: ${e.type}`);return e.value%2==0}],["false",e=>"BooleanValue"===e.type&&!e.value],["true",e=>"BooleanValue"===e.type&&e.value],["number",e=>"NumericValue"===e.type],["integer",e=>"NumericValue"===e.type&&Number.isInteger(e.value)],["iterable",e=>e instanceof dp||e instanceof op],["lower",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toLowerCase()}],["upper",e=>{const t=e.value;return"StringValue"===e.type&&t===t.toUpperCase()}],["none",e=>"NullValue"===e.type],["defined",e=>"UndefinedValue"!==e.type],["undefined",e=>"UndefinedValue"===e.type],["equalto",(e,t)=>e.value===t.value]]);set(e,t){return this.declareVariable(e,_p(t))}declareVariable(e,t){if(this.variables.has(e))throw new SyntaxError(`Variable already declared: ${e}`);return this.variables.set(e,t),t}setVariable(e,t){return this.variables.set(e,t),t}resolve(e){if(this.variables.has(e))return this;if(this.parent)return this.parent.resolve(e);throw new Error(`Unknown variable: ${e}`)}lookupVariable(e){try{return this.resolve(e).variables.get(e)??new fp}catch{return new fp}}},gp=class{global;constructor(e){this.global=e??new mp}run(e){return this.evaluate(e,this.global)}evaluateBinaryExpression(e,t){const n=this.evaluate(e.left,t);switch(e.operator.value){case"and":return n.__bool__().value?this.evaluate(e.right,t):n;case"or":return n.__bool__().value?n:this.evaluate(e.right,t)}const r=this.evaluate(e.right,t);switch(e.operator.value){case"==":return new lp(n.value==r.value);case"!=":return new lp(n.value!=r.value)}if(n instanceof fp||r instanceof fp)throw new Error("Cannot perform operation on undefined values");if(n instanceof hp||r instanceof hp)throw new Error("Cannot perform operation on null values");if(n instanceof sp&&r instanceof sp)switch(e.operator.value){case"+":return new sp(n.value+r.value);case"-":return new sp(n.value-r.value);case"*":return new sp(n.value*r.value);case"/":return new sp(n.value/r.value);case"%":return new sp(n.value%r.value);case"<":return new lp(n.value<r.value);case">":return new lp(n.value>r.value);case">=":return new lp(n.value>=r.value);case"<=":return new lp(n.value<=r.value)}else if(n instanceof dp&&r instanceof dp){if("+"===e.operator.value)return new dp(n.value.concat(r.value))}else if(r instanceof dp){const t=void 0!==r.value.find((e=>e.value===n.value));switch(e.operator.value){case"in":return new lp(t);case"not in":return new lp(!t)}}if((n instanceof op||r instanceof op)&&"+"===e.operator.value)return new op(n.value.toString()+r.value.toString());if(n instanceof op&&r instanceof op)switch(e.operator.value){case"in":return new lp(r.value.includes(n.value));case"not in":return new lp(!r.value.includes(n.value))}if(n instanceof op&&r instanceof up)switch(e.operator.value){case"in":return new lp(r.value.has(n.value));case"not in":return new lp(!r.value.has(n.value))}throw new SyntaxError(`Unknown operator "${e.operator.value}" between ${n.type} and ${r.type}`)}evaluateFilterExpression(e,t){const n=this.evaluate(e.operand,t);if("Identifier"===e.filter.type){const t=e.filter;if(n instanceof dp)switch(t.value){case"list":return n;case"first":return n.value[0];case"last":return n.value[n.value.length-1];case"length":return new sp(n.value.length);case"reverse":return new dp(n.value.reverse());case"sort":return new dp(n.value.sort(((e,t)=>{if(e.type!==t.type)throw new Error(`Cannot compare different types: ${e.type} and ${t.type}`);switch(e.type){case"NumericValue":return e.value-t.value;case"StringValue":return e.value.localeCompare(t.value);default:throw new Error(`Cannot compare type: ${e.type}`)}})));default:throw new Error(`Unknown ArrayValue filter: ${t.value}`)}else if(n instanceof op)switch(t.value){case"length":return new sp(n.value.length);case"upper":return new op(n.value.toUpperCase());case"lower":return new op(n.value.toLowerCase());case"title":return new op(ap(n.value));case"capitalize":return new op(n.value.charAt(0).toUpperCase()+n.value.slice(1));case"trim":return new op(n.value.trim());default:throw new Error(`Unknown StringValue filter: ${t.value}`)}else{if(n instanceof sp){if("abs"===t.value)return new sp(Math.abs(n.value));throw new Error(`Unknown NumericValue filter: ${t.value}`)}if(n instanceof up)switch(t.value){case"items":return new dp(Array.from(n.value.entries()).map((([e,t])=>new dp([new op(e),t]))));case"length":return new sp(n.value.size);default:throw new Error(`Unknown ObjectValue filter: ${t.value}`)}}throw new Error(`Cannot apply filter "${t.value}" to type: ${n.type}`)}if("CallExpression"===e.filter.type){const r=e.filter;if("Identifier"!==r.callee.type)throw new Error(`Unknown filter: ${r.callee.type}`);const a=r.callee.value;if(n instanceof dp){if("selectattr"===a){if(n.value.some((e=>!(e instanceof up))))throw new Error("`selectattr` can only be applied to array of objects");if(r.args.some((e=>"StringLiteral"!==e.type)))throw new Error("arguments of `selectattr` must be strings");const[e,a,i]=r.args.map((e=>this.evaluate(e,t)));let s;if(a){const e=t.tests.get(a.value);if(!e)throw new Error(`Unknown test: ${a.value}`);s=e}else s=(...e)=>e[0].__bool__().value;const o=n.value.filter((t=>{const n=t.value.get(e.value);return!!n&&s(n,i)}));return new dp(o)}throw new Error(`Unknown ArrayValue filter: ${a}`)}throw new Error(`Cannot apply filter "${a}" to type: ${n.type}`)}throw new Error(`Unknown filter: ${e.filter.type}`)}evaluateTestExpression(e,t){const n=this.evaluate(e.operand,t),r=t.tests.get(e.test.value);if(!r)throw new Error(`Unknown test: ${e.test.value}`);const a=r(n);return new lp(e.negate?!a:a)}evaluateUnaryExpression(e,t){const n=this.evaluate(e.argument,t);if("not"===e.operator.value)return new lp(!n.value);throw new SyntaxError(`Unknown operator: ${e.operator.value}`)}evalProgram(e,t){return this.evaluateBlock(e.body,t)}evaluateBlock(e,t){let n="";for(const r of e){const e=this.evaluate(r,t);"NullValue"!==e.type&&"UndefinedValue"!==e.type&&(n+=e.value)}return new op(n)}evaluateIdentifier(e,t){return t.lookupVariable(e.value)}evaluateCallExpression(e,t){const n=[],r=new Map;for(const a of e.args)if("KeywordArgumentExpression"===a.type){const e=a;r.set(e.key.value,this.evaluate(e.value,t))}else n.push(this.evaluate(a,t));r.size>0&&n.push(new up(r));const a=this.evaluate(e.callee,t);if("FunctionValue"!==a.type)throw new Error(`Cannot call something that is not a function: got ${a.type}`);return a.value(n,t)}evaluateSliceExpression(e,t,n){if(!(e instanceof dp||e instanceof op))throw new Error("Slice object must be an array or string");const r=this.evaluate(t.start,n),a=this.evaluate(t.stop,n),i=this.evaluate(t.step,n);if(!(r instanceof sp||r instanceof fp))throw new Error("Slice start must be numeric or undefined");if(!(a instanceof sp||a instanceof fp))throw new Error("Slice stop must be numeric or undefined");if(!(i instanceof sp||i instanceof fp))throw new Error("Slice step must be numeric or undefined");return e instanceof dp?new dp(rp(e.value,r.value,a.value,i.value)):new op(rp(Array.from(e.value),r.value,a.value,i.value).join(""))}evaluateMemberExpression(e,t){const n=this.evaluate(e.object,t);let r,a;if(e.computed){if("SliceExpression"===e.property.type)return this.evaluateSliceExpression(n,e.property,t);r=this.evaluate(e.property,t)}else r=new op(e.property.value);if(n instanceof up){if(!(r instanceof op))throw new Error(`Cannot access property with non-string: got ${r.type}`);a=n.value.get(r.value)??n.builtins.get(r.value)}else if(n instanceof dp||n instanceof op)if(r instanceof sp)a=n.value.at(r.value),n instanceof op&&(a=new op(n.value.at(r.value)));else{if(!(r instanceof op))throw new Error(`Cannot access property with non-string/non-number: got ${r.type}`);a=n.builtins.get(r.value)}else{if(!(r instanceof op))throw new Error(`Cannot access property with non-string: got ${r.type}`);a=n.builtins.get(r.value)}return a instanceof ip?a:new fp}evaluateSet(e,t){const n=this.evaluate(e.value,t);if("Identifier"===e.assignee.type){const r=e.assignee.value;t.setVariable(r,n)}else{if("MemberExpression"!==e.assignee.type)throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(e.assignee)}`);{const r=e.assignee,a=this.evaluate(r.object,t);if(!(a instanceof up))throw new Error("Cannot assign to member of non-object");if("Identifier"!==r.property.type)throw new Error("Cannot assign to member with non-identifier property");a.value.set(r.property.value,n)}}return new hp}evaluateIf(e,t){const n=this.evaluate(e.test,t);return this.evaluateBlock(n.__bool__().value?e.body:e.alternate,t)}evaluateFor(e,t){const n=new mp(t),r=this.evaluate(e.iterable,n);if(!(r instanceof dp))throw new Error(`Expected iterable type in for loop: got ${r.type}`);let a="";for(let t=0;t<r.value.length;++t){const i=new Map([["index",new sp(t+1)],["index0",new sp(t)],["revindex",new sp(r.value.length-t)],["revindex0",new sp(r.value.length-t-1)],["first",new lp(0===t)],["last",new lp(t===r.value.length-1)],["length",new sp(r.value.length)],["previtem",t>0?r.value[t-1]:new fp],["nextitem",t<r.value.length-1?r.value[t+1]:new fp]]);n.setVariable("loop",new up(i));const s=r.value[t];if("Identifier"===e.loopvar.type)n.setVariable(e.loopvar.value,s);else if("TupleLiteral"===e.loopvar.type){const t=e.loopvar;if("ArrayValue"!==s.type)throw new Error(`Cannot unpack non-iterable type: ${s.type}`);const r=s;if(t.value.length!==r.value.length)throw new Error(`Too ${t.value.length>r.value.length?"few":"many"} items to unpack`);for(let e=0;e<t.value.length;++e){if("Identifier"!==t.value[e].type)throw new Error(`Cannot unpack non-identifier type: ${t.value[e].type}`);n.setVariable(t.value[e].value,r.value[e])}}a+=this.evaluateBlock(e.body,n).value}return new op(a)}evaluate(e,t){if(void 0===e)return new fp;switch(e.type){case"Program":return this.evalProgram(e,t);case"Set":return this.evaluateSet(e,t);case"If":return this.evaluateIf(e,t);case"For":return this.evaluateFor(e,t);case"NumericLiteral":return new sp(Number(e.value));case"StringLiteral":return new op(e.value);case"BooleanLiteral":return new lp(e.value);case"ArrayLiteral":return new dp(e.value.map((e=>this.evaluate(e,t))));case"TupleLiteral":return new cp(e.value.map((e=>this.evaluate(e,t))));case"ObjectLiteral":{const n=new Map;for(const[r,a]of e.value){const e=this.evaluate(r,t);if(!(e instanceof op))throw new Error(`Object keys must be strings: got ${e.type}`);n.set(e.value,this.evaluate(a,t))}return new up(n)}case"Identifier":return this.evaluateIdentifier(e,t);case"CallExpression":return this.evaluateCallExpression(e,t);case"MemberExpression":return this.evaluateMemberExpression(e,t);case"UnaryExpression":return this.evaluateUnaryExpression(e,t);case"BinaryExpression":return this.evaluateBinaryExpression(e,t);case"FilterExpression":return this.evaluateFilterExpression(e,t);case"TestExpression":return this.evaluateTestExpression(e,t);default:throw new SyntaxError(`Unknown node type: ${e.type}`)}}};function _p(e){switch(typeof e){case"number":return new sp(e);case"string":return new op(e);case"boolean":return new lp(e);case"object":return null===e?new hp:Array.isArray(e)?new dp(e.map(_p)):new up(new Map(Object.entries(e).map((([e,t])=>[e,_p(t)]))));case"function":return new pp(((t,n)=>_p(e(...t.map((e=>e.value)))??null)));default:throw new Error(`Cannot convert to runtime value: ${e}`)}}var yp=class{parsed;constructor(e){const t=function(e,t={}){const n=[],r=function(e,t={}){return e.endsWith("\n")&&(e=e.slice(0,-1)),e=e.replace(/{#.*?#}/gs,"{##}"),t.lstrip_blocks&&(e=e.replace(/^[ \t]*({[#%])/gm,"$1")),t.trim_blocks&&(e=e.replace(/([#%]})\n/g,"$1")),e.replace(/{##}/g,"").replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{")}(e,t);let a=0;const i=e=>{let t="";for(;e(r[a]);)if("\\"!==r[a]){if(t+=r[a++],a>=r.length)throw new SyntaxError("Unexpected end of input")}else{if(++a,a>=r.length)throw new SyntaxError("Unexpected end of input");const e=r[a++],n=Oc.get(e);if(void 0===n)throw new SyntaxError(`Unexpected escaped character: ${e}`);t+=n}return t};e:for(;a<r.length;){const e=n.at(-1)?.type;if(void 0===e||e===Ec.CloseStatement||e===Ec.CloseExpression){let e="";for(;a<r.length&&("{"!==r[a]||"%"!==r[a+1]&&"{"!==r[a+1]);)e+=r[a++];if(e.length>0){n.push(new Ac(e,Ec.Text));continue}}i((e=>/\s/.test(e)));const t=r[a];if("-"===t||"+"===t){const e=n.at(-1)?.type;if(e===Ec.Text||void 0===e)throw new SyntaxError(`Unexpected character: ${t}`);switch(e){case Ec.Identifier:case Ec.NumericLiteral:case Ec.BooleanLiteral:case Ec.StringLiteral:case Ec.CloseParen:case Ec.CloseSquareBracket:break;default:{++a;const e=i(Tc);n.push(new Ac(`${t}${e}`,e.length>0?Ec.NumericLiteral:Ec.UnaryOperator));continue}}}for(const[e,t]of zc)if(r.slice(a,a+e.length)===e){n.push(new Ac(e,t)),a+=e.length;continue e}if("'"!==t&&'"'!==t)if(Tc(t)){const e=i(Tc);n.push(new Ac(e,Ec.NumericLiteral))}else{if(!Ic(t))throw new SyntaxError(`Unexpected character: ${t}`);{const e=i(Ic),t=Object.hasOwn(Cc,e)?Cc[e]:Ec.Identifier;t===Ec.In&&n.at(-1)?.type===Ec.Not?(n.pop(),n.push(new Ac("not in",Ec.NotIn))):n.push(new Ac(e,t))}}else{++a;const e=i((e=>e!==t));n.push(new Ac(e,Ec.StringLiteral)),++a}}return n}(e,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=tp(t)}render(e){const t=new mp;t.set("false",!1),t.set("true",!0),t.set("raise_exception",(e=>{throw new Error(e)})),t.set("range",np);for(const[n,r]of Object.entries(e))t.set(n,r);return new gp(t).run(this.parsed).value}};const wp=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],bp=new Map(wp),vp=new Map([...wp.map((([e,t])=>[t,e])),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function $p(e){e=e.toLowerCase();let t=vp.get(e);if(void 0===t){if(!bp.has(e)){const t=2===e.length?bp.keys():bp.values();throw new Error(`Language "${e}" is not supported. Must be one of: ${JSON.stringify(t)}`)}t=e}return t}const xp="https://github.com/xenova/transformers.js/issues/new/choose";async function kp(e,t){const n=await Promise.all([N(e,"tokenizer.json",!0,t),N(e,"tokenizer_config.json",!0,t)]);return null!==t.legacy&&(n[1].legacy=t.legacy),n}function Sp(e,t=!0){if(void 0!==e.Regex){let t=e.Regex.replace(/\\([#&~])/g,"$1");for(const[e,n]of Mp)t=t.replaceAll(e,n);return new RegExp(t,"gu")}if(void 0!==e.String){const n=k(e.String);return new RegExp(t?n:`(${n})`,"gu")}return console.warn("Unknown pattern type:",e),null}function Ep(e){return new Map(Object.entries(e))}function Cp(e){const t=e.dims;switch(t.length){case 1:return e.tolist();case 2:if(1!==t[0])throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return e.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${t.length}.`)}}function Ap(e){return e.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function Ip(e){return e.replace(/[\u0300-\u036f]/g,"")}function Tp(e){return e>=19968&&e<=40959||e>=13312&&e<=19903||e>=131072&&e<=173791||e>=173824&&e<=177983||e>=177984&&e<=178207||e>=178208&&e<=183983||e>=63744&&e<=64255||e>=194560&&e<=195103}const zp="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",Op=new RegExp(`^[${zp}]+$`,"gu"),Mp=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"]]);class Rp{constructor(e){this.content=e.content,this.id=e.id,this.single_word=e.single_word??!1,this.lstrip=e.lstrip??!1,this.rstrip=e.rstrip??!1,this.special=e.special??!1,this.normalized=e.normalized??null}}class Pp extends ${constructor(e){super(),this.config=e,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(e,...t){switch(e.type){case"WordPiece":return new Bp(e);case"Unigram":return new Dp(e,...t);case"BPE":return new Fp(e);default:if(e.vocab)return new Lp(e,...t);throw new Error(`Unknown TokenizerModel type: ${e.type}`)}}_call(e){let t=this.encode(e);return this.fuse_unk&&(t=function(e,t,n){const r=[];let a=0;for(;a<e.length;)if(r.push(e[a]),(n.get(e[a])??t)===t)for(;a<e.length&&(n.get(e[a])??t)===t;)++a;else++a;return r}(t,this.unk_token_id,this.tokens_to_ids)),t}encode(e){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(e){return e.map((e=>this.tokens_to_ids.get(e)??this.unk_token_id))}convert_ids_to_tokens(e){return e.map((e=>this.vocab[e]??this.unk_token))}}class Bp extends Pp{constructor(e){super(e),this.tokens_to_ids=Ep(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.max_input_chars_per_word=e.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){const t=[];for(const n of e){const e=[...n];if(e.length>this.max_input_chars_per_word){t.push(this.unk_token);continue}let r=!1,a=0;const i=[];for(;a<e.length;){let t=e.length,n=null;for(;a<t;){let r=e.slice(a,t).join("");if(a>0&&(r=this.config.continuing_subword_prefix+r),this.tokens_to_ids.has(r)){n=r;break}--t}if(null===n){r=!0;break}i.push(n),a=t}r?t.push(this.unk_token):t.push(...i)}return t}}class Dp extends Pp{constructor(e,t){super(e);const n=e.vocab.length;this.vocab=new Array(n),this.scores=new Array(n);for(let t=0;t<n;++t){const n=e.vocab[t];this.vocab[t]=n[0],this.scores[t]=n[1]}this.unk_token_id=e.unk_id,this.unk_token=this.vocab[e.unk_id],this.tokens_to_ids=new Map(this.vocab.map(((e,t)=>[e,t]))),this.bosToken=" ",this.bosTokenId=this.tokens_to_ids.get(this.bosToken),this.eosToken=t.eos_token,this.eosTokenId=this.tokens_to_ids.get(this.eosToken),this.unkToken=this.vocab[this.unk_token_id],this.minScore=F(this.scores)[0],this.unkScore=this.minScore-10,this.scores[this.unk_token_id]=this.unkScore,this.trie=new $c,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(e){const t=e.sentence,n=t.length;let r=0;for(;r<n;){const n=1;let a=!1;const i=[];for(let s of this.trie.commonPrefixSearch(t.slice(r))){i.push(s);const t=this.tokens_to_ids.get(s),o=this.scores[t],l=s.length;e.insert(r,l,o,t),a||l!==n||(a=!0)}a||e.insert(r,n,this.unkScore,this.unk_token_id),r+=n}}tokenize(e){const t=new kc(e,this.bosTokenId,this.eosTokenId);return this.populateNodes(t),t.tokens()}encode(e){const t=[];for(const n of e){const e=this.tokenize(n);t.push(...e)}return t}}const Np=(()=>{const e=[...Array.from({length:"~".charCodeAt(0)-"!".charCodeAt(0)+1},((e,t)=>t+"!".charCodeAt(0))),...Array.from({length:"¬".charCodeAt(0)-"¡".charCodeAt(0)+1},((e,t)=>t+"¡".charCodeAt(0))),...Array.from({length:"ÿ".charCodeAt(0)-"®".charCodeAt(0)+1},((e,t)=>t+"®".charCodeAt(0)))],t=e.slice();let n=0;for(let r=0;r<256;++r)e.includes(r)||(e.push(r),t.push(256+n),n+=1);const r=t.map((e=>String.fromCharCode(e)));return Object.fromEntries(e.map(((e,t)=>[e,r[t]])))})(),Up=(Wp=Np,Object.fromEntries(Object.entries(Wp).map((([e,t])=>[t,e]))));var Wp;class Fp extends Pp{constructor(e){super(e),this.BPE_SPLIT_TOKEN=" ",this.tokens_to_ids=Ep(e.vocab),this.unk_token_id=this.tokens_to_ids.get(e.unk_token),this.unk_token=e.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e;this.bpe_ranks=new Map(e.merges.map(((e,t)=>[e,t]))),this.merges=e.merges.map((e=>e.split(this.BPE_SPLIT_TOKEN))),this.end_of_word_suffix=e.end_of_word_suffix,this.continuing_subword_suffix=e.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.cache=new Map}bpe(e){if(0===e.length)return[];const t=this.cache.get(e);if(void 0!==t)return t;const n=Array.from(e);this.end_of_word_suffix&&(n[n.length-1]+=this.end_of_word_suffix);let r=[];if(n.length>1){const e=new vc(((e,t)=>e.score<t.score));let t={token:n[0],bias:0,prev:null,next:null},a=t;for(let t=1;t<n.length;++t){const r={bias:t/n.length,token:n[t],prev:a,next:null};a.next=r,this._add_node(e,a),a=r}for(;!e.isEmpty();){const n=e.pop();if(n.deleted||!n.next||n.next.deleted)continue;if(n.deleted=!0,n.next.deleted=!0,n.prev){const e={...n.prev};n.prev.deleted=!0,n.prev=e,e.prev?e.prev.next=e:t=e}const r={token:n.token+n.next.token,bias:n.bias,prev:n.prev,next:n.next.next};r.prev?(r.prev.next=r,this._add_node(e,r.prev)):t=r,r.next&&(r.next.prev=r,this._add_node(e,r))}for(let e=t;null!==e;e=e.next)r.push(e.token)}else r=n;if(this.continuing_subword_suffix)for(let e=0;e<r.length-1;++e)r[e]+=this.continuing_subword_suffix;return this.cache.set(e,r),r}_add_node(e,t){const n=this.bpe_ranks.get(t.token+this.BPE_SPLIT_TOKEN+t.next.token);void 0!==n&&(t.score=n+t.bias,e.push(t))}encode(e){const t=[];for(const n of e){if(this.ignore_merges&&this.tokens_to_ids.has(n)){t.push(n);continue}const e=this.bpe(n);for(const n of e)this.tokens_to_ids.has(n)?t.push(n):this.byte_fallback?t.push(...Array.from(this.text_encoder.encode(n)).map((e=>`<0x${e.toString(16).toUpperCase().padStart(2,"0")}>`))):t.push(this.unk_token)}return t}}class Lp extends Pp{constructor(e,t){super(e),this.tokens_to_ids=Ep(t.target_lang?e.vocab[t.target_lang]:e.vocab),this.bos_token=t.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=t.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=t.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=t.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[e,t]of this.tokens_to_ids)this.vocab[t]=e}encode(e){return e}}class Vp extends ${constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"BertNormalizer":return new Zp(e);case"Precompiled":return new Sh(e);case"Sequence":return new Jp(e);case"Replace":return new Gp(e);case"NFC":return new Hp(e);case"NFKC":return new qp(e);case"NFKD":return new jp(e);case"Strip":return new Kp(e);case"StripAccents":return new Yp(e);case"Lowercase":return new Xp(e);case"Prepend":return new Qp(e);default:throw new Error(`Unknown Normalizer type: ${e.type}`)}}normalize(e){throw Error("normalize should be implemented in subclass.")}_call(e){return this.normalize(e)}}class Gp extends Vp{normalize(e){const t=Sp(this.config.pattern);return null===t?e:e.replaceAll(t,this.config.content)}}class Hp extends Vp{normalize(e){return e.normalize("NFC")}}class qp extends Vp{normalize(e){return e.normalize("NFKC")}}class jp extends Vp{normalize(e){return e.normalize("NFKD")}}class Kp extends Vp{normalize(e){return this.config.strip_left&&this.config.strip_right?e=e.trim():(this.config.strip_left&&(e=e.trimStart()),this.config.strip_right&&(e=e.trimEnd())),e}}class Yp extends Vp{normalize(e){return Ip(e)}}class Xp extends Vp{normalize(e){return e.toLowerCase()}}class Qp extends Vp{normalize(e){return this.config.prepend+e}}class Jp extends Vp{constructor(e){super(e),this.normalizers=e.normalizers.map((e=>Vp.fromConfig(e)))}normalize(e){return this.normalizers.reduce(((e,t)=>t.normalize(e)),e)}}class Zp extends Vp{_tokenize_chinese_chars(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n];Tp(r.charCodeAt(0))?(t.push(" "),t.push(r),t.push(" ")):t.push(r)}return t.join("")}stripAccents(e){return e.normalize("NFD").replace(/[\u0300-\u036f]/g,"")}_is_control(e){switch(e){case"\t":case"\n":case"\r":return!1;default:return/^\p{Cc}|\p{Cf}|\p{Co}|\p{Cs}$/u.test(e)}}_clean_text(e){const t=[];for(const n of e){const e=n.charCodeAt(0);0===e||65533===e||this._is_control(n)||(/^\s$/.test(n)?t.push(" "):t.push(n))}return t.join("")}normalize(e){return this.config.clean_text&&(e=this._clean_text(e)),this.config.handle_chinese_chars&&(e=this._tokenize_chinese_chars(e)),this.config.lowercase?(e=e.toLowerCase(),!1!==this.config.strip_accents&&(e=this.stripAccents(e))):this.config.strip_accents&&(e=this.stripAccents(e)),e}}class eh extends ${static fromConfig(e){if(null===e)return null;switch(e.type){case"BertPreTokenizer":return new th(e);case"Sequence":return new Eh(e);case"Whitespace":return new Ch(e);case"WhitespaceSplit":return new Ah(e);case"Metaspace":return new xh(e);case"ByteLevel":return new nh(e);case"Split":return new rh(e);case"Punctuation":return new ah(e);case"Digits":return new ih(e);case"Replace":return new Ih(e);default:throw new Error(`Unknown PreTokenizer type: ${e.type}`)}}pre_tokenize_text(e,t){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(e,t){return(Array.isArray(e)?e.map((e=>this.pre_tokenize_text(e,t))):this.pre_tokenize_text(e,t)).flat()}_call(e,t){return this.pre_tokenize(e,t)}}class th extends eh{constructor(e){super(),this.pattern=new RegExp(`[^\\s${zp}]+|[${zp}]`,"gu")}pre_tokenize_text(e,t){return e.trim().match(this.pattern)||[]}}class nh extends eh{constructor(e){super(),this.config=e,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=/'s|'t|'re|'ve|'m|'ll|'d| ?\p{L}+| ?\p{N}+| ?[^\s\p{L}\p{N}]+|\s+(?!\S)|\s+/gu,this.byte_encoder=Np,this.text_encoder=new TextEncoder}pre_tokenize_text(e,t){return this.add_prefix_space&&!e.startsWith(" ")&&(e=" "+e),(this.use_regex?e.match(this.pattern)||[]:[e]).map((e=>Array.from(this.text_encoder.encode(e),(e=>this.byte_encoder[e])).join("")))}}class rh extends eh{constructor(e){super(),this.config=e,this.pattern=Sp(this.config.pattern,this.config.invert)}pre_tokenize_text(e,t){return null===this.pattern?[]:this.config.invert?e.match(this.pattern)||[]:function(e,t){const n=[];let r=0;for(const a of e.matchAll(t)){const t=a[0];r<a.index&&n.push(e.slice(r,a.index)),t.length>0&&n.push(t),r=a.index+t.length}return r<e.length&&n.push(e.slice(r)),n}(e,this.pattern)}}class ah extends eh{constructor(e){super(),this.config=e,this.pattern=new RegExp(`[^${zp}]+|[${zp}]+`,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class ih extends eh{constructor(e){super(),this.config=e;const t="[^\\d]+|\\d"+(this.config.individual_digits?"":"+");this.pattern=new RegExp(t,"gu")}pre_tokenize_text(e,t){return e.match(this.pattern)||[]}}class sh extends ${constructor(e){super(),this.config=e}static fromConfig(e){if(null===e)return null;switch(e.type){case"TemplateProcessing":return new uh(e);case"ByteLevel":return new dh(e);case"RobertaProcessing":return new lh(e);case"BertProcessing":return new oh(e);case"Sequence":return new ch(e);default:throw new Error(`Unknown PostProcessor type: ${e.type}`)}}post_process(e,...t){throw Error("post_process should be implemented in subclass.")}_call(e,...t){return this.post_process(e,...t)}}class oh extends sh{constructor(e){super(e),this.cls=e.cls[0],this.sep=e.sep[0]}post_process(e,t=null,{add_special_tokens:n=!0}={}){n&&(e=E([this.cls],e,[this.sep]));let r=new Array(e.length).fill(0);if(null!==t){const a=n&&this instanceof lh?[this.sep]:[],i=n?[this.sep]:[];e=E(e,a,t,i),r=E(r,new Array(t.length+a.length+i.length).fill(1))}return{tokens:e,token_type_ids:r}}}class lh extends oh{}class uh extends sh{constructor(e){super(e),this.single=e.single,this.pair=e.pair}post_process(e,t=null,{add_special_tokens:n=!0}={}){const r=null===t?this.single:this.pair;let a=[],i=[];for(const s of r)"SpecialToken"in s?n&&(a.push(s.SpecialToken.id),i.push(s.SpecialToken.type_id)):"Sequence"in s&&("A"===s.Sequence.id?(a=E(a,e),i=E(i,new Array(e.length).fill(s.Sequence.type_id))):"B"===s.Sequence.id&&(a=E(a,t),i=E(i,new Array(t.length).fill(s.Sequence.type_id))));return{tokens:a,token_type_ids:i}}}class dh extends sh{post_process(e,t=null){return t&&(e=E(e,t)),{tokens:e}}}class ch extends sh{constructor(e){super(e),this.processors=e.processors.map((e=>sh.fromConfig(e)))}post_process(e,t=null,n={}){let r;for(const a of this.processors)if(a instanceof dh)e=a.post_process(e).tokens,t&&(t=a.post_process(t).tokens);else{const i=a.post_process(e,t,n);e=i.tokens,r=i.token_type_ids}return{tokens:e,token_type_ids:r}}}class ph extends ${constructor(e){super(),this.config=e,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=e.trim_offsets}static fromConfig(e){if(null===e)return null;switch(e.type){case"WordPiece":return new _h(e);case"Metaspace":return new kh(e);case"ByteLevel":return new yh(e);case"Replace":return new hh(e);case"ByteFallback":return new fh(e);case"Fuse":return new mh(e);case"Strip":return new gh(e);case"Sequence":return new bh(e);case"CTC":return new wh(e);case"BPEDecoder":return new vh(e);default:throw new Error(`Unknown Decoder type: ${e.type}`)}}_call(e){return this.decode(e)}decode(e){return this.decode_chain(e).join("")}decode_chain(e){throw Error("`decode_chain` should be implemented in subclass.")}}class hh extends ph{decode_chain(e){const t=Sp(this.config.pattern);return null===t?e:e.map((e=>e.replaceAll(t,this.config.content)))}}class fh extends ph{constructor(e){super(e),this.text_decoder=new TextDecoder}decode_chain(e){const t=[];let n=[];for(const r of e){let e=null;if(6===r.length&&r.startsWith("<0x")&&r.endsWith(">")){const t=parseInt(r.slice(3,5),16);isNaN(t)||(e=t)}if(null!==e)n.push(e);else{if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}t.push(r)}}if(n.length>0){const e=this.text_decoder.decode(Uint8Array.from(n));t.push(e),n=[]}return t}}class mh extends ph{decode_chain(e){return[e.join("")]}}class gh extends ph{constructor(e){super(e),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(e){return e.map((e=>{let t=0;for(let n=0;n<this.start&&e[n]===this.content;++n)t=n+1;let n=e.length;for(let t=0;t<this.stop;++t){const r=e.length-t-1;if(e[r]!==this.content)break;n=r}return e.slice(t,n)}))}}class _h extends ph{constructor(e){super(e),this.cleanup=e.cleanup}decode_chain(e){return e.map(((e,t)=>(0!==t&&(e=e.startsWith(this.config.prefix)?e.replace(this.config.prefix,""):" "+e),this.cleanup&&(e=Ap(e)),e)))}}class yh extends ph{constructor(e){super(e),this.byte_decoder=Up,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(e){const t=e.join(""),n=new Uint8Array([...t].map((e=>this.byte_decoder[e])));return this.text_decoder.decode(n)}decode_chain(e){const t=[];let n=[];for(const r of e)void 0!==this.added_tokens.find((e=>e.content===r))?(n.length>0&&(t.push(this.convert_tokens_to_string(n)),n=[]),t.push(r)):n.push(r);return n.length>0&&t.push(this.convert_tokens_to_string(n)),t}}class wh extends ph{constructor(e){super(e),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(e){if(0===e.length)return"";const t=[e[0]];for(let n=1;n<e.length;++n)e[n]!==t.at(-1)&&t.push(e[n]);let n=t.filter((e=>e!==this.pad_token)).join("");return this.cleanup&&(n=Ap(n).replaceAll(this.word_delimiter_token," ").trim()),n}decode_chain(e){return[this.convert_tokens_to_string(e)]}}class bh extends ph{constructor(e){super(e),this.decoders=e.decoders.map((e=>ph.fromConfig(e)))}decode_chain(e){return this.decoders.reduce(((e,t)=>t.decode_chain(e)),e)}}class vh extends ph{constructor(e){super(e),this.suffix=this.config.suffix}decode_chain(e){return e.map(((t,n)=>t.replaceAll(this.suffix,n===e.length-1?"":" ")))}}class $h extends ph{decode_chain(e){let t="";for(let n=1;n<e.length;n+=2)t+=e[n];return[t]}}class xh extends eh{constructor(e){super(),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement,this.strRep=e.str_rep||this.replacement,this.prepend_scheme=e.prepend_scheme??"always"}pre_tokenize_text(e,{section_index:t}={}){let n=e.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!n.startsWith(this.replacement)&&("always"===this.prepend_scheme||"first"===this.prepend_scheme&&0===t)&&(n=this.strRep+n),[n]}}class kh extends ph{constructor(e){super(e),this.addPrefixSpace=e.add_prefix_space,this.replacement=e.replacement}decode_chain(e){const t=[];for(let n=0;n<e.length;++n){let r=e[n].replaceAll(this.replacement," ");this.addPrefixSpace&&0==n&&r.startsWith(" ")&&(r=r.substring(1)),t.push(r)}return t}}class Sh extends Vp{constructor(e){super(e),this.charsmap=e.precompiled_charsmap}normalize(e){if((e=(e=e.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,"")).replace(/[\u0009\u000A\u000C\u000D\u1680\u200B\u200C\u200E\u200F\u2028\u2029\u2581\uFEFF\uFFFD]/gm," ")).includes("～")){const t=e.split("～");e=t.map((e=>e.normalize("NFKC"))).join("～")}else e=e.normalize("NFKC");return e}}class Eh extends eh{constructor(e){super(),this.tokenizers=e.pretokenizers.map((e=>eh.fromConfig(e)))}pre_tokenize_text(e,t){return this.tokenizers.reduce(((e,n)=>n.pre_tokenize(e,t)),[e])}}class Ch extends eh{constructor(e){super()}pre_tokenize_text(e,t){return e.match(/\w+|[^\w\s]+/g)||[]}}class Ah extends eh{constructor(e){super()}pre_tokenize_text(e,t){return function(e){return e.match(/\S+/g)||[]}(e)}}class Ih extends eh{constructor(e){super(),this.config=e,this.pattern=Sp(this.config.pattern),this.content=this.config.content}pre_tokenize_text(e,t){return null===this.pattern?[e]:[e.replaceAll(this.pattern,this.config.content)]}}const Th=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function zh(e,t,n,r){for(const a of Object.keys(e)){const i=t-e[a].length,s=n(a),o=new Array(i).fill(s);e[a]="right"===r?E(e[a],o):E(o,e[a])}}function Oh(e,t){for(const n of Object.keys(e))e[n].length=t}class Mh extends ${return_token_type_ids=!1;_default_chat_template="{% for message in messages %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}";padding_side="right";constructor(e,t){super(),this._tokenizer_config=t,this.normalizer=Vp.fromConfig(e.normalizer),this.pre_tokenizer=eh.fromConfig(e.pre_tokenizer),this.model=Pp.fromConfig(e.model,t),this.post_processor=sh.fromConfig(e.post_processor),this.decoder=ph.fromConfig(e.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const t of e.added_tokens){const e=new Rp(t);this.added_tokens.push(e),this.model.tokens_to_ids.set(e.content,e.id),this.model.vocab[e.id]=e.content,e.special&&(this.special_tokens.push(e.content),this.all_special_ids.push(e.id))}if(this.additional_special_tokens=t.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_regex=this.added_tokens.length>0?new RegExp(this.added_tokens.toSorted(((e,t)=>t.content.length-e.content.length)).map((e=>`${e.lstrip?"\\s*":""}(${k(e.content)})${e.rstrip?"\\s*":""}`)).join("|")):null,this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.model_max_length=t.model_max_length,this.remove_space=t.remove_space,this.clean_up_tokenization_spaces=t.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=t.do_lowercase_and_remove_accent??!1,t.padding_side&&(this.padding_side=t.padding_side),this.legacy=!1,this.chat_template=t.chat_template??null,Array.isArray(this.chat_template)){const e=Object.create(null);for(const{name:t,template:n}of this.chat_template){if("string"!=typeof t||"string"!=typeof n)throw new Error('Chat template must be a list of objects with "name" and "template" properties');e[t]=n}this.chat_template=e}this._compiled_template_cache=new Map}getToken(...e){for(const t of e){const e=this._tokenizer_config[t];if(e){if("object"==typeof e){if("AddedToken"===e.__type)return e.content;throw Error(`Unknown token: ${e}`)}return e}}return null}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main",legacy:s=null}={}){return new this(...await kp(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i,legacy:s}))}_call(e,{text_pair:t=null,add_special_tokens:n=!0,padding:r=!1,truncation:a=null,max_length:i=null,return_tensor:s=!0,return_token_type_ids:o=null}={}){const l=Array.isArray(e);let u;if(l){if(0===e.length)throw Error("text array must be non-empty");if(null!==t){if(!Array.isArray(t))throw Error("text_pair must also be an array");if(e.length!==t.length)throw Error("text and text_pair must have the same length");u=e.map(((e,r)=>this._encode_plus(e,{text_pair:t[r],add_special_tokens:n,return_token_type_ids:o})))}else u=e.map((e=>this._encode_plus(e,{add_special_tokens:n,return_token_type_ids:o})))}else{if(null==e)throw Error("text may not be null or undefined");if(Array.isArray(t))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");u=[this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:o})]}if(null===i?i="max_length"===r?this.model_max_length:L(u.map((e=>e.input_ids.length)))[0]:a||console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=true` to explicitly truncate examples to max length."),i=Math.min(i,this.model_max_length??1/0),r||a)for(let e=0;e<u.length;++e)u[e].input_ids.length!==i&&(u[e].input_ids.length>i?a&&Oh(u[e],i):r&&zh(u[e],i,(e=>"input_ids"===e?this.pad_token_id:0),this.padding_side));const d={};if(s){if((!r||!a)&&u.some((e=>{for(const t of Object.keys(e))if(e[t].length!==u[0][t]?.length)return!0;return!1})))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const e=[u.length,u[0].input_ids.length];for(const t of Object.keys(u[0]))d[t]=new lc("int64",BigInt64Array.from(u.flatMap((e=>e[t])).map(BigInt)),e)}else{for(const e of Object.keys(u[0]))d[e]=u.map((t=>t[e]));if(!l)for(const e of Object.keys(d))d[e]=d[e][0]}return d}_encode_text(e){if(null===e)return null;const t=(this.added_tokens_regex?e.split(this.added_tokens_regex).filter((e=>e)):[e]).map(((e,t)=>{if(void 0!==this.added_tokens.find((t=>t.content===e)))return e;{if(!0===this.remove_space&&(e=e.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(e=function(e){return Ip(e.toLowerCase())}(e)),null!==this.normalizer&&(e=this.normalizer(e)),0===e.length)return[];const n=null!==this.pre_tokenizer?this.pre_tokenizer(e,{section_index:t}):[e];return this.model(n)}})).flat();return t}_encode_plus(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){const{tokens:a,token_type_ids:i}=this._tokenize_helper(e,{pair:t,add_special_tokens:n}),s=this.model.convert_tokens_to_ids(a),o={input_ids:s,attention_mask:new Array(s.length).fill(1)};return(r??this.return_token_type_ids)&&i&&(o.token_type_ids=i),o}_tokenize_helper(e,{pair:t=null,add_special_tokens:n=!1}={}){const r=this._encode_text(e),a=this._encode_text(t);return this.post_processor?this.post_processor(r,a,{add_special_tokens:n}):{tokens:E(r??[],a??[])}}tokenize(e,{pair:t=null,add_special_tokens:n=!1}={}){return this._tokenize_helper(e,{pair:t,add_special_tokens:n}).tokens}encode(e,{text_pair:t=null,add_special_tokens:n=!0,return_token_type_ids:r=null}={}){return this._encode_plus(e,{text_pair:t,add_special_tokens:n,return_token_type_ids:r}).input_ids}batch_decode(e,t={}){return e instanceof lc&&(e=e.tolist()),e.map((e=>this.decode(e,t)))}decode(e,t={}){if(e instanceof lc&&(e=Cp(e)),!Array.isArray(e)||0===e.length||(n=e[0],!Number.isInteger(n)&&"bigint"!=typeof n))throw Error("token_ids must be a non-empty array of integers.");var n;return this.decode_single(e,t)}decode_single(e,{skip_special_tokens:t=!1,clean_up_tokenization_spaces:n=null}){let r=this.model.convert_ids_to_tokens(e);t&&(r=r.filter((e=>!this.special_tokens.includes(e))));let a=this.decoder?this.decoder(r):r.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(a=a.replaceAll(this.decoder.end_of_word_suffix," "),t&&(a=a.trim())),(n??this.clean_up_tokenization_spaces)&&(a=Ap(a)),a}get default_chat_template(){return this._warned_about_chat_template||(console.warn("No chat template is defined for this tokenizer - using a default chat template that implements the ChatML format. If the default is not appropriate for your model, please set `tokenizer.chat_template` to an appropriate template. See https://huggingface.co/docs/transformers/main/chat_templating for more information."),this._warned_about_chat_template=!0),this._default_chat_template}apply_chat_template(e,{chat_template:t=null,add_generation_prompt:n=!1,tokenize:r=!0,padding:a=!1,truncation:i=!1,max_length:s=null,return_tensor:o=!0,return_dict:l=!1,tokenizer_kwargs:u={},...d}={}){if(this.chat_template&&"object"==typeof this.chat_template||null===this.chat_template&&this.default_chat_template&&"object"==typeof this.default_chat_template){const e=this.chat_template??this.default_chat_template;if(null!==t&&Object.hasOwn(e,t))t=e[t];else if(null===t&&"default"in e)t=e.default;else if(null===t)throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(e).sort()}.`)}else t??=this.chat_template??this.default_chat_template;if("string"!=typeof t)throw Error("chat_template must be a string, but got "+typeof t);let c=this._compiled_template_cache.get(t);void 0===c&&(c=new yp(t),this._compiled_template_cache.set(t,c));const p=Object.create(null);for(const e of Th){const t=this.getToken(e);t&&(p[e]=t)}const h=c.render({messages:e,add_generation_prompt:n,...p,...d});if(r){const e=this._call(h,{add_special_tokens:!1,padding:a,truncation:i,max_length:s,return_tensor:o,...u});return l?e:e.input_ids}return h}}class Rh extends Mh{return_token_type_ids=!0}class Ph extends Mh{return_token_type_ids=!0}class Bh extends Mh{return_token_type_ids=!0}class Dh extends Mh{return_token_type_ids=!0}class Nh extends Mh{return_token_type_ids=!0}class Uh extends Mh{return_token_type_ids=!0}class Wh extends Mh{return_token_type_ids=!0}class Fh extends Mh{return_token_type_ids=!0}class Lh extends Mh{return_token_type_ids=!0}class Vh extends Mh{}class Gh extends Mh{}class Hh extends Mh{return_token_type_ids=!0;constructor(e,t){super(e,t),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class qh extends Mh{return_token_type_ids=!0}class jh extends Mh{}class Kh extends Mh{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}'}class Yh extends Mh{}class Xh extends Mh{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return pf(this,e,t,n)}}class Qh extends Xh{}class Jh extends Mh{}class Zh extends Kh{constructor(e,t){const n=".,!?…。，、।۔،",r=e.pre_tokenizer?.pretokenizers[0]?.pattern;r&&r.Regex===` ?[^(\\s|[${n}])]+`&&(r.Regex=` ?[^\\s${n}]+`),super(e,t)}}const ef="▁";class tf extends Mh{_default_chat_template="{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}{% set loop_messages = messages %}{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\n' + system_message + '\n<</SYS>>\n\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' %}{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\n' + content.strip() + '\n<</SYS>>\n\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content.strip() + ' ' + eos_token }}{% endif %}{% endfor %}";DEFAULT_SYSTEM_PROMPT="You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.";padding_side="left";constructor(e,t){super(e,t),this.use_default_system_prompt=t.use_default_system_prompt??!1,this.legacy=t.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new xh({replacement:ef,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(e){if(null===e)return null;if(this.legacy||0===e.length)return super._encode_text(e);let t=super._encode_text(ef+e.replaceAll(ef," "));return t.length>1&&t[0]===ef&&this.special_tokens.includes(t[1])&&(t=t.slice(1)),t}get default_chat_template(){return super.default_chat_template.replaceAll("USE_DEFAULT_PROMPT",this.use_default_system_prompt?"true":"false").replaceAll("DEFAULT_SYSTEM_MESSAGE",this.DEFAULT_SYSTEM_PROMPT.replaceAll("\n","\\n").replaceAll("'","\\'"))}}class nf extends tf{}class rf extends Mh{}class af extends Mh{}class sf extends Mh{}class of extends Mh{}class lf extends Mh{}class uf extends Mh{}class df extends Mh{_default_chat_template="{% if messages[0]['role'] == 'system' %}{{ raise_exception('System role not supported') }}{% endif %}{% for message in messages %}{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}"}class cf extends Mh{}function pf(e,t,n,r){if(!("language_codes"in e)||!Array.isArray(e.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in e&&e.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in e)||"function"!=typeof e.lang_to_token)throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const a=r.src_lang,i=r.tgt_lang;if(!e.language_codes.includes(i))throw new Error(`Target language code "${i}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);if(void 0!==a){if(!e.language_codes.includes(a))throw new Error(`Source language code "${a}" is not valid. Must be one of: {${e.language_codes.join(", ")}}`);for(const t of e.post_processor.config.single)if("SpecialToken"in t&&e.languageRegex.test(t.SpecialToken.id)){t.SpecialToken.id=e.lang_to_token(a);break}}return r.forced_bos_token_id=e.model.convert_tokens_to_ids([e.lang_to_token(i)])[0],e._call(t,n)}class hf extends Mh{constructor(e,t){super(e,t),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))),this.lang_to_token=e=>e}_build_translation_inputs(e,t,n){return pf(this,e,t,n)}}class ff extends Mh{constructor(e,t){super(e,t),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter((e=>this.languageRegex.test(e))).map((e=>e.slice(2,-2))),this.lang_to_token=e=>`__${e}__`}_build_translation_inputs(e,t,n){return pf(this,e,t,n)}}class mf extends Mh{_default_chat_template='{% for message in messages %}" "{{ message.content }}{{ eos_token }}" "{% endfor %}';get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(e,{return_timestamps:t=!1,return_language:n=!1,time_precision:r=null,force_full_sequences:a=!0}={}){if(null===r)throw Error("Must specify time_precision");let i=null;const s="word"===t;function o(){return{language:i,timestamp:[null,null],text:""}}const l=[];let u=o(),d=0;const c=this.timestamp_begin;let p=[],h=[],f=!1,m=null;const g=new Set(this.all_special_ids);for(const n of e){const e=n.tokens,a=s?n.token_timestamps:null;let _=null,y=c;if("stride"in n){const[t,a,i]=n.stride;if(d-=a,m=t-i,a&&(y=a/r+c),i)for(let t=e.length-1;t>=0;--t){const n=Number(e[t]);if(n>=c){if(null!==_&&(n-c)*r<m)break;_=n}}}let w=[],b=[];for(let n=0;n<e.length;++n){const m=Number(e[n]);if(g.has(m)){const e=this.decode([m]),n=bp.get(e.slice(2,-2));if(void 0!==n){if(null!==i&&n!==i&&!t){p.push(w);const e=this.findLongestCommonSequence(p)[0],t=this.decode(e);u.text=t,l.push(u),p=[],w=[],u=o()}i=u.language=n}}else if(m>=c){const e=K((m-c)*r+d,2);if(null!==_&&m>=_)f=!0;else if(f||p.length>0&&m<y)f=!1;else if(null===u.timestamp[0])u.timestamp[0]=e;else if(e===u.timestamp[0]);else{u.timestamp[1]=e,p.push(w),s&&h.push(b);const[t,n]=this.findLongestCommonSequence(p,h),r=this.decode(t);u.text=r,s&&(u.words=this.collateWordTimestamps(t,n,i)),l.push(u),p=[],w=[],h=[],b=[],u=o()}}else if(w.push(m),s){let e,t=K(a[n]+d,2);if(n+1<a.length){e=K(a[n+1]+d,2);const i=this.decode([m]);Op.test(i)&&(e=K(Math.min(t+r,e),2))}else e=null;b.push([t,e])}}if("stride"in n){const[e,t,r]=n.stride;d+=e-r}w.length>0?(p.push(w),s&&h.push(b)):p.every((e=>0===e.length))&&(u=o(),p=[],w=[],h=[],b=[])}if(p.length>0){if(a&&t)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[e,n]=this.findLongestCommonSequence(p,h),r=this.decode(e);u.text=r,s&&(u.words=this.collateWordTimestamps(e,n,i)),l.push(u)}let _=Object.create(null);const y=l.map((e=>e.text)).join("");if(t||n){for(let e=0;e<l.length;++e){const r=l[e];t||delete r.timestamp,n||delete r.language}if(s){const e=[];for(const t of l)for(const n of t.words)e.push(n);_={chunks:e}}else _={chunks:l}}return[y,_]}findLongestCommonSequence(e,t=null){let n=e[0],r=n.length,a=[];const i=Array.isArray(t)&&t.length>0;let s=i?[]:null,o=i?t[0]:null;for(let l=1;l<e.length;++l){const u=e[l];let d=0,c=[r,r,0,0];const p=u.length;for(let e=1;e<r+p;++e){const a=Math.max(0,r-e),s=Math.min(r,r+p-e),h=n.slice(a,s),f=Math.max(0,e-r),m=Math.min(p,e),g=u.slice(f,m);if(h.length!==g.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let _;_=i?h.filter(((e,n)=>e===g[n]&&o[a+n]<=t[l][f+n])).length:h.filter(((e,t)=>e===g[t])).length;const y=_/e+e/1e4;_>1&&y>d&&(d=y,c=[a,s,f,m])}const[h,f,m,g]=c,_=Math.floor((f+h)/2),y=Math.floor((g+m)/2);a.push(...n.slice(0,_)),n=u.slice(y),r=n.length,i&&(s.push(...o.slice(0,_)),o=t[l].slice(y))}return a.push(...n),i?(s.push(...o),[a,s]):[a,[]]}collateWordTimestamps(e,t,n){const[r,a,i]=this.combineTokensIntoWords(e,n),s=[];for(let e=0;e<r.length;++e){const n=i[e];s.push({text:r[e],timestamp:[t[n.at(0)][0],t[n.at(-1)][1]]})}return s}combineTokensIntoWords(e,t,n="\"'“¡¿([{-",r="\"'.。,，!！?？:：”)]}、"){let a,i,s;return["chinese","japanese","thai","lao","myanmar"].includes(t=t??"english")?[a,i,s]=this.splitTokensOnUnicode(e):[a,i,s]=this.splitTokensOnSpaces(e),this.mergePunctuations(a,i,s,n,r)}decode(e,t){let n;return t?.decode_with_timestamps?(e instanceof lc&&(e=Cp(e)),n=this.decodeWithTimestamps(e,t)):n=super.decode(e,t),n}decodeWithTimestamps(e,t){const n=t?.time_precision??.02,r=Array.from(this.all_special_ids).at(-1)+1;let a=[[]];for(let t of e)if(t=Number(t),t>=r){const e=((t-r)*n).toFixed(2);a.push(`<|${e}|>`),a.push([])}else a[a.length-1].push(t);return a=a.map((e=>"string"==typeof e?e:super.decode(e,t))),a.join("")}splitTokensOnUnicode(e){const t=this.decode(e,{decode_with_timestamps:!0}),n=[],r=[],a=[];let i=[],s=[],o=0;for(let l=0;l<e.length;++l){const u=e[l];i.push(u),s.push(l);const d=this.decode(i,{decode_with_timestamps:!0});d.includes("�")&&"�"!==t[o+d.indexOf("�")]||(n.push(d),r.push(i),a.push(s),i=[],s=[],o+=d.length)}return[n,r,a]}splitTokensOnSpaces(e){const[t,n,r]=this.splitTokensOnUnicode(e),a=[],i=[],s=[],o=new RegExp(`^[${zp}]$`,"gu");for(let e=0;e<t.length;++e){const l=t[e],u=n[e],d=r[e],c=u[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),p=l.startsWith(" "),h=l.trim(),f=o.test(h);if(c||p||f||0===a.length)a.push(l),i.push(u),s.push(d);else{const e=a.length-1;a[e]+=l,i[e].push(...u),s[e].push(...d)}}return[a,i,s]}mergePunctuations(e,t,n,r,a){const i=structuredClone(e),s=structuredClone(t),o=structuredClone(n);let l=i.length-2,u=i.length-1;for(;l>=0;)i[l].startsWith(" ")&&r.includes(i[l].trim())?(i[u]=i[l]+i[u],s[u]=E(s[l],s[u]),o[u]=E(o[l],o[u]),i[l]="",s[l]=[],o[l]=[]):u=l,--l;for(l=0,u=1;u<i.length;)!i[l].endsWith(" ")&&a.includes(i[u])?(i[l]+=i[u],s[l]=E(s[l],s[u]),o[l]=E(o[l],o[u]),i[u]="",s[u]=[],o[u]=[]):l=u,++u;return[i.filter((e=>e)),s.filter((e=>e.length>0)),o.filter((e=>e.length>0))]}get_decoder_prompt_ids({language:e=null,task:t=null,no_timestamps:n=!0}={}){const r=[];if(e){const t=$p(e),n=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===n)throw new Error(`Unable to find language "${t}" in model vocabulary. Please report this issue at ${xp}.`);r.push(n)}else r.push(null);if(t){if("transcribe"!==(t=t.toLowerCase())&&"translate"!==t)throw new Error(`Task "${t}" is not supported. Must be one of: ["transcribe", "translate"]`);const e=this.model.tokens_to_ids.get(`<|${t}|>`);if(void 0===e)throw new Error(`Unable to find task "${t}" in model vocabulary. Please report this issue at ${xp}.`);r.push(e)}else r.push(null);if(n){const e=this.model.tokens_to_ids.get("<|notimestamps|>");if(void 0===e)throw new Error(`Unable to find "<|notimestamps|>" in model vocabulary. Please report this issue at ${xp}.`);r.push(e)}return r.map(((e,t)=>[t+1,e])).filter((e=>null!==e[1]))}}class gf extends Mh{}class _f extends Mh{}class yf extends Mh{}class wf extends Mh{constructor(e,t){super(e,t),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter((e=>this.languageRegex.test(e))),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(e){if(null===e)return null;const[t,...n]=e.trim().split(this.languageRegex);if(0===n.length)return super._encode_text(t);if(2===n.length){const[e,t]=n;return this.supported_language_codes.includes(e)||console.warn(`Unsupported language code "${e}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),E([e],super._encode_text(t))}}}class bf extends Mh{}class vf extends Mh{_default_chat_template="{% for message in messages %}{% if message['role'] == 'user' %}{{ ' ' }}{% endif %}{{ message['content'] }}{% if not loop.last %}{{ '  ' }}{% endif %}{% endfor %}{{ eos_token }}"}class $f extends vf{}class xf extends Mh{}class kf extends Mh{}class Sf extends Mh{constructor(e,t){super(e,t),this.decoder=new $h({})}}class Ef extends Mh{}class Cf{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:jh,DistilBertTokenizer:Vh,CamembertTokenizer:Gh,DebertaTokenizer:Nh,DebertaV2Tokenizer:Uh,BertTokenizer:Rh,HerbertTokenizer:Wh,ConvBertTokenizer:Fh,RoFormerTokenizer:Lh,XLMTokenizer:Hh,ElectraTokenizer:qh,MobileBertTokenizer:Bh,SqueezeBertTokenizer:Dh,AlbertTokenizer:Ph,GPT2Tokenizer:Kh,BartTokenizer:Yh,MBartTokenizer:Xh,MBart50Tokenizer:Qh,RobertaTokenizer:Jh,WhisperTokenizer:mf,CodeGenTokenizer:gf,CLIPTokenizer:_f,SiglipTokenizer:yf,MarianTokenizer:wf,BloomTokenizer:Zh,NllbTokenizer:hf,M2M100Tokenizer:ff,LlamaTokenizer:tf,CodeLlamaTokenizer:nf,XLMRobertaTokenizer:rf,MPNetTokenizer:af,FalconTokenizer:sf,GPTNeoXTokenizer:of,EsmTokenizer:lf,Wav2Vec2CTCTokenizer:bf,BlenderbotTokenizer:vf,BlenderbotSmallTokenizer:$f,SpeechT5Tokenizer:xf,NougatTokenizer:kf,VitsTokenizer:Sf,Qwen2Tokenizer:uf,GemmaTokenizer:df,Grok1Tokenizer:cf,CohereTokenizer:Ef,PreTrainedTokenizer:Mh};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main",legacy:s=null}={}){const[o,l]=await kp(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i,legacy:s}),u=l.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let d=this.TOKENIZER_CLASS_MAPPING[u];return d||(console.warn(`Unknown tokenizer class "${u}", attempting to construct from base class.`),d=Mh),new d(o,l)}}function Af(e){const t={};let n={};switch(e.model_type){case"llava":case"paligemma":case"florence2":n=Af(e.text_config);break;case"moondream1":n=Af(e.phi_config);break;case"musicgen":n=Af(e.decoder);break;case"gpt2":case"gptj":case"codegen":case"gpt_bigcode":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"phi":case"phi3":case"falcon":t.num_heads="num_attention_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size";break;case"llama":case"cohere":case"mistral":case"starcoder2":case"qwen2":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.hidden_size="hidden_size",t.num_attention_heads="num_attention_heads";break;case"gemma":t.num_heads="num_key_value_heads",t.num_layers="num_hidden_layers",t.dim_kv="head_dim";break;case"openelm":t.num_heads="num_kv_heads",t.num_layers="num_transformer_layers",t.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":t.num_heads="num_heads",t.num_layers="num_layers",t.hidden_size="hidden_size";break;case"bloom":t.num_heads="n_head",t.num_layers="n_layer",t.hidden_size="hidden_size";break;case"mpt":t.num_heads="n_heads",t.num_layers="n_layers",t.hidden_size="d_model";break;case"t5":case"mt5":case"longt5":t.num_decoder_layers="num_decoder_layers",t.num_decoder_heads="num_heads",t.decoder_dim_kv="d_kv",t.num_encoder_layers="num_layers",t.num_encoder_heads="num_heads",t.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="d_model",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="d_model";break;case"speecht5":t.num_decoder_layers="decoder_layers",t.num_decoder_heads="decoder_attention_heads",t.decoder_hidden_size="hidden_size",t.num_encoder_layers="encoder_layers",t.num_encoder_heads="encoder_attention_heads",t.encoder_hidden_size="hidden_size";break;case"trocr":t.num_encoder_layers=t.num_decoder_layers="decoder_layers",t.num_encoder_heads=t.num_decoder_heads="decoder_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="d_model";break;case"musicgen_decoder":t.num_encoder_layers=t.num_decoder_layers="num_hidden_layers",t.num_encoder_heads=t.num_decoder_heads="num_attention_heads",t.encoder_hidden_size=t.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const r=Af(e.decoder),a="num_decoder_layers"in r,i=I(e,["model_type","is_encoder_decoder"]);return a?(i.num_decoder_layers=r.num_decoder_layers,i.num_decoder_heads=r.num_decoder_heads,i.decoder_hidden_size=r.decoder_hidden_size,i.num_encoder_layers=r.num_encoder_layers,i.num_encoder_heads=r.num_encoder_heads,i.encoder_hidden_size=r.encoder_hidden_size):(i.num_layers=r.num_layers,i.num_heads=r.num_heads,i.hidden_size=r.hidden_size),i}const r={...n,...I(e,["model_type","multi_query","is_encoder_decoder"])};for(const n in t)r[n]=e[t[n]];return r}function If(e,{prefix:t="past_key_values"}={}){const n={},r=e.normalized_config;if(r.is_encoder_decoder&&"num_encoder_heads"in r&&"num_decoder_heads"in r){const e=r.encoder_dim_kv??r.encoder_hidden_size/r.num_encoder_heads,a=r.decoder_dim_kv??r.decoder_hidden_size/r.num_decoder_heads,i=[1,r.num_encoder_heads,0,e],s=[1,r.num_decoder_heads,0,a];for(let e=0;e<r.num_decoder_layers;++e)n[`${t}.${e}.encoder.key`]=i,n[`${t}.${e}.encoder.value`]=i,n[`${t}.${e}.decoder.key`]=s,n[`${t}.${e}.decoder.value`]=s}else{const e=r.num_heads,a=r.num_layers,i=r.dim_kv??r.hidden_size/(r.num_attention_heads??e);if("falcon"===r.model_type){const r=[1*e,0,i];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}else if(r.multi_query){const r=[1*e,0,2*i];for(let e=0;e<a;++e)n[`${t}.${e}.key_value`]=r}else if("bloom"===r.model_type){const r=[1*e,i,0],s=[1*e,0,i];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=s}else if("openelm"===r.model_type)for(let r=0;r<a;++r){const a=[1,e[r],0,i];n[`${t}.${r}.key`]=a,n[`${t}.${r}.value`]=a}else{const r=[1,e,0,i];for(let e=0;e<a;++e)n[`${t}.${e}.key`]=r,n[`${t}.${e}.value`]=r}}return n}class Tf{max_position_embeddings;constructor(e){this.model_type=null,this.is_encoder_decoder=!1,Object.assign(this,e),this.normalized_config=Af(this)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main"}={}){!n||n instanceof Tf||(n=new Tf(n));const s=n??await async function(e,t){return await N(e,"config.json",!0,t)}(e,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i});return new this(s)}}class zf{static async from_pretrained(...e){return Tf.from_pretrained(...e)}}const Of=Object.freeze({cpu:"cpu",gpu:"gpu",wasm:"wasm",webgpu:"webgpu"}),Mf=function(){let e;return async function(){if(void 0===e)if(m.IS_WEBGPU_AVAILABLE)try{const t=await navigator.gpu.requestAdapter();e=t.features.has("shader-f16")}catch(t){e=!1}else e=!1;return e}}(),Rf=Object.freeze({fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),Pf=Object.freeze({[Of.cpu]:Rf.q8,[Of.gpu]:Rf.fp32,[Of.wasm]:Rf.q8,[Of.webgpu]:Rf.fp32}),Bf=Object.freeze({[Rf.fp32]:"",[Rf.fp16]:"_fp16",[Rf.int8]:"_int8",[Rf.uint8]:"_uint8",[Rf.q8]:"_quantized",[Rf.q4]:"_q4",[Rf.q4f16]:"_q4f16",[Rf.bnb4]:"_bnb4"});class Df extends ${_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Nf extends ${_call(e,t){throw Error("`_call` should be implemented in a subclass")}}class Uf extends ${constructor(){super(),this.processors=[]}push(e){this.processors.push(e)}extend(e){this.processors.push(...e)}_call(e,t){let n=t;for(const t of this.processors)n=t(e,n);return n}[Symbol.iterator](){return this.processors.values()}}class Wf extends Df{constructor(e){super(),this.bos_token_id=e}_call(e,t){for(let n=0;n<e.length;++n)if(1===e[n].length){const e=t[n];e.data.fill(-1/0),e.data[this.bos_token_id]=0}return t}}class Ff extends Df{constructor(e,t){super(),this.max_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.max_length-1){const e=t[n];e.data.fill(-1/0);for(const t of this.eos_token_id)e.data[t]=0}return t}}class Lf extends Df{constructor(e,t){super(),this.begin_suppress_tokens=e,this.begin_index=t}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length===this.begin_index){const e=t[n];for(const t of this.begin_suppress_tokens)e.data[t]=-1/0}return t}}class Vf extends Df{constructor(e,t){super(),this.eos_token_id=Array.isArray(e.eos_token_id)?e.eos_token_id[0]:e.eos_token_id,this.no_timestamps_token_id=e.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=t.length,t.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=e.max_initial_timestamp_index}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n].data;if(r[this.no_timestamps_token_id]=-1/0,e[n].length===this.begin_index-1){r.fill(-1/0),r[this.timestamp_begin]=0;continue}const a=e[n].slice(this.begin_index),i=a.length>=1&&a[a.length-1]>=this.timestamp_begin,s=a.length<2||a[a.length-2]>=this.timestamp_begin;if(i&&(s?r.subarray(this.timestamp_begin).fill(-1/0):r.subarray(0,this.eos_token_id).fill(-1/0)),e[n].length===this.begin_index&&null!==this.max_initial_timestamp_index){const e=this.timestamp_begin+this.max_initial_timestamp_index;r.subarray(e+1).fill(-1/0)}const o=W(r).map((e=>Math.log(e)));Math.log(o.subarray(this.timestamp_begin).map(Math.exp).reduce(((e,t)=>e+t)))>L(o.subarray(0,this.timestamp_begin))[0]&&r.subarray(0,this.timestamp_begin).fill(-1/0)}return t}}class Gf extends Df{constructor(e){super(),this.no_repeat_ngram_size=e}getNgrams(e){const t=e.length,n=[];for(let r=0;r<t+1-this.no_repeat_ngram_size;++r){const t=[];for(let n=0;n<this.no_repeat_ngram_size;++n)t.push(e[r+n]);n.push(t.map(Number))}const r=new Map;for(const e of n){const t=e.slice(0,e.length-1),n=JSON.stringify(t),a=r.get(n)??[];a.push(e[e.length-1]),r.set(n,a)}return r}getGeneratedNgrams(e,t){const n=t.slice(t.length+1-this.no_repeat_ngram_size,t.length);return e.get(JSON.stringify(n.map(Number)))??[]}calcBannedNgramTokens(e){if(e.length+1<this.no_repeat_ngram_size)return[];{const t=this.getNgrams(e);return this.getGeneratedNgrams(t,e)}}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n],a=this.calcBannedNgramTokens(e[n]);for(const e of a)r.data[e]=-1/0}return t}}class Hf extends Df{constructor(e){super(),this.penalty=e}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n];for(const t of e[n])r.data[t]<0?r.data[t]*=this.penalty:r.data[t]/=this.penalty}return t}}class qf extends Df{constructor(e,t){super(),this.min_length=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length<this.min_length){const e=t[n];for(const t of this.eos_token_id)e.data[t]=-1/0}return t}}class jf extends Df{constructor(e,t,n){super(),this.prompt_length_to_skip=e,this.min_new_tokens=t,this.eos_token_id=Array.isArray(n)?n:[n]}_call(e,t){for(let n=0;n<e.length;++n)if(e[n].length-this.prompt_length_to_skip<this.min_new_tokens){const e=t[n];for(const t of this.eos_token_id)e[t]=-1/0}return t}}class Kf extends Df{constructor(e,t){super(),this.bad_words_ids=e,this.eos_token_id=Array.isArray(t)?t:[t]}_call(e,t){for(let n=0;n<e.length;++n){const r=t[n];for(const t of this.bad_words_ids){let n=!0;for(let r=1;r<=t.length-1&&t.length<e[r].length;++r)if(t.at(-r-1)!==Number(e[r].at(-r))){n=!1;break}n&&(r[t.at(-1)]=-1/0)}}return t}}class Yf extends Df{constructor(e){if(super(),e<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${e}.`);this.guidance_scale=e}_call(e,t){if(t.dims[0]!==2*e.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${t.dims[0]} for the logits and ${e.length} for the input ids.`);const n=e.length,r=t.slice([0,n],null),a=t.slice([n,t.dims[0]],null);for(let e=0;e<a.data.length;++e)a.data[e]+=(r.data[e]-a.data[e])*this.guidance_scale;return a}}class Xf extends Nf{constructor(e){if(super(),"number"!=typeof e||e<=0){let t=`\`temperature\` (=${e}) must be a strictly positive float, otherwise your next token scores will be invalid.`;0===e&&(t+=" If you're looking for greedy decoding strategies, set `do_sample=false`.")}this.temperature=e}_call(e,t){const n=t.data;for(let e=0;e<n.length;++e)n[e]/=this.temperature;return t}}class Qf extends Nf{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),e<0||e>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${e}`);if(!Number.isInteger(n)||n<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${n}`);this.top_p=e,this.filter_value=t,this.min_tokens_to_keep=n}}class Jf extends Nf{constructor(e,{filter_value:t=-1/0,min_tokens_to_keep:n=1}={}){if(super(),!Number.isInteger(e)||e<0)throw new Error(`\`top_k\` must be a positive integer, but is ${e}`);this.top_k=Math.max(e,n),this.filter_value=t}}class Zf{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(e){Object.assign(this,I(e,Object.getOwnPropertyNames(this)))}}class em extends ${_call(e,t){throw Error("StoppingCriteria needs to be subclassed")}}class tm extends ${constructor(){super(),this.criteria=[]}push(e){this.criteria.push(e)}extend(e){e instanceof tm?e=e.criteria:e instanceof em&&(e=[e]),this.criteria.push(...e)}_call(e,t){const n=new Array(e.length).fill(!1);for(const r of this.criteria){const a=r(e,t);for(let e=0;e<n.length;++e)n[e]||=a[e]}return n}[Symbol.iterator](){return this.criteria.values()}}class nm extends em{constructor(e,t=null){super(),this.max_length=e,this.max_position_embeddings=t}_call(e){return e.map((e=>e.length>=this.max_length))}}class rm extends em{constructor(e){super(),Array.isArray(e)||(e=[e]),this.eos_token_id=e}_call(e,t){return e.map((e=>{const t=e.at(-1);return this.eos_token_id.some((e=>t==e))}))}}class am extends ${constructor(e){super(),this.generation_config=e}async _call(e){return this.sample(e)}async sample(e){throw Error("sample should be implemented in subclasses.")}getLogits(e,t){let n=e.dims.at(-1),r=e.data;if(-1===t)r=r.slice(-n);else{let e=t*n;r=r.slice(e,e+n)}return r}randomSelect(e){let t=0;for(let n=0;n<e.length;++n)t+=e[n];let n=Math.random()*t;for(let t=0;t<e.length;++t)if(n-=e[t],n<=0)return t;return 0}static getSampler(e){if(e.do_sample)return new sm(e);if(e.num_beams>1)return new om(e);if(e.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${e.num_return_sequences}.`);return new im(e)}}class im extends am{async sample(e){const t=L(e.data)[1];return[[BigInt(t),0]]}}class sm extends am{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await cc(e,t),a=W(n.data);return Array.from({length:this.generation_config.num_beams},(()=>{const e=this.randomSelect(a);return[r.data[e],Math.log(a[e])]}))}}class om extends am{async sample(e){let t=e.dims.at(-1);this.generation_config.top_k>0&&(t=Math.min(this.generation_config.top_k,t));const[n,r]=await cc(e,t),a=W(n.data);return Array.from({length:this.generation_config.num_beams},((e,t)=>[r.data[t],Math.log(a[t])]))}}class lm extends Zf{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}const um=new Map,dm=new Map,cm=new Map;async function pm(e,t,n){return Object.fromEntries(await Promise.all(Object.keys(t).map((async r=>{const{buffer:a,session_options:i}=await async function(e,t,n){let r=n.device;r&&"string"!=typeof r&&(r.hasOwnProperty(t)?r=r[t]:(console.warn(`device not specified for "${t}". Using the default device.`),r=null));const a=function(e){let t=Jd;if(e){if(!Qd.includes(e))throw new Error(`Unsupported device: "${e}". Should be one of: ${Qd.join(", ")}.`);t=[e]}return t}(r);let i=n.dtype;if("string"!=typeof i&&(i&&i.hasOwnProperty(t)?i=i[t]:(i=Pf[a[0]],console.warn(`dtype not specified for "${t}". Using the default dtype for this device (${i}).`))),!Bf.hasOwnProperty(i))throw new Error(`Invalid dtype: ${i}. Should be one of: ${Object.keys(Rf).join(", ")}`);if(i===Rf.fp16&&"webgpu"===r&&!await Mf())throw new Error(`The device (${r}) does not support fp16.`);const s=Bf[i],o=`${n.subfolder??""}/${t}${s}.onnx`,l={...n.session_options}??{};l.executionProviders??=a;const u=D(e,o,!0,n);let d=[];if(n.use_external_data_format&&(!0===n.use_external_data_format||"object"==typeof n.use_external_data_format&&n.use_external_data_format.hasOwnProperty(t)&&!0===n.use_external_data_format[t])){if(m.IS_NODE_ENV)throw new Error("External data format is not yet supported in Node.js");const r=`${t}${s}.onnx_data`,a=`${n.subfolder??""}/${r}`;d.push(new Promise((async(t,i)=>{const s=await D(e,a,!0,n);t({path:r,data:s})})))}else void 0!==l.externalData&&(d=l.externalData.map((async t=>{if("string"==typeof t.data){const r=await D(e,t.data,!0,n);return{...t,data:r}}return t})));if(d.length>0&&(l.externalData=await Promise.all(d)),"webgpu"===r){const e=If(n.config,{prefix:"present"});if(Object.keys(e).length>0){const t={};for(const n in e)t[n]="gpu-buffer";l.preferredOutputLocation=t}}return{buffer:await u,session_options:l}}(e,t[r],n);return[r,await nc(a,i)]}))))}async function hm(e,t){const n=function(e,t){const n=Object.create(null),r=[];for(const a of e.inputNames){const e=t[a];e instanceof lc?n[a]=ac?.wasm?.proxy?e.clone():e:r.push(a)}if(r.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${r.join(", ")}.`);const a=Object.keys(t).length,i=e.inputNames.length;if(a>i){let n=Object.keys(t).filter((t=>!e.inputNames.includes(t)));console.warn(`WARNING: Too many inputs were provided (${a} > ${i}). The following inputs will be ignored: "${n.join(", ")}".`)}return n}(e,t);try{const t=Object.fromEntries(Object.entries(n).map((([e,t])=>[e,t.ort_tensor])));let r=await e.run(t);return r=fm(r),r}catch(e){throw console.error(`An error occurred during model execution: "${e}".`),console.error("Inputs given to model:",n),e}}function fm(e){for(let t in e)rc(e[t])?e[t]=new lc(e[t]):"object"==typeof e[t]&&fm(e[t]);return e}function mm(e){if(e instanceof lc)return e;if(0===e.length)throw Error("items must be non-empty");if(Array.isArray(e[0])){if(e.some((t=>t.length!==e[0].length)))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new lc("int64",BigInt64Array.from(e.flat().map((e=>BigInt(e)))),[e.length,e[0].length])}return new lc("int64",BigInt64Array.from(e.map((e=>BigInt(e)))),[1,e.length])}function gm(e){return new lc("bool",[e],[1])}async function _m(e,t){let{encoder_outputs:n,input_ids:r,decoder_input_ids:a,...i}=t;if(!n){const r=I(t,e.sessions.model.inputNames);n=(await ym(e,r)).last_hidden_state}return i.input_ids=a,i.encoder_hidden_states=n,e.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(i.encoder_attention_mask=t.attention_mask),await wm(e,i,!0)}async function ym(e,t){const n=e.sessions.model,r=I(t,n.inputNames);if(n.inputNames.includes("inputs_embeds")&&!r.inputs_embeds){if(!t.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");r.inputs_embeds=await e.encode_text({input_ids:t.input_ids})}return n.inputNames.includes("token_type_ids")&&!r.token_type_ids&&(r.token_type_ids=new lc("int64",new BigInt64Array(r.input_ids.data.length),r.input_ids.dims)),await hm(n,r)}async function wm(e,t,n=!1){const r=e.sessions[n?"decoder_model_merged":"model"],{past_key_values:a,...i}=t;r.inputNames.includes("use_cache_branch")&&(i.use_cache_branch=gm(!!a)),r.inputNames.includes("position_ids")&&i.attention_mask&&!i.position_ids&&(i.position_ids=function(e,t=null){const{input_ids:n,inputs_embeds:r,attention_mask:a}=e,[i,s]=a.dims,o=new BigInt64Array(a.data.length);for(let e=0;e<i;++e){const t=e*s;let n=BigInt(0);for(let e=0;e<s;++e){const r=t+e;0n===a.data[r]?o[r]=BigInt(1):(o[r]=n,n+=a.data[r])}}let l=new lc("int64",o,a.dims);if(t){const e=-(n??r).dims.at(1);l=l.slice(null,[e,null])}return l}(i,a)),e.addPastKeyValues(i,a);const s=I(i,r.inputNames);return await hm(r,s)}async function bm(e,{input_ids:t=null,attention_mask:n=null,pixel_values:r=null,position_ids:a=null,inputs_embeds:i=null,past_key_values:s=null,generation_config:o=null,logits_processor:l=null,...u}){if(!i)if(i=await e.encode_text({input_ids:t}),r&&1!==t.dims[1]){const a=await e.encode_image({pixel_values:r});({inputs_embeds:i,attention_mask:n}=e._merge_input_ids_with_image_features({image_features:a,inputs_embeds:i,input_ids:t,attention_mask:n}))}else if(s&&r&&1===t.dims[1]){const e=t.dims[1],r=Object.values(s)[0].dims.at(-2);n=mc([wc([t.dims[0],r]),n.slice(null,[n.dims[1]-e,n.dims[1]])],1)}return await wm(e,{inputs_embeds:i,past_key_values:s,attention_mask:n,position_ids:a,generation_config:o,logits_processor:l},!0)}function vm(e,t,n,r){if(n.past_key_values){const t=Object.values(n.past_key_values)[0].dims.at(-2),{input_ids:r,attention_mask:a}=n;if(a&&a.dims[1]>r.dims[1]);else if(t<r.dims[1])n.input_ids=r.slice(null,[t,null]);else if(null!=e.config.image_token_index&&r.data.some((t=>t==e.config.image_token_index))){const a=e.config.num_image_tokens;if(!a)throw new Error("`num_image_tokens` is missing in the model configuration.");const i=r.dims[1]-(t-a);n.input_ids=r.slice(null,[-i,null]),n.attention_mask=wc([1,t+i])}}return n}function $m(e,t,n,r){return n.past_key_values&&(t=t.map((e=>[e.at(-1)]))),{...n,decoder_input_ids:mm(t)}}function xm(e,...t){return e.config.is_encoder_decoder?$m(e,...t):vm(e,...t)}class km extends ${main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(e,t){super(),this.config=e,this.sessions=t;const n=cm.get(this.constructor),r=um.get(n);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,r){case 4:this.can_generate=!0,this._forward=wm,this._prepare_inputs_for_generation=vm;break;case 2:case 3:case 7:this.can_generate=!0,this._forward=_m,this._prepare_inputs_for_generation=$m;break;case 1:this._forward=_m;break;case 6:this.can_generate=!0,this._forward=bm,this._prepare_inputs_for_generation=xm;break;default:this._forward=ym}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const e=[];for(const t of Object.values(this.sessions))t?.handler?.dispose&&e.push(t.handler.dispose());return await Promise.all(e)}static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main",model_file_name:s=null,subfolder:o="onnx",device:l=null,dtype:u=null,use_external_data_format:d=null,session_options:c={}}={}){let p={progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i,model_file_name:s,subfolder:o,device:l,dtype:u,use_external_data_format:d,session_options:c};const h=cm.get(this),f=um.get(h);let m;if(n=p.config=await zf.from_pretrained(e,p),4===f)m=await Promise.all([pm(e,{model:p.model_file_name??"model"},p),N(e,"generation_config.json",!1,p)]);else if(2===f||3===f)m=await Promise.all([pm(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p),N(e,"generation_config.json",!1,p)]);else if(5===f)m=await Promise.all([pm(e,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},p)]);else if(1===f)m=await Promise.all([pm(e,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},p)]);else if(6===f){const t={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};n.is_encoder_decoder&&(t.model="encoder_model"),m=await Promise.all([pm(e,t,p),N(e,"generation_config.json",!1,p)])}else 7===f?m=await Promise.all([pm(e,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},p),N(e,"generation_config.json",!1,p)]):(0!==f&&console.warn(`Model type for '${h??n?.model_type}' not found, assuming encoder-only architecture. Please report this at https://github.com/xenova/transformers.js/issues/new/choose.`),m=await Promise.all([pm(e,{model:p.model_file_name??"model"},p)]));return new this(n,...m)}async _call(e){return await this.forward(e)}async forward(e){return await this._forward(this,e)}_get_logits_warper(e){const t=new Uf;return null!==e.temperature&&1!==e.temperature&&t.push(new Xf(e.temperature)),null!==e.top_k&&0!==e.top_k&&t.push(new Jf(e.top_k)),null!==e.top_p&&e.top_p<1&&t.push(new Qf(e.top_p)),t}_get_logits_processor(e,t,n=null){const r=new Uf;if(null!==e.repetition_penalty&&1!==e.repetition_penalty&&r.push(new Hf(e.repetition_penalty)),null!==e.no_repeat_ngram_size&&e.no_repeat_ngram_size>0&&r.push(new Gf(e.no_repeat_ngram_size)),null!==e.bad_words_ids&&r.push(new Kf(e.bad_words_ids,e.eos_token_id)),null!==e.min_length&&null!==e.eos_token_id&&e.min_length>0&&r.push(new qf(e.min_length,e.eos_token_id)),null!==e.min_new_tokens&&null!==e.eos_token_id&&e.min_new_tokens>0&&r.push(new jf(t,e.min_new_tokens,e.eos_token_id)),null!==e.forced_bos_token_id&&r.push(new Wf(e.forced_bos_token_id)),null!==e.forced_eos_token_id&&r.push(new Ff(e.max_length,e.forced_eos_token_id)),null!==e.begin_suppress_tokens){const n=t>1||null===e.forced_bos_token_id?t:t+1;r.push(new Lf(e.begin_suppress_tokens,n))}return null!==e.guidance_scale&&e.guidance_scale>1&&r.push(new Yf(e.guidance_scale)),null!==n&&r.extend(n),r}_prepare_generation_config(e,t,n=Zf){const r={...this.config};for(const e of["decoder","generator","text_config"])e in r&&Object.assign(r,r[e]);const a=new n(r);return"generation_config"in this&&Object.assign(a,this.generation_config),e&&Object.assign(a,e),t&&Object.assign(a,I(t,Object.getOwnPropertyNames(a))),a}_get_stopping_criteria(e,t=null){const n=new tm;return null!==e.max_length&&n.push(new nm(e.max_length,this.config.max_position_embeddings??null)),null!==e.eos_token_id&&n.push(new rm(e.eos_token_id)),t&&n.extend(t),n}_validate_model_class(){if(!this.can_generate){const e=[M_,B_,O_,C_],t=cm.get(this.constructor),n=new Set,r=this.config.model_type;for(const t of e){const e=t.get(r);e&&n.add(e[0])}let a=`The current model class (${t}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw n.size>0&&(a+=` Please use the following class instead: ${[...n].join(", ")}`),Error(a)}}prepare_inputs_for_generation(...e){return this._prepare_inputs_for_generation(this,...e)}_update_model_kwargs_for_generation({generated_input_ids:e,outputs:t,model_inputs:n,is_encoder_decoder:r}){return n.past_key_values=this.getPastKeyValues(t,n.past_key_values),n.input_ids=new lc("int64",e.flat(),[e.length,1]),r||(n.attention_mask=mc([n.attention_mask,wc([n.attention_mask.dims[0],1])],1)),n.position_ids=null,n}_prepare_model_inputs({inputs:e,bos_token_id:t,model_kwargs:n}){const r=I(n,this.forward_params),a=this.main_input_name;if(a in r){if(e)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else r[a]=e;return{inputs_tensor:r[a],model_inputs:r,model_input_name:a}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:e,model_inputs:t,model_input_name:n,generation_config:r}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!t.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:e,pixel_values:n,attention_mask:r,...a}=t;t={...a,...I(await this._prepare_inputs_embeds(t),["inputs_embeds","attention_mask"])}}let{last_hidden_state:a}=await ym(this,t);if(null!==r.guidance_scale&&r.guidance_scale>1)a=mc([a,(i=a,s=0,function(e,t){let n,r;if("number"==typeof t)n="float32",r=Float32Array;else{if("bigint"!=typeof t)throw new Error("Unsupported data type: "+typeof t);n="int64",r=BigInt64Array}return yc(e,t,n,r)}(i.dims,s))],0),"attention_mask"in t&&(t.attention_mask=mc([t.attention_mask,bc(t.attention_mask)],0));else if(t.decoder_input_ids){const e=mm(t.decoder_input_ids).dims[0];if(e!==a.dims[0]){if(1!==a.dims[0])throw new Error(`The encoder outputs have a different batch size (${a.dims[0]}) than the decoder inputs (${e}).`);a=mc(Array.from({length:e},(()=>a)),0)}}var i,s;return t.encoder_outputs=a,t}_prepare_decoder_input_ids_for_generation({batch_size:e,model_input_name:t,model_kwargs:n,decoder_start_token_id:r,bos_token_id:a,generation_config:i}){let{decoder_input_ids:s,...o}=n;if(s)Array.isArray(s[0])||(s=Array.from({length:e},(()=>s)));else if(r??=a,"musicgen"===this.config.model_type)s=Array.from({length:e*this.config.decoder.num_codebooks},(()=>[r]));else if(Array.isArray(r)){if(r.length!==e)throw new Error(`\`decoder_start_token_id\` expcted to have length ${e} but got ${r.length}`);s=r}else s=Array.from({length:e},(()=>[r]));return s=mm(s),n.decoder_attention_mask=wc(s.dims),{input_ids:s,model_inputs:o}}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,streamer:a=null,...i}){this._validate_model_class(),t=this._prepare_generation_config(t,i);let{inputs_tensor:s,model_inputs:o,model_input_name:l}=this._prepare_model_inputs({inputs:e,model_kwargs:i});const u=this.config.is_encoder_decoder;let d;u&&("encoder_outputs"in o||(o=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:s,model_inputs:o,model_input_name:l,generation_config:t}))),u?({input_ids:d,model_inputs:o}=this._prepare_decoder_input_ids_for_generation({batch_size:o[l].dims.at(0),model_input_name:l,model_kwargs:o,decoder_start_token_id:t.decoder_start_token_id,bos_token_id:t.bos_token_id,generation_config:t})):d=o[l];let c=d.dims.at(-1);null!==t.max_new_tokens&&(t.max_length=c+t.max_new_tokens);const p=this._get_logits_processor(t,c,n),h=this._get_stopping_criteria(t,r),f=o[l].dims.at(0),m=am.getSampler(t),g=new Array(f).fill(0),_=d.tolist();a&&a.put(_);let y=null,w={};for(;;){o=this.prepare_inputs_for_generation(_,o,t);const e=await this.forward(o);if(t.output_attentions&&t.return_dict_in_generate){const t=this.getAttentions(e);for(const e in t)e in w||(w[e]=[]),w[e].push(t[e])}const n=p(_,e.logits.slice(null,-1,null)),r=[];for(let e=0;e<n.dims.at(0);++e){const t=n[e],a=await m(t);for(const[t,n]of a){const a=BigInt(t);g[e]+=n,_[e].push(a),r.push([a]);break}}if(a&&a.put(r),h(_).every((e=>e))){t.return_dict_in_generate&&(y=this.getPastKeyValues(e,o.past_key_values,!1));break}o=this._update_model_kwargs_for_generation({generated_input_ids:r,outputs:e,model_inputs:o,is_encoder_decoder:u})}a&&a.end();const b=new lc("int64",_.flat(),[_.length,_[0].length]);return t.return_dict_in_generate?{sequences:b,past_key_values:y,...w}:b}getPastKeyValues(e,t,n=!0){const r=Object.create(null);for(const a in e)if(a.startsWith("present")){const i=a.replace("present","past_key_values");if(t&&a.includes("encoder"))r[i]=t[i];else{if(n&&t){const e=t[i];"gpu-buffer"===e.location&&e.dispose()}r[i]=e[a]}}return r}getAttentions(e){const t={};for(const n of["cross_attentions","encoder_attentions","decoder_attentions"])for(const r in e)r.startsWith(n)&&(n in t||(t[n]=[]),t[n].push(e[r]));return t}addPastKeyValues(e,t){if(t)Object.assign(e,t);else{const t=this.custom_config.kv_cache_dtype??"float32",n="float16"===t?new Uint16Array:[],r=If(this.config);for(const a in r)e[a]=new lc(t,n,r[a])}}async encode_image({pixel_values:e}){const t=(await hm(this.sessions.vision_encoder,{pixel_values:e})).image_features;return this.config.num_image_tokens||(console.warn(`The number of image tokens was not set in the model configuration. Setting it to the number of features detected by the vision encoder (${t.dims[1]}).`),this.config.num_image_tokens=t.dims[1]),t}async encode_text({input_ids:e}){return(await hm(this.sessions.embed_tokens,{input_ids:e})).inputs_embeds}}class Sm{}class Em extends km{}class Cm extends km{}class Am extends km{}class Im extends km{}class Tm extends km{}class zm extends km{}class Om extends km{}class Mm extends km{}class Rm extends km{}class Pm extends km{}class Bm extends km{}class Dm extends km{}class Nm extends km{}class Um extends km{}class Wm extends km{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class Fm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class Lm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class Vm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class Gm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class Hm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class qm extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class jm extends km{}class Km extends km{}class Ym extends km{}class Xm extends km{}class Qm extends km{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class Jm extends km{main_input_name="pixel_values";forward_params=["pixel_values","input_ids","encoder_hidden_states","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class Zm extends km{forward_params=["input_ids","pixel_values","attention_mask","position_ids","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}}class eg extends Zm{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){const a=this.config.image_token_index,i=n.tolist().map((e=>e.findIndex((e=>e==a)))),s=i.every((e=>-1===e)),o=i.every((e=>-1!==e));if(!s&&!o)throw new Error("Every input should contain either 0 or 1 image token.");if(s)return{inputs_embeds:e,attention_mask:r};const l=[],u=[];for(let n=0;n<i.length;++n){const a=i[n],s=e[n],o=t[n],d=r[n];l.push(mc([s.slice([0,a]),o,s.slice([a+1,s.dims[0]])],0)),u.push(mc([d.slice([0,a]),wc([o.dims[0]]),d.slice([a+1,d.dims[0]])],0))}return{inputs_embeds:gc(l,0),attention_mask:gc(u,0)}}}class tg extends km{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds";constructor(e,t,n){super(e,t),this.generation_config=n}}class ng extends km{}class rg extends km{}class ag extends km{}class ig extends km{}class sg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class og extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class lg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class ug extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class dg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class cg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class pg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class hg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class fg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class mg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class gg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class _g extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class yg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class wg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class bg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class vg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class $g extends km{}class xg extends km{}class kg extends km{}class Sg extends km{}class Eg extends km{}class Cg extends km{}class Ag extends km{}class Ig extends km{}class Tg extends km{}class zg extends Sm{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Og extends Sm{constructor({logits:e,pred_boxes:t,pred_masks:n}){super(),this.logits=e,this.pred_boxes=t,this.pred_masks=n}}class Mg extends km{}class Rg extends Sm{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Pg extends km{}class Bg extends zg{}class Dg extends km{}class Ng extends km{}class Ug extends km{}class Wg extends km{}class Fg extends km{}class Lg extends km{}class Vg extends km{}class Gg extends km{}class Hg extends km{}class qg extends km{}class jg extends km{}class Kg extends km{}class Yg extends Sm{constructor({logits:e,pred_boxes:t}){super(),this.logits=e,this.pred_boxes=t}}class Xg extends km{}class Qg extends Sm{constructor({iou_scores:e,pred_masks:t}){super(),this.iou_scores=e,this.pred_masks=t}}class Jg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class Zg extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class e_ extends km{}class t_ extends km{}class n_ extends km{}class r_ extends km{}class a_ extends km{}class i_ extends km{}class s_ extends km{}class o_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class l_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class u_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class d_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class c_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class p_ extends km{}class h_ extends km{}class f_ extends h_{async _call(e){return new cy(await super._call(e))}}class m_ extends km{}class g_ extends km{constructor(e,t,n){super(e,t),this.generation_config=n}}class __ extends km{}class y_ extends km{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];constructor(e,t,n){super(e,t),this.generation_config=n}_apply_and_filter_by_delay_pattern_mask(e){const[t,n]=e.dims,r=this.config.decoder.num_codebooks,a=n-r;let i=0;for(let t=0;t<e.size;++t){if(e.data[t]===this.config.decoder.pad_token_id)continue;const s=t%n-Math.floor(t/n)%r;s>0&&s<=a&&(e.data[i++]=e.data[t])}const s=Math.floor(t/r),o=i/(s*r);return new lc(e.type,e.data.slice(0,i),[s,r,o])}prepare_inputs_for_generation(e,t,n){let r=structuredClone(e);for(let e=0;e<r.length;++e)for(let t=0;t<r[e].length;++t)e%this.config.decoder.num_codebooks>=t&&(r[e][t]=BigInt(this.config.decoder.pad_token_id));return null!==n.guidance_scale&&n.guidance_scale>1&&(r=r.concat(r)),super.prepare_inputs_for_generation(r,t,n)}async generate(e){const t=await super.generate(e),n=this._apply_and_filter_by_delay_pattern_mask(t).unsqueeze_(0),{audio_values:r}=await hm(this.sessions.encodec_decode,{audio_codes:n});return r}}class w_ extends km{}class b_ extends km{}class v_ extends km{}class $_ extends km{}class x_{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main",model_file_name:s=null,subfolder:o="onnx",device:l=null,dtype:u=null,use_external_data_format:d=null,session_options:c={}}={}){let p={progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i,model_file_name:s,subfolder:o,device:l,dtype:u,use_external_data_format:d,session_options:c};if(p.config=await zf.from_pretrained(e,p),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);for(let t of this.MODEL_CLASS_MAPPINGS){const n=t.get(p.config.model_type);if(n)return await n[1].from_pretrained(e,p)}if(this.BASE_IF_FAIL)return console.warn(`Unknown model class "${p.config.model_type}", attempting to construct from base class.`),await km.from_pretrained(e,p);throw Error(`Unsupported model type: ${p.config.model_type}`)}}const k_=new Map([["bert",["BertModel",class extends Em{}]],["nomic_bert",["NomicBertModel",class extends Cm{}]],["roformer",["RoFormerModel",class extends Am{}]],["electra",["ElectraModel",class extends Tm{}]],["esm",["EsmModel",class extends Pm{}]],["convbert",["ConvBertModel",class extends Im{}]],["camembert",["CamembertModel",class extends zm{}]],["deberta",["DebertaModel",class extends Om{}]],["deberta-v2",["DebertaV2Model",class extends Mm{}]],["mpnet",["MPNetModel",class extends Dm{}]],["albert",["AlbertModel",class extends Um{}]],["distilbert",["DistilBertModel",class extends Rm{}]],["roberta",["RobertaModel",class extends jm{}]],["xlm",["XLMModel",class extends Km{}]],["xlm-roberta",["XLMRobertaModel",class extends Ym{}]],["clap",["ClapModel",class extends p_{}]],["clip",["CLIPModel",class extends ng{}]],["clipseg",["CLIPSegModel",class extends ig{}]],["chinese_clip",["ChineseCLIPModel",class extends ag{}]],["siglip",["SiglipModel",class extends rg{}]],["mobilebert",["MobileBertModel",class extends Bm{}]],["squeezebert",["SqueezeBertModel",class extends Nm{}]],["wav2vec2",["Wav2Vec2Model",class extends e_{}]],["wav2vec2-bert",["Wav2Vec2BertModel",class extends i_{}]],["unispeech",["UniSpeechModel",class extends r_{}]],["unispeech-sat",["UniSpeechSatModel",class extends a_{}]],["hubert",["HubertModel",class extends e_{}]],["wavlm",["WavLMModel",class extends s_{}]],["audio-spectrogram-transformer",["ASTModel",class extends Xm{}]],["vits",["VitsModel",f_]],["pyannote",["PyAnnoteModel",class extends t_{}]],["wespeaker-resnet",["WeSpeakerResNetModel",class extends n_{}]],["detr",["DetrModel",class extends Tg{}]],["rt_detr",["RTDetrModel",class extends Mg{}]],["table-transformer",["TableTransformerModel",class extends Pg{}]],["vit",["ViTModel",class extends $g{}]],["fastvit",["FastViTModel",class extends xg{}]],["mobilevit",["MobileViTModel",class extends Sg{}]],["mobilevitv2",["MobileViTV2Model",class extends Eg{}]],["owlvit",["OwlViTModel",class extends Cg{}]],["owlv2",["Owlv2Model",class extends Ag{}]],["beit",["BeitModel",class extends Ig{}]],["deit",["DeiTModel",class extends Dg{}]],["convnext",["ConvNextModel",class extends Hg{}]],["convnextv2",["ConvNextV2Model",class extends qg{}]],["dinov2",["Dinov2Model",class extends jg{}]],["resnet",["ResNetModel",class extends Ng{}]],["swin",["SwinModel",class extends Ug{}]],["swin2sr",["Swin2SRModel",class extends Wg{}]],["donut-swin",["DonutSwinModel",class extends Gg{}]],["yolos",["YolosModel",class extends Kg{}]],["dpt",["DPTModel",class extends Fg{}]],["glpn",["GLPNModel",class extends Vg{}]],["hifigan",["SpeechT5HifiGan",class extends km{main_input_name="spectrogram"}]],["efficientnet",["EfficientNetModel",class extends __{}]],["mobilenet_v1",["MobileNetV1Model",class extends w_{}]],["mobilenet_v2",["MobileNetV2Model",class extends b_{}]],["mobilenet_v3",["MobileNetV3Model",class extends v_{}]],["mobilenet_v4",["MobileNetV4Model",class extends $_{}]]]),S_=new Map([["t5",["T5Model",class extends Wm{}]],["longt5",["LongT5Model",class extends Fm{}]],["mt5",["MT5Model",class extends Lm{}]],["bart",["BartModel",class extends Vm{}]],["mbart",["MBartModel",class extends Gm{}]],["marian",["MarianModel",class extends Jg{}]],["whisper",["WhisperModel",class extends Qm{}]],["m2m_100",["M2M100Model",class extends Zg{}]],["blenderbot",["BlenderbotModel",class extends Hm{}]],["blenderbot-small",["BlenderbotSmallModel",class extends qm{}]]]),E_=new Map([["bloom",["BloomModel",class extends wg{}]],["gpt2",["GPT2Model",class extends sg{}]],["gptj",["GPTJModel",class extends ug{}]],["gpt_bigcode",["GPTBigCodeModel",class extends dg{}]],["gpt_neo",["GPTNeoModel",class extends og{}]],["gpt_neox",["GPTNeoXModel",class extends lg{}]],["codegen",["CodeGenModel",class extends cg{}]],["llama",["LlamaModel",class extends pg{}]],["cohere",["CohereModel",class extends hg{}]],["gemma",["GemmaModel",class extends fg{}]],["openelm",["OpenELMModel",class extends mg{}]],["qwen2",["Qwen2Model",class extends gg{}]],["phi",["PhiModel",class extends _g{}]],["phi3",["Phi3Model",class extends yg{}]],["mpt",["MptModel",class extends bg{}]],["opt",["OPTModel",class extends vg{}]],["mistral",["MistralModel",class extends u_{}]],["starcoder2",["Starcoder2Model",class extends d_{}]],["falcon",["FalconModel",class extends c_{}]],["stablelm",["StableLmModel",class extends g_{}]]]),C_=new Map([["speecht5",["SpeechT5ForSpeechToText",class extends o_{}]],["whisper",["WhisperForConditionalGeneration",class extends Qm{_prepare_generation_config(e,t){return super._prepare_generation_config(e,t,lm)}_retrieve_init_tokens(e){const t=[e.decoder_start_token_id];let n=e.language;const r=e.task;if(e.is_multilingual){n||(console.warn("No language specified - defaulting to English (en)."),n="en");const a=`<|${$p(n)}|>`;t.push(e.lang_to_id[a]),t.push(e.task_to_id[r??"transcribe"])}else if(n||r)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!e.return_timestamps&&e.no_timestamps_token_id&&t.at(-1)!==e.no_timestamps_token_id?t.push(e.no_timestamps_token_id):e.return_timestamps&&t.at(-1)===e.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),t.pop()),t.filter((e=>null!=e))}async generate({inputs:e=null,generation_config:t=null,logits_processor:n=null,stopping_criteria:r=null,...a}){t=this._prepare_generation_config(t,a);const i=a.decoder_input_ids??this._retrieve_init_tokens(t);if(t.return_timestamps&&(n??=new Uf,n.push(new Vf(t,i))),t.begin_suppress_tokens&&(n??=new Uf,n.push(new Lf(t.begin_suppress_tokens,i.length))),t.return_token_timestamps){if(!t.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");"translate"===t.task&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),t.output_attentions=!0,t.return_dict_in_generate=!0}const s=await super.generate({inputs:e,generation_config:t,logits_processor:n,decoder_input_ids:i,...a});return t.return_token_timestamps&&(s.token_timestamps=this._extract_token_timestamps(s,t.alignment_heads,t.num_frames)),s}_extract_token_timestamps(e,t,n=null,r=.02){if(!e.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");null==n&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let a=this.config.median_filter_width;void 0===a&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),a=7);const i=e.cross_attentions,s=Array.from({length:this.config.decoder_layers},((e,t)=>mc(i.map((e=>e[t])),2))),o=gc(t.map((([e,t])=>{if(e>=s.length)throw new Error(`Layer index ${e} is out of bounds for cross attentions (length ${s.length}).`);return n?s[e].slice(null,t,null,[0,n]):s[e].slice(null,t)}))).transpose(1,0,2,3),[l,u]=function(e,t=null,n=1,r=!1){const a=e.data,i=e.dims;if(null===t){const t=a.reduce(((e,t)=>e+t),0)/a.length,r=Math.sqrt(a.reduce(((e,n)=>e+(n-t)**2),0)/(a.length-n)),i=new lc(e.type,[t],[]);return[new lc(e.type,[r],[]),i]}const s=_c(e,t=fc(t,i.length),r),o=s.data,l=i.slice();l[t]=1;const u=new a.constructor(a.length/i[t]);for(let e=0;e<a.length;++e){let n=0;for(let r=i.length-1,a=e,s=1;r>=0;--r){const e=i[r];r!==t&&(n+=a%e*s,s*=l[r]),a=Math.floor(a/e)}u[n]+=(a[e]-o[n])**2}for(let e=0;e<u.length;++e)u[e]=Math.sqrt(u[e]/(i[t]-n));return r||l.splice(t,1),[new lc(e.type,u,l),s]}(o,-2,0,!0),d=o.clone();for(let e=0;e<d.dims[0];++e){const t=d[e];for(let n=0;n<t.dims[0];++n){const r=t[n],i=l[e][n][0].data,s=u[e][n][0].data;for(let e=0;e<r.dims[0];++e){let t=r[e].data;for(let e=0;e<t.length;++e)t[e]=(t[e]-s[e])/i[e];t.set(j(t,a))}}}const c=[_c(d,1)],p=e.sequences.dims,h=new lc("float32",new Float32Array(p[0]*p[1]),p);for(let e=0;e<p[0];++e){const t=c[e].neg().squeeze_(0),[n,a]=Y(t.tolist()),i=E([1],Array.from({length:n.length-1},((e,t)=>n[t+1]-n[t]))).map((e=>!!e)),s=[];for(let e=0;e<i.length;++e)i[e]&&s.push(a[e]*r);h[e].data.set(s,1)}return h}}]]]),A_=new Map([["speecht5",["SpeechT5ForTextToSpeech",class extends o_{async generate_speech(e,t,{threshold:n=.5,minlenratio:r=0,maxlenratio:a=20,vocoder:i=null}={}){const s={input_ids:e},{encoder_outputs:o,encoder_attention_mask:l}=await ym(this,s),u=o.dims[1]/this.config.reduction_factor,d=Math.floor(u*a),c=Math.floor(u*r),p=this.config.num_mel_bins;let h=[],f=null,m=null,g=0;for(;;){++g;const e=gm(!!m);let r;r=m?m.output_sequence_out:new lc("float32",new Float32Array(p),[1,1,p]);let a={use_cache_branch:e,output_sequence:r,encoder_attention_mask:l,speaker_embeddings:t,encoder_hidden_states:o};this.addPastKeyValues(a,f),m=await hm(this.sessions.decoder_model_merged,a),f=this.getPastKeyValues(m,f);const{prob:i,spectrum:s}=m;if(h.push(s),g>=c&&(Array.from(i.data).filter((e=>e>=n)).length>0||g>=d))break}const _=mc(h),{waveform:y}=await hm(i.sessions.model,{spectrogram:_});return{spectrogram:_,waveform:y}}}]]]),I_=new Map([["vits",["VitsModel",f_]],["musicgen",["MusicgenForConditionalGeneration",y_]]]),T_=new Map([["bert",["BertForSequenceClassification",class extends Em{async _call(e){return new ay(await super._call(e))}}]],["roformer",["RoFormerForSequenceClassification",class extends Am{async _call(e){return new ay(await super._call(e))}}]],["electra",["ElectraForSequenceClassification",class extends Tm{async _call(e){return new ay(await super._call(e))}}]],["esm",["EsmForSequenceClassification",class extends Pm{async _call(e){return new ay(await super._call(e))}}]],["convbert",["ConvBertForSequenceClassification",class extends Im{async _call(e){return new ay(await super._call(e))}}]],["camembert",["CamembertForSequenceClassification",class extends zm{async _call(e){return new ay(await super._call(e))}}]],["deberta",["DebertaForSequenceClassification",class extends Om{async _call(e){return new ay(await super._call(e))}}]],["deberta-v2",["DebertaV2ForSequenceClassification",class extends Mm{async _call(e){return new ay(await super._call(e))}}]],["mpnet",["MPNetForSequenceClassification",class extends Dm{async _call(e){return new ay(await super._call(e))}}]],["albert",["AlbertForSequenceClassification",class extends Um{async _call(e){return new ay(await super._call(e))}}]],["distilbert",["DistilBertForSequenceClassification",class extends Rm{async _call(e){return new ay(await super._call(e))}}]],["roberta",["RobertaForSequenceClassification",class extends jm{async _call(e){return new ay(await super._call(e))}}]],["xlm",["XLMForSequenceClassification",class extends Km{async _call(e){return new ay(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForSequenceClassification",class extends Ym{async _call(e){return new ay(await super._call(e))}}]],["bart",["BartForSequenceClassification",class extends Vm{async _call(e){return new ay(await super._call(e))}}]],["mbart",["MBartForSequenceClassification",class extends Gm{async _call(e){return new ay(await super._call(e))}}]],["mobilebert",["MobileBertForSequenceClassification",class extends Bm{async _call(e){return new ay(await super._call(e))}}]],["squeezebert",["SqueezeBertForSequenceClassification",class extends Nm{async _call(e){return new ay(await super._call(e))}}]]]),z_=new Map([["bert",["BertForTokenClassification",class extends Em{async _call(e){return new sy(await super._call(e))}}]],["roformer",["RoFormerForTokenClassification",class extends Am{async _call(e){return new sy(await super._call(e))}}]],["electra",["ElectraForTokenClassification",class extends Tm{async _call(e){return new sy(await super._call(e))}}]],["esm",["EsmForTokenClassification",class extends Pm{async _call(e){return new sy(await super._call(e))}}]],["convbert",["ConvBertForTokenClassification",class extends Im{async _call(e){return new sy(await super._call(e))}}]],["camembert",["CamembertForTokenClassification",class extends zm{async _call(e){return new sy(await super._call(e))}}]],["deberta",["DebertaForTokenClassification",class extends Om{async _call(e){return new sy(await super._call(e))}}]],["deberta-v2",["DebertaV2ForTokenClassification",class extends Mm{async _call(e){return new sy(await super._call(e))}}]],["mpnet",["MPNetForTokenClassification",class extends Dm{async _call(e){return new sy(await super._call(e))}}]],["distilbert",["DistilBertForTokenClassification",class extends Rm{async _call(e){return new sy(await super._call(e))}}]],["roberta",["RobertaForTokenClassification",class extends jm{async _call(e){return new sy(await super._call(e))}}]],["xlm",["XLMForTokenClassification",class extends Km{async _call(e){return new sy(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForTokenClassification",class extends Ym{async _call(e){return new sy(await super._call(e))}}]]]),O_=new Map([["t5",["T5ForConditionalGeneration",class extends Wm{}]],["longt5",["LongT5ForConditionalGeneration",class extends Fm{}]],["mt5",["MT5ForConditionalGeneration",class extends Lm{}]],["bart",["BartForConditionalGeneration",class extends Vm{}]],["mbart",["MBartForConditionalGeneration",class extends Gm{}]],["marian",["MarianMTModel",class extends Jg{}]],["m2m_100",["M2M100ForConditionalGeneration",class extends Zg{}]],["blenderbot",["BlenderbotForConditionalGeneration",class extends Hm{}]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",class extends qm{}]]]),M_=new Map([["bloom",["BloomForCausalLM",class extends wg{}]],["gpt2",["GPT2LMHeadModel",class extends sg{}]],["gptj",["GPTJForCausalLM",class extends ug{}]],["gpt_bigcode",["GPTBigCodeForCausalLM",class extends dg{}]],["gpt_neo",["GPTNeoForCausalLM",class extends og{}]],["gpt_neox",["GPTNeoXForCausalLM",class extends lg{}]],["codegen",["CodeGenForCausalLM",class extends cg{}]],["llama",["LlamaForCausalLM",class extends pg{}]],["cohere",["CohereForCausalLM",class extends hg{}]],["gemma",["GemmaForCausalLM",class extends fg{}]],["openelm",["OpenELMForCausalLM",class extends mg{}]],["qwen2",["Qwen2ForCausalLM",class extends gg{}]],["phi",["PhiForCausalLM",class extends _g{}]],["phi3",["Phi3ForCausalLM",class extends yg{}]],["mpt",["MptForCausalLM",class extends bg{}]],["opt",["OPTForCausalLM",class extends vg{}]],["mbart",["MBartForCausalLM",class extends Gm{}]],["mistral",["MistralForCausalLM",class extends u_{}]],["starcoder2",["Starcoder2ForCausalLM",class extends d_{}]],["falcon",["FalconForCausalLM",class extends c_{}]],["trocr",["TrOCRForCausalLM",class extends l_{}]],["stablelm",["StableLmForCausalLM",class extends g_{}]]]),R_=new Map([["bert",["BertForMaskedLM",class extends Em{async _call(e){return new oy(await super._call(e))}}]],["roformer",["RoFormerForMaskedLM",class extends Am{async _call(e){return new oy(await super._call(e))}}]],["electra",["ElectraForMaskedLM",class extends Tm{async _call(e){return new oy(await super._call(e))}}]],["esm",["EsmForMaskedLM",class extends Pm{async _call(e){return new oy(await super._call(e))}}]],["convbert",["ConvBertForMaskedLM",class extends Im{async _call(e){return new oy(await super._call(e))}}]],["camembert",["CamembertForMaskedLM",class extends zm{async _call(e){return new oy(await super._call(e))}}]],["deberta",["DebertaForMaskedLM",class extends Om{async _call(e){return new oy(await super._call(e))}}]],["deberta-v2",["DebertaV2ForMaskedLM",class extends Mm{async _call(e){return new oy(await super._call(e))}}]],["mpnet",["MPNetForMaskedLM",class extends Dm{async _call(e){return new oy(await super._call(e))}}]],["albert",["AlbertForMaskedLM",class extends Um{async _call(e){return new oy(await super._call(e))}}]],["distilbert",["DistilBertForMaskedLM",class extends Rm{async _call(e){return new oy(await super._call(e))}}]],["roberta",["RobertaForMaskedLM",class extends jm{async _call(e){return new oy(await super._call(e))}}]],["xlm",["XLMWithLMHeadModel",class extends Km{async _call(e){return new oy(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForMaskedLM",class extends Ym{async _call(e){return new oy(await super._call(e))}}]],["mobilebert",["MobileBertForMaskedLM",class extends Bm{async _call(e){return new oy(await super._call(e))}}]],["squeezebert",["SqueezeBertForMaskedLM",class extends Nm{async _call(e){return new oy(await super._call(e))}}]]]),P_=new Map([["bert",["BertForQuestionAnswering",class extends Em{async _call(e){return new ly(await super._call(e))}}]],["roformer",["RoFormerForQuestionAnswering",class extends Am{async _call(e){return new ly(await super._call(e))}}]],["electra",["ElectraForQuestionAnswering",class extends Tm{async _call(e){return new ly(await super._call(e))}}]],["convbert",["ConvBertForQuestionAnswering",class extends Im{async _call(e){return new ly(await super._call(e))}}]],["camembert",["CamembertForQuestionAnswering",class extends zm{async _call(e){return new ly(await super._call(e))}}]],["deberta",["DebertaForQuestionAnswering",class extends Om{async _call(e){return new ly(await super._call(e))}}]],["deberta-v2",["DebertaV2ForQuestionAnswering",class extends Mm{async _call(e){return new ly(await super._call(e))}}]],["mpnet",["MPNetForQuestionAnswering",class extends Dm{async _call(e){return new ly(await super._call(e))}}]],["albert",["AlbertForQuestionAnswering",class extends Um{async _call(e){return new ly(await super._call(e))}}]],["distilbert",["DistilBertForQuestionAnswering",class extends Rm{async _call(e){return new ly(await super._call(e))}}]],["roberta",["RobertaForQuestionAnswering",class extends jm{async _call(e){return new ly(await super._call(e))}}]],["xlm",["XLMForQuestionAnswering",class extends Km{async _call(e){return new ly(await super._call(e))}}]],["xlm-roberta",["XLMRobertaForQuestionAnswering",class extends Ym{async _call(e){return new ly(await super._call(e))}}]],["mobilebert",["MobileBertForQuestionAnswering",class extends Bm{async _call(e){return new ly(await super._call(e))}}]],["squeezebert",["SqueezeBertForQuestionAnswering",class extends Nm{async _call(e){return new ly(await super._call(e))}}]]]),B_=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jm]]]),D_=new Map([["llava",["LlavaForConditionalGeneration",eg]],["moondream1",["Moondream1ForConditionalGeneration",class extends eg{}]],["florence2",["Florence2ForConditionalGeneration",class extends tg{_merge_input_ids_with_image_features({inputs_embeds:e,image_features:t,input_ids:n,attention_mask:r}){return{inputs_embeds:mc([t,e],1),attention_mask:mc([wc(t.dims.slice(0,2)),r],1)}}async _prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:n,attention_mask:r}){if(!e&&!t)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let a,i;return e&&(a=await this.encode_text({input_ids:e})),t&&(i=await this.encode_image({pixel_values:t})),a&&i?({inputs_embeds:n,attention_mask:r}=this._merge_input_ids_with_image_features({inputs_embeds:a,image_features:i,input_ids:e,attention_mask:r})):n=a||i,{inputs_embeds:n,attention_mask:r}}async forward({input_ids:e,pixel_values:t,attention_mask:n,decoder_input_ids:r,decoder_attention_mask:a,encoder_outputs:i,past_key_values:s,inputs_embeds:o,decoder_inputs_embeds:l}){if(o||({inputs_embeds:o,attention_mask:n}=await this._prepare_inputs_embeds({input_ids:e,pixel_values:t,inputs_embeds:o,attention_mask:n})),!i){let{last_hidden_state:e}=await ym(this,{inputs_embeds:o,attention_mask:n});i=e}if(!l){if(!r)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");l=await this.encode_text({input_ids:r})}const u={inputs_embeds:l,attention_mask:a,encoder_attention_mask:n,encoder_hidden_states:i,past_key_values:s};return await wm(this,u,!0)}}]]]),N_=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Jm]]]),U_=new Map([["vit",["ViTForImageClassification",class extends $g{async _call(e){return new ay(await super._call(e))}}]],["fastvit",["FastViTForImageClassification",class extends xg{async _call(e){return new ay(await super._call(e))}}]],["mobilevit",["MobileViTForImageClassification",class extends Sg{async _call(e){return new ay(await super._call(e))}}]],["mobilevitv2",["MobileViTV2ForImageClassification",class extends Eg{async _call(e){return new ay(await super._call(e))}}]],["beit",["BeitForImageClassification",class extends Ig{async _call(e){return new ay(await super._call(e))}}]],["deit",["DeiTForImageClassification",class extends Dg{async _call(e){return new ay(await super._call(e))}}]],["convnext",["ConvNextForImageClassification",class extends Hg{async _call(e){return new ay(await super._call(e))}}]],["convnextv2",["ConvNextV2ForImageClassification",class extends qg{async _call(e){return new ay(await super._call(e))}}]],["dinov2",["Dinov2ForImageClassification",class extends jg{async _call(e){return new ay(await super._call(e))}}]],["resnet",["ResNetForImageClassification",class extends Ng{async _call(e){return new ay(await super._call(e))}}]],["swin",["SwinForImageClassification",class extends Ug{async _call(e){return new ay(await super._call(e))}}]],["segformer",["SegformerForImageClassification",class extends m_{}]],["efficientnet",["EfficientNetForImageClassification",class extends __{async _call(e){return new ay(await super._call(e))}}]],["mobilenet_v1",["MobileNetV1ForImageClassification",class extends w_{async _call(e){return new ay(await super._call(e))}}]],["mobilenet_v2",["MobileNetV2ForImageClassification",class extends b_{async _call(e){return new ay(await super._call(e))}}]],["mobilenet_v3",["MobileNetV3ForImageClassification",class extends v_{async _call(e){return new ay(await super._call(e))}}]],["mobilenet_v4",["MobileNetV4ForImageClassification",class extends $_{async _call(e){return new ay(await super._call(e))}}]]]),W_=new Map([["detr",["DetrForObjectDetection",class extends Tg{async _call(e){return new zg(await super._call(e))}}]],["rt_detr",["RTDetrForObjectDetection",class extends Mg{async _call(e){return new Rg(await super._call(e))}}]],["table-transformer",["TableTransformerForObjectDetection",class extends Pg{async _call(e){return new Bg(await super._call(e))}}]],["yolos",["YolosForObjectDetection",class extends Kg{async _call(e){return new Yg(await super._call(e))}}]]]),F_=new Map([["owlvit",["OwlViTForObjectDetection",class extends Cg{}]],["owlv2",["Owlv2ForObjectDetection",class extends Ag{}]]]),L_=new Map([["detr",["DetrForSegmentation",class extends Tg{async _call(e){return new Og(await super._call(e))}}]],["clipseg",["CLIPSegForImageSegmentation",class extends ig{}]]]),V_=new Map([["segformer",["SegformerForSemanticSegmentation",class extends m_{}]]]),G_=new Map([["sam",["SamModel",class extends Xg{async get_image_embeddings({pixel_values:e}){return await ym(this,{pixel_values:e})}async forward(e){if(e.image_embeddings&&e.image_positional_embeddings||(e={...e,...await this.get_image_embeddings(e)}),!e.input_labels&&e.input_points){const t=e.input_points.dims.slice(0,-1),n=t.reduce(((e,t)=>e*t),1);e.input_labels=new lc("int64",new BigInt64Array(n).fill(1n),t)}const t={image_embeddings:e.image_embeddings,image_positional_embeddings:e.image_positional_embeddings};return e.input_points&&(t.input_points=e.input_points),e.input_labels&&(t.input_labels=e.input_labels),e.input_boxes&&(t.input_boxes=e.input_boxes),await hm(this.sessions.prompt_encoder_mask_decoder,t)}async _call(e){return new Qg(await super._call(e))}}]]]),H_=new Map([["wav2vec2",["Wav2Vec2ForCTC",class extends e_{async _call(e){return new uy(await super._call(e))}}]],["wav2vec2-bert",["Wav2Vec2BertForCTC",class extends i_{async _call(e){return new uy(await super._call(e))}}]],["unispeech",["UniSpeechForCTC",class extends r_{async _call(e){return new uy(await super._call(e))}}]],["unispeech-sat",["UniSpeechSatForCTC",class extends a_{async _call(e){return new uy(await super._call(e))}}]],["wavlm",["WavLMForCTC",class extends s_{async _call(e){return new uy(await super._call(e))}}]],["hubert",["HubertForCTC",class extends e_{async _call(e){return new uy(await super._call(e))}}]]]),q_=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",class extends e_{async _call(e){return new ay(await super._call(e))}}]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",class extends i_{async _call(e){return new ay(await super._call(e))}}]],["unispeech",["UniSpeechForSequenceClassification",class extends r_{async _call(e){return new ay(await super._call(e))}}]],["unispeech-sat",["UniSpeechSatForSequenceClassification",class extends a_{async _call(e){return new ay(await super._call(e))}}]],["wavlm",["WavLMForSequenceClassification",class extends s_{async _call(e){return new ay(await super._call(e))}}]],["hubert",["HubertForSequenceClassification",class extends e_{async _call(e){return new ay(await super._call(e))}}]],["audio-spectrogram-transformer",["ASTForAudioClassification",class extends Xm{}]]]),j_=new Map([["wavlm",["WavLMForXVector",class extends s_{async _call(e){return new iy(await super._call(e))}}]]]),K_=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",class extends a_{async _call(e){return new sy(await super._call(e))}}]],["wavlm",["WavLMForAudioFrameClassification",class extends s_{async _call(e){return new sy(await super._call(e))}}]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",class extends e_{async _call(e){return new sy(await super._call(e))}}]],["pyannote",["PyAnnoteForAudioFrameClassification",class extends t_{async _call(e){return new sy(await super._call(e))}}]]]),Y_=new Map([["vitmatte",["VitMatteForImageMatting",class extends kg{async _call(e){return new dy(await super._call(e))}}]]]),X_=new Map([["swin2sr",["Swin2SRForImageSuperResolution",class extends Wg{}]]]),Q_=new Map([["dpt",["DPTForDepthEstimation",class extends Fg{}]],["depth_anything",["DepthAnythingForDepthEstimation",class extends Lg{}]],["glpn",["GLPNForDepthEstimation",class extends Vg{}]]]),J_=new Map([["clip",["CLIPVisionModelWithProjection",class extends ng{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}]],["siglip",["SiglipVisionModel",class extends ng{static async from_pretrained(e,t={}){return t.model_file_name??="vision_model",super.from_pretrained(e,t)}}]]]),Z_=[[k_,0],[S_,1],[E_,4],[T_,0],[z_,0],[O_,2],[C_,2],[M_,4],[R_,0],[P_,0],[B_,3],[D_,6],[U_,0],[L_,0],[V_,0],[Y_,0],[X_,0],[Q_,0],[W_,0],[F_,0],[G_,5],[H_,0],[q_,0],[A_,2],[I_,0],[j_,0],[K_,0],[J_,0]];for(const[e,t]of Z_)for(const[n,r]of e.values())um.set(n,t),cm.set(r,n),dm.set(n,r);const ey=[["MusicgenForConditionalGeneration",y_,7],["CLIPTextModelWithProjection",class extends ng{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}},0],["SiglipTextModel",class extends rg{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}},0],["ClapTextModelWithProjection",class extends p_{static async from_pretrained(e,t={}){return t.model_file_name??="text_model",super.from_pretrained(e,t)}},0],["ClapAudioModelWithProjection",class extends p_{static async from_pretrained(e,t={}){return t.model_file_name??="audio_model",super.from_pretrained(e,t)}},0]];for(const[e,t,n]of ey)um.set(e,n),cm.set(t,e),dm.set(e,t);class ty extends x_{static MODEL_CLASS_MAPPINGS=Z_.map((e=>e[0]));static BASE_IF_FAIL=!0}class ny extends x_{static MODEL_CLASS_MAPPINGS=[T_]}class ry extends x_{static MODEL_CLASS_MAPPINGS=[O_]}class ay extends Sm{constructor({logits:e}){super(),this.logits=e}}class iy extends Sm{constructor({logits:e,embeddings:t}){super(),this.logits=e,this.embeddings=t}}class sy extends Sm{constructor({logits:e}){super(),this.logits=e}}class oy extends Sm{constructor({logits:e}){super(),this.logits=e}}class ly extends Sm{constructor({start_logits:e,end_logits:t}){super(),this.start_logits=e,this.end_logits=t}}class uy extends Sm{constructor({logits:e}){super(),this.logits=e}}class dy extends Sm{constructor({alphas:e}){super(),this.alphas=e}}class cy extends Sm{constructor({waveform:e,spectrogram:t}){super(),this.waveform=e,this.spectrogram=t}}var py=n(806);const hy="undefined"!=typeof self,fy=hy&&"DedicatedWorkerGlobalScope"===self.constructor.name;let my,gy,_y;if(hy)my=(e,t)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(e,t)},_y=self.createImageBitmap,gy=self.ImageData;else{if(!py)throw new Error("Unable to load image processing library.");_y=async e=>{const t=(await e.metadata()).channels,{data:n,info:r}=await e.rotate().raw().toBuffer({resolveWithObject:!0}),a=new by(new Uint8ClampedArray(n),r.width,r.height,r.channels);return void 0!==t&&t!==r.channels&&a.convert(t),a}}const yy={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},wy=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class by{constructor(e,t,n,r){this.data=e,this.width=t,this.height=n,this.channels=r}get size(){return[this.width,this.height]}static async read(e){if(e instanceof by)return e;if("string"==typeof e||e instanceof URL)return await this.fromURL(e);throw new Error("Unsupported input type: "+typeof e)}static fromCanvas(e){if(!hy)throw new Error("fromCanvas() is only supported in browser environments.");const t=e.getContext("2d").getImageData(0,0,e.width,e.height).data;return new by(t,e.width,e.height,4)}static async fromURL(e){const t=await R(e);if(200!==t.status)throw new Error(`Unable to read image from "${e}" (${t.status} ${t.statusText})`);const n=await t.blob();return this.fromBlob(n)}static async fromBlob(e){if(hy){const t=await _y(e),n=my(t.width,t.height).getContext("2d");return n.drawImage(t,0,0),new this(n.getImageData(0,0,t.width,t.height).data,t.width,t.height,4)}{const t=py(await e.arrayBuffer());return await _y(t)}}static fromTensor(e,t="CHW"){if(3!==e.dims.length)throw new Error(`Tensor should have 3 dimensions, but has ${e.dims.length} dimensions.`);if("CHW"===t)e=e.transpose(1,2,0);else if("HWC"!==t)throw new Error(`Unsupported channel format: ${t}`);if(!(e.data instanceof Uint8ClampedArray||e.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${e.type}`);switch(e.dims[2]){case 1:case 2:case 3:case 4:return new by(e.data,e.dims[1],e.dims[0],e.dims[2]);default:throw new Error(`Unsupported number of channels: ${e.dims[2]}`)}}grayscale(){if(1===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let t=0,n=0;t<this.data.length;t+=this.channels){const r=this.data[t],a=this.data[t+1],i=this.data[t+2];e[n++]=Math.round(.2989*r+.587*a+.114*i)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,1)}rgb(){if(3===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t];break;case 4:for(let t=0,n=0;t<this.data.length;t+=4)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,3)}rgba(){if(4===this.channels)return this;const e=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let t=0,n=0;t<this.data.length;++t)e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=this.data[t],e[n++]=255;break;case 3:for(let t=0,n=0;t<this.data.length;t+=3)e[n++]=this.data[t],e[n++]=this.data[t+1],e[n++]=this.data[t+2],e[n++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(e,this.width,this.height,4)}async resize(e,t,{resample:n=2}={}){let r=yy[n]??n;if(hy){const n=this.channels,r=this.toCanvas(),a=my(e,t).getContext("2d");return a.drawImage(r,0,0,e,t),new by(a.getImageData(0,0,e,t).data,e,t,4).convert(n)}{let n=this.toSharp();switch(r){case"box":case"hamming":"box"!==r&&"hamming"!==r||(console.warn(`Resampling method ${r} is not yet supported. Using bilinear instead.`),r="bilinear");case"nearest":case"bilinear":case"bicubic":n=n.affine([e/this.width,0,0,t/this.height],{interpolator:r});break;case"lanczos":n=n.resize({width:e,height:t,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${r} is not supported.`)}return await _y(n)}}async pad([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.max(n,0),r=Math.max(r,0),0===e&&0===t&&0===n&&0===r)return this;if(hy){const a=this.channels,i=this.toCanvas(),s=this.width+e+t,o=this.height+n+r,l=my(s,o).getContext("2d");return l.drawImage(i,0,0,this.width,this.height,e,n,s,o),new by(l.getImageData(0,0,s,o).data,s,o,4).convert(a)}{const a=this.toSharp().extend({left:e,right:t,top:n,bottom:r});return await _y(a)}}async crop([e,t,n,r]){if(e=Math.max(e,0),t=Math.max(t,0),n=Math.min(n,this.width-1),r=Math.min(r,this.height-1),0===e&&0===t&&n===this.width-1&&r===this.height-1)return this;const a=n-e+1,i=r-t+1;if(hy){const n=this.channels,r=this.toCanvas(),s=my(a,i).getContext("2d");return s.drawImage(r,e,t,a,i,0,0,a,i),new by(s.getImageData(0,0,a,i).data,a,i,4).convert(n)}{const n=this.toSharp().extract({left:e,top:t,width:a,height:i});return await _y(n)}}async center_crop(e,t){if(this.width===e&&this.height===t)return this;const n=(this.width-e)/2,r=(this.height-t)/2;if(hy){const a=this.channels,i=this.toCanvas(),s=my(e,t).getContext("2d");let o=0,l=0,u=0,d=0;return n>=0?o=n:u=-n,r>=0?l=r:d=-r,s.drawImage(i,o,l,e,t,u,d,e,t),new by(s.getImageData(0,0,e,t).data,e,t,4).convert(a)}{let a=this.toSharp();if(n>=0&&r>=0)a=a.extract({left:Math.floor(n),top:Math.floor(r),width:e,height:t});else if(n<=0&&r<=0){const i=Math.floor(-r),s=Math.floor(-n);a=a.extend({top:i,left:s,right:e-this.width-s,bottom:t-this.height-i})}else{let i=[0,0],s=0;r<0?(i[0]=Math.floor(-r),i[1]=t-this.height-i[0]):s=Math.floor(r);let o=[0,0],l=0;n<0?(o[0]=Math.floor(-n),o[1]=e-this.width-o[0]):l=Math.floor(n),a=a.extend({top:i[0],bottom:i[1],left:o[0],right:o[1]}).extract({left:l,top:s,width:e,height:t})}return await _y(a)}}async toBlob(e="image/png",t=1){if(!hy)throw new Error("toBlob() is only supported in browser environments.");const n=this.toCanvas();return await n.convertToBlob({type:e,quality:t})}toTensor(e="CHW"){let t=new lc("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if("HWC"===e);else{if("CHW"!==e)throw new Error(`Unsupported channel format: ${e}`);t=t.permute(2,0,1)}return t}toCanvas(){if(!hy)throw new Error("toCanvas() is only supported in browser environments.");const e=this.clone().rgba(),t=my(e.width,e.height),n=new gy(e.data,e.width,e.height);return t.getContext("2d").putImageData(n,0,0),t}_update(e,t,n,r=null){return this.data=e,this.width=t,this.height=n,null!==r&&(this.channels=r),this}clone(){return new by(this.data.slice(),this.width,this.height,this.channels)}convert(e){if(this.channels===e)return this;switch(e){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(e){if(!hy){if(b.useFS){const t=this.toSharp();return await t.toFile(e)}throw new Error("Unable to save the image because filesystem is disabled in this environment.")}{if(fy)throw new Error("Unable to save an image from a Web Worker.");const t=e.split(".").pop().toLowerCase(),n=wy.get(t)??"image/png",r=await this.toBlob(n),a=URL.createObjectURL(r),i=document.createElement("a");i.href=a,i.download=e,i.click(),i.remove()}}toSharp(){if(hy)throw new Error("toSharp() is only supported in server-side environments.");return py(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}function vy(e,t){if(e<1)return new Float64Array;if(1===e)return new Float64Array([1]);const n=1-t,r=2*Math.PI/(e-1),a=new Float64Array(e);for(let i=0;i<e;++i)a[i]=t-n*Math.cos(i*r);return a}function $y(e){return vy(e,.5)}const xy={htk:e=>2595*Math.log10(1+e/700),kaldi:e=>1127*Math.log(1+e/700),slaney:(e,t=1e3,n=15,r=27/Math.log(6.4))=>e>=t?n+Math.log(e/t)*r:3*e/200};function ky(e,t="htk"){const n=xy[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}const Sy={htk:e=>700*(10**(e/2595)-1),kaldi:e=>700*(Math.exp(e/1127)-1),slaney:(e,t=1e3,n=15,r=Math.log(6.4)/27)=>e>=n?t*Math.exp(r*(e-n)):200*e/3};function Ey(e,t,n){const r=(t-e)/(n-1);return Float64Array.from({length:n},((t,n)=>e+r*n))}function Cy(e,t,n,r,a,i=null,s="htk",o=!1){if(null!==i&&"slaney"!==i)throw new Error('norm must be one of null or "slaney"');const l=Ey(ky(n,s),ky(r,s),t+2);let u,d=function(e,t="htk"){const n=Sy[t];if(!n)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return"number"==typeof e?n(e):e.map((e=>n(e)))}(l,s);if(o){const t=a/(2*e);u=ky(Float64Array.from({length:e},((e,n)=>n*t)),s),d=l}else u=Ey(0,Math.floor(a/2),e);const c=function(e,t){const n=Float64Array.from({length:t.length-1},((e,n)=>t[n+1]-t[n])),r=Array.from({length:e.length},(()=>new Array(t.length)));for(let n=0;n<e.length;++n){const a=r[n];for(let r=0;r<t.length;++r)a[r]=t[r]-e[n]}const a=t.length-2,i=Array.from({length:a},(()=>new Array(e.length)));for(let t=0;t<e.length;++t){const e=r[t];for(let r=0;r<a;++r){const a=-e[r]/n[r],s=e[r+2]/n[r+1];i[r][t]=Math.max(0,Math.min(a,s))}}return i}(u,d);if(null!==i&&"slaney"===i)for(let n=0;n<t;++n){const t=c[n],r=2/(d[n+2]-d[n]);for(let n=0;n<e;++n)t[n]*=r}return c}function Ay(e,t,n,r,a){if(n<=0)throw new Error("reference must be greater than zero");if(r<=0)throw new Error("min_value must be greater than zero");n=Math.max(r,n);const i=Math.log10(n);for(let n=0;n<e.length;++n)e[n]=t*Math.log10(Math.max(r,e[n])-i);if(null!==a){if(a<=0)throw new Error("db_range must be greater than zero");const t=L(e)[0]-a;for(let n=0;n<e.length;++n)e[n]=Math.max(e[n],t)}return e}async function Iy(e,t,n,r,{fft_length:a=null,power:i=1,center:s=!0,pad_mode:o="reflect",onesided:l=!0,preemphasis:u=null,mel_filters:d=null,mel_floor:c=1e-10,log_mel:p=null,reference:h=1,min_value:f=1e-10,db_range:m=null,remove_dc_offset:g=null,min_num_frames:_=null,max_num_frames:y=null,do_pad:w=!0,transpose:b=!1}={}){const v=t.length;if(null===a&&(a=n),n>a)throw Error(`frame_length (${n}) may not be larger than fft_length (${a})`);if(v!==n)throw new Error(`Length of the window (${v}) must equal frame_length (${n})`);if(r<=0)throw new Error("hop_length must be greater than zero");if(null===i&&null!==d)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(s){if("reflect"!==o)throw new Error(`pad_mode="${o}" not implemented yet.`);const t=Math.floor((a-1)/2)+1;e=function(e,t,n){const r=new e.constructor(e.length+t+n),a=e.length-1;for(let n=0;n<e.length;++n)r[t+n]=e[n];for(let n=1;n<=t;++n)r[t-n]=e[A(n,a)];for(let i=1;i<=n;++i)r[a+t+i]=e[A(a-i,a)];return r}(e,t,t)}let $=Math.floor(1+Math.floor((e.length-n)/r));null!==_&&$<_&&($=_);const x=l?Math.floor(a/2)+1:a;let k=$,S=$;null!==y&&(y>$?w&&(S=y):S=k=y);const E=new q(a),C=new Float64Array(a),I=new Float64Array(E.outputBufferSize),T=new Float32Array(x*S);for(let a=0;a<k;++a){const i=a*r,s=Math.min(e.length-i,n);s!==n&&C.fill(0,0,n);for(let t=0;t<s;++t)C[t]=e[i+t];if(g){let e=0;for(let t=0;t<s;++t)e+=C[t];const t=e/s;for(let e=0;e<s;++e)C[e]-=t}if(null!==u){for(let e=s-1;e>=1;--e)C[e]-=u*C[e-1];C[0]*=1-u}for(let e=0;e<t.length;++e)C[e]*=t[e];E.realTransform(I,C);for(let e=0;e<x;++e){const t=e<<1;T[e*S+a]=I[t]**2+I[t+1]**2}}if(null!==i&&2!==i){const e=2/i;for(let t=0;t<T.length;++t)T[t]**=e}const z=d.length;let O=await async function(e,t){const n=await sc.matmul;return await n({a:e,b:t})}(new lc("float32",d.flat(),[z,x]),new lc("float32",T,[x,S]));b&&(O=O.transpose(1,0));const M=O.data;for(let e=0;e<M.length;++e)M[e]=Math.max(c,M[e]);if(null!==i&&null!==p){const e=Math.min(M.length,k*z);switch(p){case"log":for(let t=0;t<e;++t)M[t]=Math.log(M[t]);break;case"log10":for(let t=0;t<e;++t)M[t]=Math.log10(M[t]);break;case"dB":if(1===i)!function(e,t=1,n=1e-5,r=null){Ay(e,20,t,n,r)}(M,h,f,m);else{if(2!==i)throw new Error(`Cannot use log_mel option '${p}' with power ${i}`);!function(e,t=1,n=1e-10,r=null){Ay(e,10,t,n,r)}(M,h,f,m)}break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${p}'`)}}return O}function Ty(e,t,{periodic:n=!0,frame_length:r=null,center:a=!0}={}){const i=n?e+1:e;let s;switch(t){case"boxcar":s=new Float64Array(i).fill(1);break;case"hann":case"hann_window":s=$y(i);break;case"hamming":s=function(e){return vy(e,.54)}(i);break;case"povey":s=$y(i).map((e=>Math.pow(e,.85)));break;default:throw new Error(`Unknown window type ${t}.`)}if(n&&(s=s.subarray(0,e)),null===r)return s;if(e>r)throw new Error(`Length of the window (${e}) may not be larger than frame_length (${r})`);return s}function zy([e,t,n,r]){return[e-n/2,t-r/2,e+n/2,t+r/2]}function Oy(e,t=.5,n=null,r=!1){const a=e.logits,i=e.pred_boxes,[s,o,l]=a.dims;if(null!==n&&n.length!==s)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let u=[];for(let e=0;e<s;++e){let s=null!==n?n[e]:null,d={boxes:[],classes:[],scores:[]},c=a[e],p=i[e];for(let e=0;e<o;++e){let n,a=c[e],i=[];if(r){n=a.sigmoid().data;for(let e=0;e<n.length;++e)n[e]>t&&i.push(e)}else{let e=L(a.data)[1];if(e===l-1)continue;if(n=W(a.data),n[e]<t)continue;i.push(e)}for(const t of i){let r=p[e].data;r=zy(r),null!==s&&(r=r.map(((e,t)=>e*s[(t+1)%2]))),d.boxes.push(r),d.classes.push(t),d.scores.push(n[t])}}u.push(d)}return u}function My(e,t){if(!(e instanceof Float32Array||e instanceof Float64Array))throw new Error(`${t} expects input to be a Float32Array or a Float64Array, but got ${e?.constructor?.name??typeof e} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}function Ry(e,t,n=0,r=null){const a=e/t;let i=function(e){const t=Math.round(e);return Math.abs(e)%1==.5?t%2==0?t:t-1:t}(a)*t;return null!==r&&i>r&&(i=Math.floor(a)*t),i<n&&(i=Math.ceil(a)*t),i}function Py([e,t],n){return[Math.max(Math.floor(e/n),1)*n,Math.max(Math.floor(t/n),1)*n]}class By extends ${constructor(e){super(),this.config=e}}class Dy extends By{constructor(e){super(e),this.image_mean=this.config.image_mean??this.config.mean,this.image_std=this.config.image_std??this.config.std,this.resample=this.config.resample??2,this.do_rescale=this.config.do_rescale??!0,this.rescale_factor=this.config.rescale_factor??1/255,this.do_normalize=this.config.do_normalize,this.do_resize=this.config.do_resize,this.do_thumbnail=this.config.do_thumbnail,this.size=this.config.size,this.size_divisibility=this.config.size_divisibility??this.config.size_divisor,this.do_center_crop=this.config.do_center_crop,this.crop_size=this.config.crop_size,this.do_convert_rgb=this.config.do_convert_rgb??!0,this.do_crop_margin=this.config.do_crop_margin,this.pad_size=this.config.pad_size,this.do_pad=this.config.do_pad,this.do_pad&&!this.pad_size&&this.size&&void 0!==this.size.width&&void 0!==this.size.height&&(this.pad_size=this.size),this.do_flip_channel_order=this.config.do_flip_channel_order??!1}async thumbnail(e,t,n=2){const r=e.height,a=e.width,i=t.height,s=t.width;let o=Math.min(r,i),l=Math.min(a,s);return o===r&&l===a?e:(r>a?l=Math.floor(a*o/r):a>r&&(o=Math.floor(r*l/a)),await e.resize(l,o,{resample:n}))}async crop_margin(e,t=200){const n=e.clone().grayscale(),r=F(n.data)[0],a=L(n.data)[0]-r;if(0===a)return e;const i=t/255;let s=n.width,o=n.height,l=0,u=0;const d=n.data;for(let e=0;e<n.height;++e){const t=e*n.width;for(let c=0;c<n.width;++c)(d[t+c]-r)/a<i&&(s=Math.min(s,c),o=Math.min(o,e),l=Math.max(l,c),u=Math.max(u,e))}return await e.crop([s,o,l,u])}pad_image(e,t,n,{mode:r="constant",center:a=!1,constant_values:i=0}={}){const[s,o,l]=t;let u,d;if("number"==typeof n?(u=n,d=n):(u=n.width,d=n.height),u!==o||d!==s){const n=new Float32Array(u*d*l);if(Array.isArray(i))for(let e=0;e<n.length;++e)n[e]=i[e%l];else 0!==i&&n.fill(i);const[c,p]=a?[Math.floor((u-o)/2),Math.floor((d-s)/2)]:[0,0];for(let t=0;t<s;++t){const r=(t+p)*u,a=t*o;for(let t=0;t<o;++t){const i=(r+t+c)*l,s=(a+t)*l;for(let t=0;t<l;++t)n[i+t]=e[s+t]}}if("symmetric"===r){if(a)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const t=s-1,r=o-1;for(let a=0;a<d;++a){const i=a*u,d=A(a,t)*o;for(let t=0;t<u;++t){if(a<s&&t<o)continue;const u=(i+t)*l,c=(d+A(t,r))*l;for(let t=0;t<l;++t)n[u+t]=e[c+t]}}}e=n,t=[d,u,l]}return[e,t]}rescale(e){for(let t=0;t<e.length;++t)e[t]=this.rescale_factor*e[t]}get_resize_output_image_size(e,t){const[n,r]=e.size;let a,i;if(this.do_thumbnail){const{height:e,width:n}=t;a=Math.min(e,n)}else Number.isInteger(t)?(a=t,i=this.config.max_size??a):void 0!==t&&(a=t.shortest_edge,i=t.longest_edge);if(void 0!==a||void 0!==i){const e=void 0===a?1:Math.max(a/n,a/r),t=n*e,s=r*e,o=void 0===i?1:Math.min(i/t,i/s);let l=Math.floor(Number((t*o).toFixed(2))),u=Math.floor(Number((s*o).toFixed(2)));return void 0!==this.size_divisibility&&([l,u]=Py([l,u],this.size_divisibility)),[l,u]}if(void 0!==t&&void 0!==t.width&&void 0!==t.height){let e=t.width,a=t.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let t=a/r,i=e/n;Math.abs(1-i)<Math.abs(1-t)?t=i:i=t,a=Ry(t*r,this.config.ensure_multiple_of),e=Ry(i*n,this.config.ensure_multiple_of)}return[e,a]}if(void 0!==this.size_divisibility)return Py([n,r],this.size_divisibility);throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(t)}`)}async resize(e){const[t,n]=this.get_resize_output_image_size(e,this.size);return await e.resize(t,n,{resample:this.resample})}async preprocess(e,{do_normalize:t=null,do_pad:n=null,do_convert_rgb:r=null,do_convert_grayscale:a=null,do_flip_channel_order:i=null}={}){this.do_crop_margin&&(e=await this.crop_margin(e));const[s,o]=e.size;if(r??this.do_convert_rgb?e=e.rgb():a&&(e=e.grayscale()),this.do_resize&&(e=await this.resize(e)),this.do_thumbnail&&(e=await this.thumbnail(e,this.size,this.resample)),this.do_center_crop){let t,n;Number.isInteger(this.crop_size)?(t=this.crop_size,n=this.crop_size):(t=this.crop_size.width,n=this.crop_size.height),e=await e.center_crop(t,n)}const l=[e.height,e.width];let u=Float32Array.from(e.data),d=[e.height,e.width,e.channels];if(this.do_rescale&&this.rescale(u),t??this.do_normalize){let t=this.image_mean;Array.isArray(this.image_mean)||(t=new Array(e.channels).fill(t));let n=this.image_std;if(Array.isArray(this.image_std)||(n=new Array(e.channels).fill(t)),t.length!==e.channels||n.length!==e.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${t.length}) and \`image_std\` (${n.length}) must match the number of channels in the image (${e.channels}).`);for(let r=0;r<u.length;r+=e.channels)for(let a=0;a<e.channels;++a)u[r+a]=(u[r+a]-t[a])/n[a]}if(n??this.do_pad)if(this.pad_size){const t=this.pad_image(u,[e.height,e.width,e.channels],this.pad_size);[u,d]=t}else if(this.size_divisibility){const[e,t]=Py([d[1],d[0]],this.size_divisibility);[u,d]=this.pad_image(u,d,{width:e,height:t})}if(i??this.do_flip_channel_order){if(3!==d[2])throw new Error("Flipping channel order is only supported for RGB images.");for(let e=0;e<u.length;e+=3){const t=u[e];u[e]=u[e+2],u[e+2]=t}}return{original_size:[o,s],reshaped_input_size:l,pixel_values:new lc("float32",u,d).permute(2,0,1)}}async _call(e,...t){Array.isArray(e)||(e=[e]);const n=await Promise.all(e.map((e=>this.preprocess(e))));return{pixel_values:gc(n.map((e=>e.pixel_values)),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class Ny extends Dy{post_process_semantic_segmentation(e,t=null){const n=e.logits,r=n.dims[0];if(null!==t&&t.length!==r)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const a=[];for(let e=0;e<r;++e){const r=null!==t?t[e]:null;let i=n[e];null!==r&&(i=uc(i,r,"bilinear",!1));const[s,o]=r??i.dims.slice(-2),l=new lc("int32",new Int32Array(s*o),[s,o]),u=i[0].data,d=l.data;for(let e=1;e<i.dims[0];++e){const t=i[e].data;for(let n=0;n<t.length;++n)t[n]>u[n]&&(u[n]=t[n],d[n]=e)}const c=new Array(i.dims[0]),p=l.data;for(let e=0;e<p.length;++e){const t=p[e];c[t]=t}const h=c.filter((e=>void 0!==e));a.push({segmentation:l,labels:h})}return a}}class Uy extends Dy{}class Wy extends Uy{}class Fy extends Dy{}class Ly extends Dy{}class Vy extends Dy{}class Gy extends Vy{}class Hy extends Dy{}class qy extends Dy{}class jy extends Dy{constructor(e){super(e),this.crop_pct=this.config.crop_pct??.875}async resize(e){const t=this.size?.shortest_edge;if(void 0===t)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(t<384){const n=Math.floor(t/this.crop_pct),[r,a]=this.get_resize_output_image_size(e,{shortest_edge:n});e=await e.resize(r,a,{resample:this.resample}),e=await e.center_crop(t,t)}else e=await e.resize(t,t,{resample:this.resample});return e}}class Ky extends jy{}class Yy extends Dy{}class Xy extends Dy{}class Qy extends Dy{constructor(e){super(e),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map((e=>e*e)))}}class Jy extends Dy{}class Zy extends Dy{}class ew extends Dy{}class tw extends Dy{}class nw extends Dy{}class rw extends nw{}class aw extends Dy{post_process_object_detection(...e){return Oy(...e)}}class iw extends aw{}class sw extends Dy{post_process_object_detection(...e){return Oy(...e)}}class ow extends Dy{}class lw extends Dy{}class uw extends Dy{pad_image(e,t,n,r={}){const[a,i,s]=t;let o=this.image_mean;Array.isArray(this.image_mean)||(o=new Array(s).fill(o));let l=this.image_std;Array.isArray(l)||(l=new Array(s).fill(o));const u=o.map(((e,t)=>-e/l[t]));return super.pad_image(e,t,n,{center:!0,constant_values:u,...r})}}class dw extends uw{}class cw extends Dy{async _call(e){const t=await super._call(e),n=[t.pixel_values.dims[0],64,64],r=new lc("int64",new BigInt64Array(n.reduce(((e,t)=>e*t))).fill(1n),n);return{...t,pixel_mask:r}}post_process_object_detection(...e){return Oy(...e)}remove_low_and_no_objects(e,t,n,r){let a=[],i=[],s=[];for(let o=0;o<e.dims[0];++o){let l=e[o],u=t[o],d=L(l.data)[1];if(d===r)continue;let c=W(l.data)[d];c>n&&(a.push(u),i.push(c),s.push(d))}return[a,i,s]}check_segment_validity(e,t,n,r=.5,a=.8){let i=[],s=0,o=0;const l=t[n].data;for(let t=0;t<e.length;++t)e[t]===n&&(i.push(t),++s),l[t]>=r&&++o;let u=s>0&&o>0;return u&&(u=s/o>a),[u,i]}compute_segments(e,t,n,r,a,i=null,s=null){let[o,l]=s??e[0].dims,u=new lc("int32",new Int32Array(o*l),[o,l]),d=[];if(null!==s)for(let t=0;t<e.length;++t)e[t]=uc(e[t],s,"bilinear",!1);let c=new Int32Array(e[0].data.length),p=new Float32Array(e[0].data.length);for(let n=0;n<e.length;++n){let r=t[n];const a=e[n].data;for(let e=0;e<a.length;++e)a[e]*=r,a[e]>p[e]&&(c[e]=n,p[e]=a[e])}let h=0;const f=u.data;for(let i=0;i<n.length;++i){let s=n[i],[o,l]=this.check_segment_validity(c,e,i,r,a);if(o){++h;for(let e of l)f[e]=h;d.push({id:h,label_id:s,score:t[i]})}}return[u,d]}post_process_panoptic_segmentation(e,t=.5,n=.5,r=.8,a=null,i=null){null===a&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),a=new Set);const s=e.logits,o=e.pred_masks.sigmoid();let[l,u,d]=s.dims;if(d-=1,null!==i&&i.length!==l)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let c=[];for(let e=0;e<l;++e){let l=null!==i?i[e]:null,u=s[e],p=o[e],[h,f,m]=this.remove_low_and_no_objects(u,p,t,d);if(0===m.length){let[e,t]=l??p.dims.slice(-2),n=new lc("int32",new Int32Array(e*t).fill(-1),[e,t]);c.push({segmentation:n,segments_info:[]});continue}let[g,_]=this.compute_segments(h,f,m,n,r,a,l);c.push({segmentation:g,segments_info:_})}return c}post_process_instance_segmentation(){throw Error("Not implemented yet")}}class pw extends Dy{post_process_object_detection(...e){return Oy(...e)}}class hw extends Dy{reshape_input_points(e,t,n,r=!1){let a=S(e=structuredClone(e));if(3===a.length)r||(a=[1,...a]),e=[e];else if(4!==a.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let r=0;r<e.length;++r){let a=t[r],i=n[r],s=[i[0]/a[0],i[1]/a[1]];for(let t=0;t<e[r].length;++t)for(let n=0;n<e[r][t].length;++n)for(let a=0;a<e[r][t][n].length;++a)e[r][t][n][a]*=s[a%2]}return new lc("float32",Float32Array.from(e.flat(1/0)),a)}add_input_labels(e,t){let n=S(e);if(2===n.length)n=[1,...n],e=[e];else if(3!==n.length)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(n.some(((e,n)=>e!==t.dims[n])))throw Error(`The first ${n.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new lc("int64",e.flat(1/0).map(BigInt),n)}async _call(e,{input_points:t=null,input_labels:n=null,input_boxes:r=null}={}){const a=await super._call(e);if(t&&(a.input_points=this.reshape_input_points(t,a.original_sizes,a.reshaped_input_sizes)),n){if(!a.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");a.input_labels=this.add_input_labels(n,a.input_points)}return r&&(a.input_boxes=this.reshape_input_points(r,a.original_sizes,a.reshaped_input_sizes,!0)),a}async post_process_masks(e,t,n,{mask_threshold:r=0,binarize:a=!0,pad_size:i=null}={}){const s=[],o=[(i=i??this.pad_size).height,i.width];for(let i=0;i<t.length;++i){const l=t[i],u=n[i];let d=await dc(e[i],{mode:"bilinear",size:o});if(d=d.slice(null,null,[0,u[0]],[0,u[1]]),d=await dc(d,{mode:"bilinear",size:l}),a){const e=d.data,t=new Uint8Array(e.length);for(let n=0;n<e.length;++n)e[n]>r&&(t[n]=1);d=new lc("bool",t,d.dims)}s.push(d)}return s}generate_crop_boxes(e,t,{crop_n_layers:n=0,overlap_ratio:r=512/1500,points_per_crop:a=32,crop_n_points_downscale_factor:i=1}={}){}}class fw extends Dy{pad_image(e,t,n,r={}){const[a,i,s]=t;return super.pad_image(e,t,{width:i+(n-i%n)%n,height:a+(n-a%n)%n},{mode:"symmetric",center:!1,constant_values:-1,...r})}}class mw extends Dy{async _call(e,t){Array.isArray(e)||(e=[e]),Array.isArray(t)||(t=[t]);const n=await Promise.all(e.map((e=>this.preprocess(e)))),r=await Promise.all(t.map((e=>this.preprocess(e,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0}))));return{pixel_values:gc(n.map(((e,t)=>mc([e.pixel_values,r[t].pixel_values],0))),0),original_sizes:n.map((e=>e.original_size)),reshaped_input_sizes:n.map((e=>e.reshaped_input_size))}}}class gw extends By{constructor(e){super(e),this.config.mel_filters??=Cy(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=Ty(this.config.n_fft,"hann")}async _extract_fbank_features(e){const t=await Iy(e,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:this.config.nb_max_frames}),n=t.data,r=L(n)[0];for(let e=0;e<n.length;++e)n[e]=(Math.max(n[e],r-8)+4)/4;return t}async _call(e){let t;return My(e,"WhisperFeatureExtractor"),e.length>this.config.n_samples?(console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),t=e.slice(0,this.config.n_samples)):(t=new Float32Array(this.config.n_samples),t.set(e)),{input_features:(await this._extract_fbank_features(t)).unsqueeze_(0)}}}class _w extends By{_zero_mean_unit_var_norm(e){const t=e.reduce(((e,t)=>e+t),0)/e.length,n=e.reduce(((e,n)=>e+(n-t)**2),0)/e.length;return e.map((e=>(e-t)/Math.sqrt(n+1e-7)))}async _call(e){My(e,"Wav2Vec2FeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));let t=e;this.config.do_normalize&&(t=this._zero_mean_unit_var_norm(t));const n=[1,t.length];return{input_values:new lc("float32",t,n),attention_mask:new lc("int64",new BigInt64Array(t.length).fill(1n),n)}}}class yw extends By{constructor(e){super(e);const t=this.config.sampling_rate,n=Cy(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=Ty(400,"povey",{periodic:!1})}async _extract_fbank_features(e,t){return Iy(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e,{padding:t=!0,pad_to_multiple_of:n=2,do_normalize_per_mel_bins:r=!0,return_attention_mask:a=!0}={}){My(e,"SeamlessM4TFeatureExtractor");let i,s=await this._extract_fbank_features(e,this.config.max_length);if(r){const[e,t]=s.dims,n=s.data;for(let r=0;r<t;++r){let a=0;for(let i=0;i<e;++i)a+=n[i*t+r];const i=a/e;let s=0;for(let a=0;a<e;++a)s+=(n[a*t+r]-i)**2;s/=e-1;const o=Math.sqrt(s+1e-7);for(let a=0;a<e;++a){const e=a*t+r;n[e]=(n[e]-i)/o}}}if(t){const[e,t]=s.dims,r=s.data,o=e%n;if(o>0){const n=new Float32Array(t*(e+o));n.set(r),n.fill(this.config.padding_value,r.length);const l=e+o;s=new lc(s.type,n,[l,t]),a&&(i=new lc("int64",new BigInt64Array(l),[1,l]),i.data.fill(1n,0,e))}}const[o,l]=s.dims,u=this.config.stride;if(0!=o%u)throw new Error(`The number of frames (${o}) must be a multiple of the stride (${u}).`);const d=s.view(1,Math.floor(o/u),l*u),c={input_features:d};if(a){const e=d.dims[1],t=new BigInt64Array(e);if(i){const e=i.data;for(let n=1,r=0;n<o;n+=u,++r)t[r]=e[n]}else t.fill(1n);c.attention_mask=new lc("int64",t,[1,e])}return c}}class ww extends By{constructor(e){super(e);const t=this.config.sampling_rate,n=Cy(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=Ty(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(e,t){return Iy(e,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,max_num_frames:t,transpose:!0})}async _call(e){My(e,"ASTFeatureExtractor");const t=await this._extract_fbank_features(e,this.config.max_length);if(this.config.do_normalize){const e=2*this.std,n=t.data;for(let t=0;t<n.length;++t)n[t]=(n[t]-this.mean)/e}return{input_values:t.unsqueeze_(0)}}}class bw extends By{constructor(e){super(e),this.mel_filters=Cy(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=Cy(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=Ty(this.config.fft_window_size,"hann")}async _get_input_mel(e,t,n,r){let a,i=!1;const s=e.length-t;if(s>0){if("rand_trunc"!==n)throw new Error(`Truncation strategy "${n}" not implemented`);{i=!0;const n=Math.floor(Math.random()*(s+1));e=e.subarray(n,n+t),a=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}}else{if(s<0){let n=new Float64Array(t);if(n.set(e),"repeat"===r)for(let r=e.length;r<t;r+=e.length)n.set(e.subarray(0,Math.min(e.length,t-r)),r);else if("repeatpad"===r)for(let t=e.length;t<-s;t+=e.length)n.set(e,t);e=n}if("fusion"===n)throw new Error(`Truncation strategy "${n}" not implemented`);a=await this._extract_fbank_features(e,this.mel_filters_slaney,this.config.nb_max_samples)}return a.unsqueeze_(0)}async _extract_fbank_features(e,t,n=null){return Iy(e,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:t,log_mel:"dB",max_num_frames:n,do_pad:!1,transpose:!0})}async _call(e,{max_length:t=null}={}){return My(e,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(e,t??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}class vw extends By{async _call(e){My(e,"PyAnnoteFeatureExtractor"),e instanceof Float64Array&&(e=new Float32Array(e));const t=[1,1,e.length];return{input_values:new lc("float32",e,t)}}samples_to_frames(e){return(e-this.config.offset)/this.config.step}post_process_speaker_diarization(e,t){const n=t/this.samples_to_frames(t)/this.config.sampling_rate,r=[];for(const t of e.tolist()){const e=[];let a=-1;for(let n=0;n<t.length;++n){const r=W(t[n]),[i,s]=L(r),[o,l]=[n,n+1];s!==a?(a=s,e.push({id:s,start:o,end:l,score:i})):(e.at(-1).end=l,e.at(-1).score+=i)}r.push(e.map((({id:e,start:t,end:r,score:a})=>({id:e,start:t*n,end:r*n,confidence:a/(r-t)}))))}return r}}class $w extends By{constructor(e){super(e);const t=this.config.sampling_rate,n=Cy(256,this.config.num_mel_bins,20,Math.floor(t/2),t,null,"kaldi",!0);for(let e=0;e<n.length;++e)n[e].push(0);this.mel_filters=n,this.window=Ty(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(e){return Iy(e=e.map((e=>32768*e)),this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1.192092955078125e-7,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(e){My(e,"WeSpeakerFeatureExtractor");const t=(await this._extract_fbank_features(e)).unsqueeze_(0);if(null===this.config.fbank_centering_span){const e=t.mean(1).data,n=t.data,[r,a,i]=t.dims;for(let t=0;t<r;++t){const r=t*a*i,s=t*i;for(let t=0;t<a;++t){const a=r+t*i;for(let t=0;t<i;++t)n[a+t]-=e[s+t]}}}return{input_features:t}}}class xw extends By{}class kw extends ${constructor(e){super(),this.feature_extractor=e}async _call(e,...t){return await this.feature_extractor(e,...t)}}class Sw extends kw{async _call(...e){return await this.feature_extractor(...e)}post_process_masks(...e){return this.feature_extractor.post_process_masks(...e)}reshape_input_points(...e){return this.feature_extractor.reshape_input_points(...e)}}class Ew extends kw{async _call(e){return await this.feature_extractor(e)}}class Cw extends kw{async _call(e){return await this.feature_extractor(e)}}class Aw extends kw{async _call(e){return await this.feature_extractor(e)}post_process_speaker_diarization(...e){return this.feature_extractor.post_process_speaker_diarization(...e)}}class Iw extends kw{async _call(e){return await this.feature_extractor(e)}}class Tw extends kw{}class zw extends kw{constructor(e){super(e);const{tasks_answer_post_processing_type:t,task_prompts_without_inputs:n,task_prompts_with_input:r}=e.config;this.tasks_answer_post_processing_type=new Map(Object.entries(t??{})),this.task_prompts_without_inputs=new Map(Object.entries(n??{})),this.task_prompts_with_input=new Map(Object.entries(r??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(e){"string"==typeof e&&(e=[e]);const t=[];for(const n of e)if(this.task_prompts_without_inputs.has(n))t.push(this.task_prompts_without_inputs.get(n));else{for(const[e,r]of this.task_prompts_with_input)if(n.includes(e)){t.push(r.replaceAll("{input}",n).replaceAll(e,""));break}t.length!==e.length&&t.push(n)}return t}post_process_generation(e,t,n){const r=this.tasks_answer_post_processing_type.get(t)??"pure_text";let a;switch(e=e.replaceAll("<s>","").replaceAll("</s>",""),r){case"pure_text":a=e;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const i="ocr"===r?"quad_boxes":"bboxes",s=e.matchAll(this.regexes[i]),o=[],l=[];for(const[e,t,...r]of s)o.push(t?t.trim():o.at(-1)??""),l.push(r.map(((e,t)=>(Number(e)+.5)/this.size_per_bin*n[t%2])));a={labels:o,[i]:l};break;default:throw new Error(`Task "${t}" (of type "${r}") not yet implemented.`)}return{[t]:a}}}class Ow{static FEATURE_EXTRACTOR_CLASS_MAPPING={ImageFeatureExtractor:Dy,WhisperFeatureExtractor:gw,ViTFeatureExtractor:Yy,MobileViTFeatureExtractor:nw,MobileViTImageProcessor:rw,MobileNetV1FeatureExtractor:Jy,MobileNetV2FeatureExtractor:Zy,MobileNetV3FeatureExtractor:ew,MobileNetV4FeatureExtractor:tw,OwlViTFeatureExtractor:aw,Owlv2ImageProcessor:iw,CLIPFeatureExtractor:Vy,CLIPImageProcessor:Gy,Florence2Processor:zw,ChineseCLIPFeatureExtractor:Hy,SiglipImageProcessor:qy,ConvNextFeatureExtractor:jy,ConvNextImageProcessor:Ky,SegformerFeatureExtractor:Ny,BitImageProcessor:Fy,DPTImageProcessor:Wy,DPTFeatureExtractor:Uy,GLPNFeatureExtractor:Ly,BeitFeatureExtractor:lw,DeiTFeatureExtractor:ow,DetrFeatureExtractor:cw,RTDetrImageProcessor:sw,YolosFeatureExtractor:pw,DonutFeatureExtractor:uw,NougatImageProcessor:dw,EfficientNetImageProcessor:Qy,ViTImageProcessor:Xy,VitMatteImageProcessor:mw,SamImageProcessor:hw,Swin2SRImageProcessor:fw,Wav2Vec2FeatureExtractor:_w,SeamlessM4TFeatureExtractor:yw,SpeechT5FeatureExtractor:xw,ASTFeatureExtractor:ww,ClapFeatureExtractor:bw,PyAnnoteFeatureExtractor:vw,WeSpeakerFeatureExtractor:$w};static PROCESSOR_CLASS_MAPPING={WhisperProcessor:Ew,Wav2Vec2ProcessorWithLM:Cw,PyAnnoteProcessor:Aw,SamProcessor:Sw,SpeechT5Processor:Iw,OwlViTProcessor:Tw,Florence2Processor:zw};static async from_pretrained(e,{progress_callback:t=null,config:n=null,cache_dir:r=null,local_files_only:a=!1,revision:i="main"}={}){let s=n??await N(e,"preprocessor_config.json",!0,{progress_callback:t,config:n,cache_dir:r,local_files_only:a,revision:i}),o=s.feature_extractor_type??s.image_processor_type,l=this.FEATURE_EXTRACTOR_CLASS_MAPPING[o];if(!l){if(void 0===s.size)throw new Error(`Unknown Feature Extractor type: ${o}`);console.warn(`Feature extractor type "${o}" not found, assuming ImageFeatureExtractor due to size parameter in config.`),l=Dy}return new(this.PROCESSOR_CLASS_MAPPING[s.processor_class]??kw)(new l(s))}}async function Mw(e){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>by.read(e))))}async function Rw(e,t){return Array.isArray(e)||(e=[e]),await Promise.all(e.map((e=>"string"==typeof e||e instanceof URL?async function(e,t){if("undefined"==typeof AudioContext)throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const n=await(await R(e)).arrayBuffer(),r=new AudioContext({sampleRate:t});void 0===t&&console.warn(`No sampling rate provided, using default of ${r.sampleRate}Hz.`);const a=await r.decodeAudioData(n);let i;if(2===a.numberOfChannels){const e=Math.sqrt(2),t=a.getChannelData(0),n=a.getChannelData(1);i=new Float32Array(t.length);for(let r=0;r<a.length;++r)i[r]=e*(t[r]+n[r])/2}else i=a.getChannelData(0);return i}(e,t):e instanceof Float64Array?new Float32Array(e):e)))}function Pw(e,t){t&&(e=e.map((e=>0|e)));const[n,r,a,i]=e;return{xmin:n,ymin:r,xmax:a,ymax:i}}class Bw extends ${constructor({task:e,model:t,tokenizer:n=null,processor:r=null}){super(),this.task=e,this.model=t,this.tokenizer=n,this.processor=r}async dispose(){await this.model.dispose()}}class Dw extends Bw{_key="generated_text";constructor(e){super(e)}async _call(e,t={}){Array.isArray(e)||(e=[e]),this.model.config.prefix&&(e=e.map((e=>this.model.config.prefix+e)));const n=this.model.config.task_specific_params;n&&n[this.task]&&n[this.task].prefix&&(e=e.map((e=>n[this.task].prefix+e)));const r=this.tokenizer,a={padding:!0,truncation:!0};let i;i=this instanceof Nw&&"_build_translation_inputs"in r?r._build_translation_inputs(e,a,t):r(e,a);const s=await this.model.generate({...i,...t});return r.batch_decode(s,{skip_special_tokens:!0}).map((e=>({[this._key]:e})))}}class Nw extends Dw{_key="translation_text";constructor(e){super(e)}}function Uw(e){return Array.isArray(e)&&e.every((e=>"role"in e&&"content"in e))}const Ww=Object.freeze({"text-classification":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{top_k:t=1}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),r=await this.model(n),a="multi_label_classification"===this.model.config.problem_type?e=>e.sigmoid():e=>new lc("float32",W(e.data),e.dims),i=this.model.config.id2label,s=[];for(const e of r.logits){const n=a(e),r=await cc(n,t),o=r[0].tolist(),l=r[1].tolist().map(((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:o[t]})));1===t?s.push(...l):s.push(l)}return Array.isArray(e)||1===t?s:s[0]}},model:ny,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{ignore_labels:t=["O"]}={}){const n=Array.isArray(e),r=this.tokenizer(n?e:[e],{padding:!0,truncation:!0}),a=(await this.model(r)).logits,i=this.model.config.id2label,s=[];for(let e=0;e<a.dims[0];++e){const n=r.input_ids[e],o=a[e],l=[];for(let e=0;e<o.dims[0];++e){const r=o[e],a=L(r.data)[1],s=i?i[a]:`LABEL_${a}`;if(t.includes(s))continue;const u=this.tokenizer.decode([n[e].item()],{skip_special_tokens:!0});if(""===u)continue;const d=W(r.data);l.push({entity:s,score:d[a],index:e,word:u})}s.push(l)}return n?s:s[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[z_]},default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t,{top_k:n=1}={}){const r=this.tokenizer(e,{text_pair:t,padding:!0,truncation:!0}),{start_logits:a,end_logits:i}=await this.model(r),s=r.input_ids.tolist(),o=r.attention_mask.tolist(),l=this.tokenizer.all_special_ids,u=[];for(let e=0;e<a.dims[0];++e){const t=s[e],r=t.findIndex((e=>e==this.tokenizer.sep_token_id)),d=(o[e].map(((e,n)=>1==e&&(0===n||n>r&&-1===l.findIndex((e=>e==t[n]))))),a[e].tolist()),c=i[e].tolist();for(let n=1;n<d.length;++n)(0==o[e]||n<=r||-1!==l.findIndex((e=>e==t[n])))&&(d[n]=-1/0,c[n]=-1/0);const p=W(d).map(((e,t)=>[e,t])),h=W(c).map(((e,t)=>[e,t]));p[0][0]=0,h[0][0]=0;const f=C(p,h).filter((e=>e[0][1]<=e[1][1])).map((e=>[e[0][1],e[1][1],e[0][0]*e[1][0]])).sort(((e,t)=>t[2]-e[2]));for(let e=0;e<Math.min(f.length,n);++e){const[n,r,a]=f[e],i=t.slice(n,r+1),s=this.tokenizer.decode(i,{skip_special_tokens:!0});u.push({answer:s,score:a})}}return 1===n?u[0]:u}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[P_]},default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.tokenizer(e,{padding:!0,truncation:!0}),{logits:r}=await this.model(n),a=[],i=n.input_ids.tolist();for(let e=0;e<i.length;++e){const n=i[e],s=n.findIndex((e=>e==this.tokenizer.mask_token_id));if(-1===s)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const o=r[e][s],l=await cc(new lc("float32",W(o.data),o.dims),t),u=l[0].tolist(),d=l[1].tolist();a.push(d.map(((e,t)=>{const r=n.slice();return r[s]=e,{score:u[t],token:Number(e),token_str:this.tokenizer.model.vocab[e],sequence:this.tokenizer.decode(r,{skip_special_tokens:!0})}})))}return Array.isArray(e)?a:a[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[R_]},default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:Cf,pipeline:class extends Dw{_key="summary_text";constructor(e){super(e)}},model:ry,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:Cf,pipeline:Nw,model:ry,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:Cf,pipeline:Dw,model:ry,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t={}){let n,r=!1,a=!1;if("string"==typeof e)n=e=[e];else if(Array.isArray(e)&&e.every((e=>"string"==typeof e)))r=!0,n=e;else{if(Uw(e))e=[e];else{if(!Array.isArray(e)||!e.every(Uw))throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");r=!0}a=!0,n=e.map((e=>this.tokenizer.apply_chat_template(e,{tokenize:!1,add_generation_prompt:!0})))}const i=t.add_special_tokens??!1,s=!a&&(t.return_full_text??!0);this.tokenizer.padding_side="left";const o=this.tokenizer(n,{add_special_tokens:i,padding:!0,truncation:!0}),l=await this.model.generate({...o,...t}),u=this.tokenizer.batch_decode(l,{skip_special_tokens:!0});let d;!s&&o.input_ids.dims.at(-1)>0&&(d=this.tokenizer.batch_decode(o.input_ids,{skip_special_tokens:!0}).map((e=>e.length)));const c=Array.from({length:e.length},(e=>[]));for(let t=0;t<u.length;++t){const n=Math.floor(t/l.dims[0]*e.length);d&&(u[t]=u[t].slice(d[n])),c[n].push({generated_text:a?[...e[n],{role:"assistant",content:u[t]}]:u[t]})}return r||1!==c.length?c:c[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[M_]},default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map((([e,t])=>[e.toLowerCase(),t]))),this.entailment_id=this.label2id.entailment,void 0===this.entailment_id&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,void 0===this.contradiction_id&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(e,t,{hypothesis_template:n="This example is {}.",multi_label:r=!1}={}){const a=Array.isArray(e);a||(e=[e]),Array.isArray(t)||(t=[t]);const i=t.map((e=>n.replace("{}",e))),s=r||1===t.length,o=[];for(const n of e){const e=[];for(const t of i){const r=this.tokenizer(n,{text_pair:t,padding:!0,truncation:!0}),a=await this.model(r);s?e.push([a.logits.data[this.contradiction_id],a.logits.data[this.entailment_id]]):e.push(a.logits.data[this.entailment_id])}const r=(s?e.map((e=>W(e)[1])):W(e)).map(((e,t)=>[e,t])).sort(((e,t)=>t[0]-e[0]));o.push({sequence:n,labels:r.map((e=>t[e[1]])),scores:r.map((e=>e[0]))})}return a?o:o[0]}},model:ny,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=this.processor.feature_extractor.config.sampling_rate,r=await Rw(e,n),a=this.model.config.id2label,i=[];for(const e of r){const n=await this.processor(e),r=(await this.model(n)).logits[0],s=await cc(new lc("float32",W(r.data),r.dims),t),o=s[0].tolist(),l=s[1].tolist().map(((e,t)=>({label:a?a[e]:`LABEL_${e}`,score:o[t]})));i.push(l)}return Array.isArray(e)?i:i[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[q_]},processor:Ow,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a sound of {}."}={}){const r=!Array.isArray(e);r&&(e=[e]);const a=t.map((e=>n.replace("{}",e))),i=this.tokenizer(a,{padding:!0,truncation:!0}),s=this.processor.feature_extractor.config.sampling_rate,o=await Rw(e,s),l=[];for(const e of o){const n=await this.processor(e),r=W((await this.model({...i,...n})).logits_per_audio.data);l.push([...r].map(((e,n)=>({score:e,label:t[n]}))))}return r?l[0]:l}},model:ty,processor:Ow,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t={}){switch(this.model.config.model_type){case"whisper":return this._call_whisper(e,t);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(e,t);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(e,t){t.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),t.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const n=!Array.isArray(e);n&&(e=[e]);const r=this.processor.feature_extractor.config.sampling_rate,a=await Rw(e,r),i=[];for(const e of a){const t=await this.processor(e),n=(await this.model(t)).logits[0],r=[];for(const e of n)r.push(L(e.data)[1]);const a=this.tokenizer.decode(r);i.push({text:a})}return n?i[0]:i}async _call_whisper(e,t){const n=t.return_timestamps??!1,r=t.chunk_length_s??0,a=t.force_full_sequences??!1;let i=t.stride_length_s??null;const s={...t};"word"===n&&(s.return_token_timestamps=!0,s.return_timestamps=!1);const o=!Array.isArray(e);o&&(e=[e]);const l=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,u=this.processor.feature_extractor.config.hop_length,d=this.processor.feature_extractor.config.sampling_rate,c=await Rw(e,d),p=[];for(const e of c){let t=[];if(r>0){if(null===i)i=r/6;else if(r<=i)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const n=d*r,a=d*i,s=n-2*a;let o=0;for(;;){const r=o+n,i=e.subarray(o,r),l=await this.processor(i),u=0===o,d=r>=e.length;if(t.push({stride:[i.length,u?0:a,d?0:a],input_features:l.input_features,is_last:d}),d)break;o+=s}}else t=[{stride:[e.length,0,0],input_features:(await this.processor(e)).input_features,is_last:!0}];for(const e of t){s.num_frames=Math.floor(e.stride[0]/u);const t=await this.model.generate({inputs:e.input_features,...s});"word"===n?(e.tokens=t.sequences.tolist()[0],e.token_timestamps=t.token_timestamps.tolist()[0].map((e=>K(e,2)))):e.tokens=t[0].tolist(),e.stride=e.stride.map((e=>e/d))}const[o,c]=this.tokenizer._decode_asr(t,{time_precision:l,return_timestamps:n,force_full_sequences:a});p.push({text:o,...c})}return o?p[0]:p}},model:[class extends x_{static MODEL_CLASS_MAPPINGS=[C_]},class extends x_{static MODEL_CLASS_MAPPINGS=[H_]}],processor:Ow,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:Cf,pipeline:class extends Bw{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(e){super(e),this.vocoder=e.vocoder??null}async _call(e,{speaker_embeddings:t=null}={}){return this.processor?this._call_text_to_spectrogram(e,{speaker_embeddings:t}):this._call_text_to_waveform(e)}async _call_text_to_waveform(e){const t=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:n}=await this.model(t),r=this.model.config.sampling_rate;return{audio:n.data,sampling_rate:r}}async _call_text_to_spectrogram(e,{speaker_embeddings:t}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await ty.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),("string"==typeof t||t instanceof URL)&&(t=new Float32Array(await(await fetch(t)).arrayBuffer())),t instanceof Float32Array)t=new lc("float32",t,[1,t.length]);else if(!(t instanceof lc))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:n}=this.tokenizer(e,{padding:!0,truncation:!0}),{waveform:r}=await this.model.generate_speech(n,t,{vocoder:this.vocoder}),a=this.processor.feature_extractor.config.sampling_rate;return{audio:r.data,sampling_rate:a}}},model:[class extends x_{static MODEL_CLASS_MAPPINGS=[I_]},class extends x_{static MODEL_CLASS_MAPPINGS=[A_]}],processor:[Ow,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t={}){const n=Array.isArray(e),r=await Mw(e),{pixel_values:a}=await this.processor(r),i=[];for(const e of a){e.dims=[1,...e.dims];const n=await this.model.generate({inputs:e,...t}),r=this.tokenizer.batch_decode(n,{skip_special_tokens:!0}).map((e=>({generated_text:e.trim()})));i.push(r)}return n?i:i[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[B_]},processor:Ow,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{top_k:t=5}={}){const n=await Mw(e),{pixel_values:r}=await this.processor(n),a=await this.model({pixel_values:r}),i=this.model.config.id2label,s=[];for(const e of a.logits){const n=await cc(new lc("float32",W(e.data),e.dims),t),r=n[0].tolist(),a=n[1].tolist().map(((e,t)=>({label:i?i[e]:`LABEL_${e}`,score:r[t]})));s.push(a)}return Array.isArray(e)?s:s[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[U_]},processor:Ow,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:class extends Bw{constructor(e){super(e),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(e,{threshold:t=.5,mask_threshold:n=.5,overlap_mask_area_threshold:r=.8,label_ids_to_fuse:a=null,target_sizes:i=null,subtask:s=null}={}){if(Array.isArray(e)&&1!==e.length)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const o=await Mw(e),l=o.map((e=>[e.height,e.width])),{pixel_values:u,pixel_mask:d}=await this.processor(o),c=await this.model({pixel_values:u,pixel_mask:d});let p=null;if(null!==s)p=this.subtasks_mapping[s];else for(let[e,t]of Object.entries(this.subtasks_mapping))if(t in this.processor.feature_extractor){p=this.processor.feature_extractor[t].bind(this.processor.feature_extractor),s=e;break}const h=this.model.config.id2label,f=[];if("panoptic"===s||"instance"===s){const e=p(c,t,n,r,a,i??l)[0],s=e.segmentation;for(const t of e.segments_info){const e=new Uint8ClampedArray(s.data.length);for(let n=0;n<s.data.length;++n)s.data[n]===t.id&&(e[n]=255);const n=new by(e,s.dims[1],s.dims[0],1);f.push({score:t.score,label:h[t.label_id],mask:n})}}else{if("semantic"!==s)throw Error(`Subtask ${s} not supported.`);{const{segmentation:e,labels:t}=p(c,i??l)[0];for(const n of t){const t=new Uint8ClampedArray(e.data.length);for(let r=0;r<e.data.length;++r)e.data[r]===n&&(t[r]=255);const r=new by(t,e.dims[1],e.dims[0],1);f.push({score:null,label:h[n],mask:r})}}}return f}},model:[class extends x_{static MODEL_CLASS_MAPPINGS=[L_]},class extends x_{static MODEL_CLASS_MAPPINGS=[V_]}],processor:Ow,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"zero-shot-image-classification":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t,{hypothesis_template:n="This is a photo of {}"}={}){const r=Array.isArray(e),a=await Mw(e),i=t.map((e=>n.replace("{}",e))),s=this.tokenizer(i,{padding:"siglip"!==this.model.config.model_type||"max_length",truncation:!0}),{pixel_values:o}=await this.processor(a),l=await this.model({...s,pixel_values:o}),u="siglip"===this.model.config.model_type?e=>e.sigmoid().data:e=>W(e.data),d=[];for(const e of l.logits_per_image){const n=[...u(e)].map(((e,n)=>({score:e,label:t[n]})));n.sort(((e,t)=>t.score-e.score)),d.push(n)}return r?d:d[0]}},model:ty,processor:Ow,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{threshold:t=.9,percentage:n=!1}={}){const r=Array.isArray(e);if(r&&1!==e.length)throw Error("Object detection pipeline currently only supports a batch size of 1.");const a=await Mw(e),i=n?null:a.map((e=>[e.height,e.width])),{pixel_values:s,pixel_mask:o}=await this.processor(a),l=await this.model({pixel_values:s,pixel_mask:o}),u=this.processor.feature_extractor.post_process_object_detection(l,t,i),d=this.model.config.id2label,c=u.map((e=>e.boxes.map(((t,r)=>({score:e.scores[r],label:d[e.classes[r]],box:Pw(t,!n)})))));return r?c:c[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[W_]},processor:Ow,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t,{threshold:n=.1,top_k:r=null,percentage:a=!1}={}){const i=Array.isArray(e),s=await Mw(e),o=this.tokenizer(t,{padding:!0,truncation:!0}),l=await this.processor(s),u=[];for(let e=0;e<s.length;++e){const i=s[e],d=a?null:[[i.height,i.width]],c=l.pixel_values[e].unsqueeze_(0),p=await this.model({...o,pixel_values:c}),h=this.processor.feature_extractor.post_process_object_detection(p,n,d,!0)[0];let f=h.boxes.map(((e,n)=>({score:h.scores[n],label:t[h.classes[n]],box:Pw(e,!a)}))).sort(((e,t)=>t.score-e.score));null!==r&&(f=f.slice(0,r)),u.push(f)}return i?u:u[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[F_]},processor:Ow,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,t,n={}){throw new Error("This pipeline is not yet supported in Transformers.js v3.")}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[N_]},processor:Ow,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:class extends Bw{constructor(e){super(e)}async _call(e){const t=await Mw(e),n=await this.processor(t),r=await this.model(n),a=[];for(const e of r.reconstruction){const t=e.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");a.push(by.fromTensor(t))}return a.length>1?a:a[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[X_]},processor:Ow,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:class extends Bw{constructor(e){super(e)}async _call(e){const t=await Mw(e),n=await this.processor(t),{predicted_depth:r}=await this.model(n),a=[];for(let e=0;e<t.length;++e){const n=uc(r[e],t[e].size.reverse(),"bilinear",!1),i=n.mul_(255/L(n.data)[0]).to("uint8");a.push({predicted_depth:r[e],depth:by.fromTensor(i)})}return a.length>1?a:a[0]}},model:class extends x_{static MODEL_CLASS_MAPPINGS=[Q_]},processor:Ow,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:Cf,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{pooling:t="none",normalize:n=!1,quantize:r=!1,precision:a="binary"}={}){const i=this.tokenizer(e,{padding:!0,truncation:!0}),s=await this.model(i);let o=s.last_hidden_state??s.logits??s.token_embeddings;if("none"===t);else if("mean"===t)o=function(e,t){const n=e.data,r=t.data,a=[e.dims[0],e.dims[2]],i=new n.constructor(a[0]*a[1]),[s,o,l]=e.dims;let u=0;for(let e=0;e<s;++e){const t=e*l*o;for(let a=0;a<l;++a){let s=0,d=0;const c=e*o,p=t+a;for(let e=0;e<o;++e){const t=Number(r[c+e]);d+=t,s+=n[p+e*l]*t}const h=s/d;i[u++]=h}}return new lc(e.type,i,a)}(o,i.attention_mask);else{if("cls"!==t)throw Error(`Pooling method '${t}' not supported.`);o=o.slice(null,0)}return n&&(o=o.normalize(2,-1)),r&&(o=function(e,t){if(2!==e.dims.length)throw new Error("The tensor must have 2 dimensions");if(e.dims.at(-1)%8!=0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(t))throw new Error("The precision must be either 'binary' or 'ubinary'");const n="binary"===t,r=n?"int8":"uint8",a=n?Int8Array:Uint8Array,i=e.data,s=new a(i.length/8);for(let e=0;e<i.length;++e){const t=i[e]>0?1:0,r=Math.floor(e/8),a=e%8;s[r]|=t<<7-a,n&&0===a&&(s[r]-=128)}return new lc(r,s,[e.dims[0],e.dims[1]/8])}(o,a)),o}},model:ty,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:Ow,pipeline:class extends Bw{constructor(e){super(e)}async _call(e,{pool:t=null}={}){const n=await Mw(e),{pixel_values:r}=await this.processor(n),a=await this.model({pixel_values:r});let i;if(t){if(!("pooler_output"in a))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");i=a.pooler_output}else i=a.last_hidden_state??a.logits??a.image_embeds;return i}},model:[class extends x_{static MODEL_CLASS_MAPPINGS=[J_]},ty],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),Fw=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Lw(e,t=null,{progress_callback:n=null,config:r=null,cache_dir:a=null,local_files_only:i=!1,revision:s="main",device:o=null,dtype:l=null,model_file_name:u=null,session_options:d={}}={}){e=Fw[e]??e;const c=Ww[e.split("_",1)[0]];if(!c)throw Error(`Unsupported pipeline: ${e}. Must be one of [${Object.keys(Ww)}]`);t||(t=c.default.model,console.log(`No model specified. Using default model: "${t}".`));const p={progress_callback:n,config:r,cache_dir:a,local_files_only:i,revision:s,device:o,dtype:l,model_file_name:u,session_options:d},h=new Map([["tokenizer",c.tokenizer],["model",c.model],["processor",c.processor]]),f=await async function(e,t,n){const r=Object.create(null),a=[];for(let[i,s]of e.entries()){if(!s)continue;let e;e=Array.isArray(s)?new Promise((async(e,r)=>{let a;for(let i of s){if(null===i)return void e(null);try{return void e(await i.from_pretrained(t,n))}catch(e){if(e.message?.includes("Unsupported model type"))a=e;else{if(!e.message?.includes("Could not locate file"))return void r(e);a=e}}}r(a)})):s.from_pretrained(t,n),r[i]=e,a.push(e)}await Promise.all(a);for(let[e,t]of Object.entries(r))r[e]=await t;return r}(h,t,p);return f.task=e,x(n,{status:"ready",task:e,model:t}),new(0,c.pipeline)(f)}m.IS_PROCESS_AVAILABLE}},o={};function l(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={exports:{}};return s[e](n,n.exports,l),n.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",r=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},l.a=(a,i,s)=>{var o;s&&((o=[]).d=-1);var l,u,d,c=new Set,p=a.exports,h=new Promise(((e,t)=>{d=t,u=e}));h[t]=p,h[e]=e=>(o&&e(o),c.forEach(e),h.catch((e=>{}))),a.exports=h,i((a=>{var i;l=(a=>a.map((a=>{if(null!==a&&"object"==typeof a){if(a[e])return a;if(a.then){var i=[];i.d=0,a.then((e=>{s[t]=e,r(i)}),(e=>{s[n]=e,r(i)}));var s={};return s[e]=e=>e(i),s}}var o={};return o[e]=e=>{},o[t]=a,o})))(a);var s=()=>l.map((e=>{if(e[n])throw e[n];return e[t]})),u=new Promise((t=>{(i=()=>t(s)).r=0;var n=e=>e!==o&&!c.has(e)&&(c.add(e),e&&!e.d&&(i.r++,e.push(i)));l.map((t=>t[e](n)))}));return i.r?u:s()}),(e=>(e?d(h[n]=e):u(p),r(o)))),o&&o.d<0&&(o.d=0)},i=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);l.r(n);var r={};a=a||[null,i({}),i([]),i(i)];for(var s=2&t&&e;"object"==typeof s&&!~a.indexOf(s);s=i(s))Object.getOwnPropertyNames(s).forEach((t=>r[t]=()=>e[t]));return r.default=()=>e,l.d(n,r),n},l.d=(e,t)=>{for(var n in t)l.o(t,n)&&!l.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l(44)})();